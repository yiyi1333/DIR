/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
Seed:  0
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 4.9560, Train: 0.1571, Val: 0.3460, Test: 0.3030
Epoch: 2, Loss: 4.0543, Train: 0.1643, Val: 0.2520, Test: 0.2310
Epoch: 3, Loss: 3.0386, Train: 0.1786, Val: 0.1800, Test: 0.1700
Epoch: 4, Loss: 2.4868, Train: 0.1429, Val: 0.1640, Test: 0.1510
Epoch: 5, Loss: 2.5045, Train: 0.1429, Val: 0.1620, Test: 0.1490
Epoch: 6, Loss: 2.5449, Train: 0.1429, Val: 0.1620, Test: 0.1490
Epoch: 7, Loss: 2.3431, Train: 0.1429, Val: 0.1620, Test: 0.1490
Epoch: 8, Loss: 2.3865, Train: 0.1429, Val: 0.1620, Test: 0.1490
Epoch: 9, Loss: 2.2091, Train: 0.1429, Val: 0.1620, Test: 0.1490
Epoch: 10, Loss: 2.1174, Train: 0.1429, Val: 0.1620, Test: 0.1490
Epoch: 11, Loss: 2.3368, Train: 0.1429, Val: 0.1620, Test: 0.1490
Epoch: 12, Loss: 2.0968, Train: 0.1429, Val: 0.1620, Test: 0.1490
Epoch: 13, Loss: 2.2362, Train: 0.1429, Val: 0.1620, Test: 0.1490
Epoch: 14, Loss: 2.2333, Train: 0.1429, Val: 0.1620, Test: 0.1510
Epoch: 15, Loss: 1.9870, Train: 0.1500, Val: 0.1660, Test: 0.1560
Epoch: 16, Loss: 2.1810, Train: 0.1500, Val: 0.1740, Test: 0.1580
Epoch: 17, Loss: 2.0806, Train: 0.1643, Val: 0.1760, Test: 0.1590
Epoch: 18, Loss: 2.0301, Train: 0.2286, Val: 0.1900, Test: 0.1670
Epoch: 19, Loss: 2.0282, Train: 0.2643, Val: 0.2120, Test: 0.1840
Epoch: 20, Loss: 2.0593, Train: 0.3357, Val: 0.2280, Test: 0.2110
Epoch: 21, Loss: 1.9056, Train: 0.3500, Val: 0.2540, Test: 0.2350
Epoch: 22, Loss: 1.9957, Train: 0.3571, Val: 0.2560, Test: 0.2440
Epoch: 23, Loss: 2.0390, Train: 0.3857, Val: 0.2720, Test: 0.2620
Epoch: 24, Loss: 2.0347, Train: 0.4000, Val: 0.2840, Test: 0.2690
Epoch: 25, Loss: 1.9444, Train: 0.4071, Val: 0.2700, Test: 0.2600
Epoch: 26, Loss: 1.9013, Train: 0.3929, Val: 0.2580, Test: 0.2610
Epoch: 27, Loss: 2.0051, Train: 0.3571, Val: 0.2440, Test: 0.2390
Epoch: 28, Loss: 2.0009, Train: 0.3357, Val: 0.2280, Test: 0.2320
Epoch: 29, Loss: 1.9507, Train: 0.3500, Val: 0.2340, Test: 0.2300
Epoch: 30, Loss: 1.9642, Train: 0.3786, Val: 0.2220, Test: 0.2240
Epoch: 31, Loss: 1.8746, Train: 0.3786, Val: 0.2240, Test: 0.2160
Epoch: 32, Loss: 1.8297, Train: 0.3643, Val: 0.2200, Test: 0.2180
Epoch: 33, Loss: 1.8817, Train: 0.3571, Val: 0.2200, Test: 0.2190
Epoch: 34, Loss: 1.9203, Train: 0.3571, Val: 0.2220, Test: 0.2140
Epoch: 35, Loss: 1.9292, Train: 0.3643, Val: 0.2200, Test: 0.2140
Epoch: 36, Loss: 2.0277, Train: 0.3714, Val: 0.2140, Test: 0.2170
Epoch: 37, Loss: 1.8694, Train: 0.3786, Val: 0.2160, Test: 0.2190
Epoch: 38, Loss: 1.9532, Train: 0.3857, Val: 0.2140, Test: 0.2150
Epoch: 39, Loss: 1.8279, Train: 0.3857, Val: 0.2140, Test: 0.2150
Epoch: 40, Loss: 1.7981, Train: 0.3857, Val: 0.2120, Test: 0.2130
Epoch: 41, Loss: 1.7536, Train: 0.3786, Val: 0.2100, Test: 0.2150
Epoch: 42, Loss: 1.8573, Train: 0.3786, Val: 0.2120, Test: 0.2150
Epoch: 43, Loss: 1.7897, Train: 0.3929, Val: 0.2120, Test: 0.2140
Epoch: 44, Loss: 1.8514, Train: 0.4000, Val: 0.2080, Test: 0.2130
Epoch: 45, Loss: 1.8927, Train: 0.3714, Val: 0.2080, Test: 0.2150
Epoch: 46, Loss: 1.9613, Train: 0.3714, Val: 0.2080, Test: 0.2150
Epoch: 47, Loss: 1.8037, Train: 0.3643, Val: 0.2140, Test: 0.2130
Epoch: 48, Loss: 1.8292, Train: 0.3571, Val: 0.2120, Test: 0.2100
Epoch: 49, Loss: 1.7808, Train: 0.3714, Val: 0.2100, Test: 0.2110
Epoch: 50, Loss: 1.7887, Train: 0.3786, Val: 0.2120, Test: 0.2130
Epoch: 51, Loss: 1.8280, Train: 0.3786, Val: 0.2100, Test: 0.2180
Epoch: 52, Loss: 1.8423, Train: 0.3786, Val: 0.2080, Test: 0.2190
Epoch: 53, Loss: 1.9234, Train: 0.3929, Val: 0.2120, Test: 0.2250
Epoch: 54, Loss: 1.7755, Train: 0.3929, Val: 0.2140, Test: 0.2260
Epoch: 55, Loss: 1.8770, Train: 0.4000, Val: 0.2140, Test: 0.2360
Epoch: 56, Loss: 1.7902, Train: 0.4000, Val: 0.2220, Test: 0.2370
Epoch: 57, Loss: 1.7081, Train: 0.4214, Val: 0.2220, Test: 0.2430
Epoch: 58, Loss: 1.7836, Train: 0.4286, Val: 0.2320, Test: 0.2490
Epoch: 59, Loss: 1.7877, Train: 0.4357, Val: 0.2400, Test: 0.2560
Epoch: 60, Loss: 1.8239, Train: 0.4429, Val: 0.2480, Test: 0.2620
Epoch: 61, Loss: 1.7652, Train: 0.4429, Val: 0.2560, Test: 0.2690
Epoch: 62, Loss: 1.7249, Train: 0.4500, Val: 0.2620, Test: 0.2700
Epoch: 63, Loss: 2.0311, Train: 0.4571, Val: 0.2720, Test: 0.2740
Epoch: 64, Loss: 1.5997, Train: 0.4643, Val: 0.2820, Test: 0.2790
Epoch: 65, Loss: 1.6946, Train: 0.4643, Val: 0.2940, Test: 0.2850
Epoch: 66, Loss: 1.6605, Train: 0.4643, Val: 0.3000, Test: 0.2910
Epoch: 67, Loss: 1.6366, Train: 0.4786, Val: 0.3060, Test: 0.2980
Epoch: 68, Loss: 1.6634, Train: 0.4857, Val: 0.3100, Test: 0.3040
Epoch: 69, Loss: 1.7070, Train: 0.4929, Val: 0.3220, Test: 0.3070
Epoch: 70, Loss: 1.6663, Train: 0.4929, Val: 0.3240, Test: 0.3130
Epoch: 71, Loss: 1.7135, Train: 0.5000, Val: 0.3300, Test: 0.3130
Epoch: 72, Loss: 1.7407, Train: 0.4929, Val: 0.3320, Test: 0.3100
Epoch: 73, Loss: 1.7206, Train: 0.4929, Val: 0.3320, Test: 0.3110
Epoch: 74, Loss: 1.6996, Train: 0.4929, Val: 0.3380, Test: 0.3130
Epoch: 75, Loss: 1.5460, Train: 0.4929, Val: 0.3400, Test: 0.3170
Epoch: 76, Loss: 1.7242, Train: 0.5000, Val: 0.3400, Test: 0.3230
Epoch: 77, Loss: 1.5717, Train: 0.5071, Val: 0.3540, Test: 0.3270
Epoch: 78, Loss: 1.5667, Train: 0.5071, Val: 0.3520, Test: 0.3290
Epoch: 79, Loss: 1.6340, Train: 0.5143, Val: 0.3560, Test: 0.3380
Epoch: 80, Loss: 1.5940, Train: 0.5214, Val: 0.3600, Test: 0.3470
Epoch: 81, Loss: 1.5057, Train: 0.5357, Val: 0.3660, Test: 0.3560
Epoch: 82, Loss: 1.4892, Train: 0.5429, Val: 0.3720, Test: 0.3630
Epoch: 83, Loss: 1.4944, Train: 0.5500, Val: 0.3760, Test: 0.3680
Epoch: 84, Loss: 1.4821, Train: 0.5500, Val: 0.3840, Test: 0.3690
Epoch: 85, Loss: 1.4113, Train: 0.5500, Val: 0.3900, Test: 0.3710
Epoch: 86, Loss: 1.4529, Train: 0.5500, Val: 0.3880, Test: 0.3730
Epoch: 87, Loss: 1.3646, Train: 0.5643, Val: 0.3900, Test: 0.3800
Epoch: 88, Loss: 1.4081, Train: 0.5643, Val: 0.3960, Test: 0.3820
Epoch: 89, Loss: 1.4419, Train: 0.5429, Val: 0.3960, Test: 0.3830
Epoch: 90, Loss: 1.2929, Train: 0.5429, Val: 0.3980, Test: 0.3850
Epoch: 91, Loss: 1.3711, Train: 0.5429, Val: 0.4020, Test: 0.3870
Epoch: 92, Loss: 1.4100, Train: 0.5429, Val: 0.4000, Test: 0.3900
Epoch: 93, Loss: 1.2981, Train: 0.5571, Val: 0.4020, Test: 0.3910
Epoch: 94, Loss: 1.2841, Train: 0.5571, Val: 0.4040, Test: 0.3960
Epoch: 95, Loss: 1.1579, Train: 0.5643, Val: 0.4040, Test: 0.3970
Epoch: 96, Loss: 1.2457, Train: 0.5643, Val: 0.4040, Test: 0.3980
Epoch: 97, Loss: 1.1953, Train: 0.5643, Val: 0.4040, Test: 0.3980
Epoch: 98, Loss: 1.1276, Train: 0.5714, Val: 0.4080, Test: 0.4020
Epoch: 99, Loss: 1.2145, Train: 0.5857, Val: 0.4100, Test: 0.4040
Epoch: 100, Loss: 1.1383, Train: 0.5786, Val: 0.4080, Test: 0.4080
MAD:  0.6884
Best Test Accuracy: 0.4080, Val Accuracy: 0.4080, Train Accuracy: 0.5786
Training completed.
Seed:  1
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 5.2682, Train: 0.1429, Val: 0.1560, Test: 0.1630
Epoch: 2, Loss: 3.7142, Train: 0.1714, Val: 0.1140, Test: 0.1120
Epoch: 3, Loss: 3.4831, Train: 0.1857, Val: 0.1420, Test: 0.1490
Epoch: 4, Loss: 2.8936, Train: 0.1429, Val: 0.1520, Test: 0.1410
Epoch: 5, Loss: 2.6807, Train: 0.1429, Val: 0.1660, Test: 0.1460
Epoch: 6, Loss: 2.4558, Train: 0.1429, Val: 0.1680, Test: 0.1490
Epoch: 7, Loss: 2.5939, Train: 0.1500, Val: 0.1660, Test: 0.1540
Epoch: 8, Loss: 2.7383, Train: 0.1571, Val: 0.1680, Test: 0.1560
Epoch: 9, Loss: 2.2073, Train: 0.1643, Val: 0.1760, Test: 0.1590
Epoch: 10, Loss: 2.1364, Train: 0.1714, Val: 0.1800, Test: 0.1650
Epoch: 11, Loss: 2.3522, Train: 0.1857, Val: 0.1800, Test: 0.1710
Epoch: 12, Loss: 2.1891, Train: 0.2000, Val: 0.1800, Test: 0.1780
Epoch: 13, Loss: 2.0623, Train: 0.2143, Val: 0.1800, Test: 0.1860
Epoch: 14, Loss: 2.1058, Train: 0.2286, Val: 0.2060, Test: 0.2030
Epoch: 15, Loss: 2.1762, Train: 0.2714, Val: 0.2240, Test: 0.2230
Epoch: 16, Loss: 2.1011, Train: 0.2643, Val: 0.2440, Test: 0.2460
/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
Epoch: 17, Loss: 2.0795, Train: 0.2929, Val: 0.2480, Test: 0.2530
Epoch: 18, Loss: 2.1383, Train: 0.3429, Val: 0.2480, Test: 0.2560
Epoch: 19, Loss: 1.9831, Train: 0.3429, Val: 0.2460, Test: 0.2610
Epoch: 20, Loss: 2.0267, Train: 0.3571, Val: 0.2320, Test: 0.2450
Epoch: 21, Loss: 2.2507, Train: 0.3500, Val: 0.2140, Test: 0.2350
Epoch: 22, Loss: 1.9671, Train: 0.3214, Val: 0.1860, Test: 0.2310
Epoch: 23, Loss: 2.0516, Train: 0.3214, Val: 0.1880, Test: 0.2270
Epoch: 24, Loss: 2.1121, Train: 0.3357, Val: 0.1860, Test: 0.2250
Epoch: 25, Loss: 2.1947, Train: 0.3429, Val: 0.1900, Test: 0.2230
Epoch: 26, Loss: 2.0533, Train: 0.3571, Val: 0.1860, Test: 0.2240
Epoch: 27, Loss: 1.9092, Train: 0.3714, Val: 0.1840, Test: 0.2230
Epoch: 28, Loss: 1.9500, Train: 0.3857, Val: 0.1880, Test: 0.2300
Epoch: 29, Loss: 1.9227, Train: 0.3929, Val: 0.1860, Test: 0.2310
Epoch: 30, Loss: 1.9925, Train: 0.3786, Val: 0.1880, Test: 0.2280
Epoch: 31, Loss: 2.0562, Train: 0.3786, Val: 0.1780, Test: 0.2180
Epoch: 32, Loss: 2.0164, Train: 0.3857, Val: 0.1840, Test: 0.2120
Epoch: 33, Loss: 1.9661, Train: 0.4000, Val: 0.1760, Test: 0.2080
Epoch: 34, Loss: 1.9432, Train: 0.4000, Val: 0.1760, Test: 0.2010
Epoch: 35, Loss: 2.0566, Train: 0.3857, Val: 0.1720, Test: 0.1970
Epoch: 36, Loss: 1.9187, Train: 0.3714, Val: 0.1720, Test: 0.1950
Epoch: 37, Loss: 1.9629, Train: 0.3571, Val: 0.1640, Test: 0.1910
Epoch: 38, Loss: 1.9764, Train: 0.3571, Val: 0.1660, Test: 0.1920
Epoch: 39, Loss: 1.9599, Train: 0.3571, Val: 0.1640, Test: 0.1910
Epoch: 40, Loss: 1.9520, Train: 0.3643, Val: 0.1660, Test: 0.1850
Epoch: 41, Loss: 2.0292, Train: 0.3571, Val: 0.1660, Test: 0.1850
Epoch: 42, Loss: 1.9559, Train: 0.3571, Val: 0.1640, Test: 0.1820
Epoch: 43, Loss: 1.9369, Train: 0.3643, Val: 0.1620, Test: 0.1860
Epoch: 44, Loss: 1.9273, Train: 0.3714, Val: 0.1640, Test: 0.1890
Epoch: 45, Loss: 2.0349, Train: 0.3786, Val: 0.1640, Test: 0.1910
Epoch: 46, Loss: 1.9104, Train: 0.3786, Val: 0.1680, Test: 0.1920
Epoch: 47, Loss: 2.0197, Train: 0.3786, Val: 0.1740, Test: 0.1950
Epoch: 48, Loss: 1.9230, Train: 0.3929, Val: 0.1760, Test: 0.2040
Epoch: 49, Loss: 1.8728, Train: 0.4000, Val: 0.1760, Test: 0.2050
Epoch: 50, Loss: 1.9323, Train: 0.4071, Val: 0.1840, Test: 0.2080
Epoch: 51, Loss: 1.9633, Train: 0.4071, Val: 0.1880, Test: 0.2100
Epoch: 52, Loss: 1.9636, Train: 0.4071, Val: 0.1940, Test: 0.2130
Epoch: 53, Loss: 1.9631, Train: 0.4071, Val: 0.2000, Test: 0.2200
Epoch: 54, Loss: 1.9445, Train: 0.4071, Val: 0.2080, Test: 0.2260
Epoch: 55, Loss: 1.8319, Train: 0.4071, Val: 0.2120, Test: 0.2300
Epoch: 56, Loss: 1.8963, Train: 0.4143, Val: 0.2200, Test: 0.2330
Epoch: 57, Loss: 1.8698, Train: 0.4286, Val: 0.2280, Test: 0.2420
Epoch: 58, Loss: 1.8333, Train: 0.4214, Val: 0.2320, Test: 0.2510
Epoch: 59, Loss: 1.8751, Train: 0.4500, Val: 0.2360, Test: 0.2580
Epoch: 60, Loss: 1.8634, Train: 0.4571, Val: 0.2360, Test: 0.2640
Epoch: 61, Loss: 1.8513, Train: 0.4571, Val: 0.2460, Test: 0.2710
Epoch: 62, Loss: 1.8906, Train: 0.4571, Val: 0.2520, Test: 0.2820
Epoch: 63, Loss: 1.8839, Train: 0.4643, Val: 0.2580, Test: 0.2900
Epoch: 64, Loss: 1.7714, Train: 0.4786, Val: 0.2660, Test: 0.3020
Epoch: 65, Loss: 1.9196, Train: 0.4857, Val: 0.2680, Test: 0.3120
Epoch: 66, Loss: 1.8932, Train: 0.4857, Val: 0.2760, Test: 0.3220
Epoch: 67, Loss: 1.8961, Train: 0.5000, Val: 0.2800, Test: 0.3290
Epoch: 68, Loss: 2.0987, Train: 0.5071, Val: 0.2860, Test: 0.3250
Epoch: 69, Loss: 1.7979, Train: 0.5071, Val: 0.2940, Test: 0.3280
Epoch: 70, Loss: 1.8118, Train: 0.5214, Val: 0.3020, Test: 0.3360
Epoch: 71, Loss: 1.8076, Train: 0.5214, Val: 0.3040, Test: 0.3430
Epoch: 72, Loss: 1.8238, Train: 0.5214, Val: 0.3140, Test: 0.3560
Epoch: 73, Loss: 1.8135, Train: 0.5143, Val: 0.3200, Test: 0.3650
Epoch: 74, Loss: 1.7535, Train: 0.5286, Val: 0.3340, Test: 0.3700
Epoch: 75, Loss: 1.7243, Train: 0.5214, Val: 0.3420, Test: 0.3820
Epoch: 76, Loss: 1.7745, Train: 0.5286, Val: 0.3480, Test: 0.3870
Epoch: 77, Loss: 1.7106, Train: 0.5214, Val: 0.3500, Test: 0.3930
Epoch: 78, Loss: 1.6991, Train: 0.5286, Val: 0.3520, Test: 0.3980
Epoch: 79, Loss: 1.6964, Train: 0.5357, Val: 0.3580, Test: 0.4030
Epoch: 80, Loss: 1.8493, Train: 0.5286, Val: 0.3660, Test: 0.4090
Epoch: 81, Loss: 1.7600, Train: 0.5143, Val: 0.3720, Test: 0.4170
Epoch: 82, Loss: 1.7029, Train: 0.5357, Val: 0.3760, Test: 0.4320
Epoch: 83, Loss: 1.7422, Train: 0.5357, Val: 0.3860, Test: 0.4400
Epoch: 84, Loss: 1.6726, Train: 0.5286, Val: 0.3860, Test: 0.4420
Epoch: 85, Loss: 1.7649, Train: 0.5214, Val: 0.3940, Test: 0.4450
Epoch: 86, Loss: 1.6448, Train: 0.5214, Val: 0.4000, Test: 0.4470
Epoch: 87, Loss: 1.6008, Train: 0.5214, Val: 0.4000, Test: 0.4480
Epoch: 88, Loss: 1.8400, Train: 0.5429, Val: 0.4080, Test: 0.4500
Epoch: 89, Loss: 1.7558, Train: 0.5429, Val: 0.4120, Test: 0.4540
Epoch: 90, Loss: 1.5983, Train: 0.5357, Val: 0.4160, Test: 0.4600
Epoch: 91, Loss: 1.5989, Train: 0.5286, Val: 0.4200, Test: 0.4620
Epoch: 92, Loss: 1.5408, Train: 0.5214, Val: 0.4280, Test: 0.4620
Epoch: 93, Loss: 1.5941, Train: 0.5214, Val: 0.4340, Test: 0.4660
Epoch: 94, Loss: 1.5535, Train: 0.5286, Val: 0.4300, Test: 0.4670
Epoch: 95, Loss: 1.5428, Train: 0.5357, Val: 0.4460, Test: 0.4740
Epoch: 96, Loss: 1.5336, Train: 0.5357, Val: 0.4620, Test: 0.4800
Epoch: 97, Loss: 1.5555, Train: 0.5786, Val: 0.4660, Test: 0.4960
Epoch: 98, Loss: 1.4999, Train: 0.5857, Val: 0.4720, Test: 0.5040
Epoch: 99, Loss: 1.5140, Train: 0.6071, Val: 0.4740, Test: 0.5080
Epoch: 100, Loss: 1.4368, Train: 0.6071, Val: 0.4740, Test: 0.5110
MAD:  0.8198
Best Test Accuracy: 0.5110, Val Accuracy: 0.4740, Train Accuracy: 0.6071
Training completed.
Seed:  2
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 5.4191, Train: 0.1357, Val: 0.1360, Test: 0.1670
Epoch: 2, Loss: 3.6387, Train: 0.2214, Val: 0.3580, Test: 0.3550
Epoch: 3, Loss: 2.9312, Train: 0.2714, Val: 0.3360, Test: 0.3580
Epoch: 4, Loss: 2.5657, Train: 0.2500, Val: 0.2820, Test: 0.2950
Epoch: 5, Loss: 2.8344, Train: 0.2500, Val: 0.2100, Test: 0.2340
Epoch: 6, Loss: 2.4319, Train: 0.2429, Val: 0.1740, Test: 0.2010
Epoch: 7, Loss: 2.5768, Train: 0.2000, Val: 0.1580, Test: 0.1860
Epoch: 8, Loss: 2.2237, Train: 0.1714, Val: 0.1600, Test: 0.1660
Epoch: 9, Loss: 2.1776, Train: 0.2214, Val: 0.1660, Test: 0.1760
Epoch: 10, Loss: 2.0418, Train: 0.2071, Val: 0.1620, Test: 0.1760
Epoch: 11, Loss: 2.2728, Train: 0.2143, Val: 0.1580, Test: 0.1740
Epoch: 12, Loss: 2.1405, Train: 0.2429, Val: 0.1540, Test: 0.1950
Epoch: 13, Loss: 2.1109, Train: 0.2429, Val: 0.1580, Test: 0.1960
Epoch: 14, Loss: 2.1776, Train: 0.2500, Val: 0.1580, Test: 0.1990
Epoch: 15, Loss: 2.1960, Train: 0.2500, Val: 0.1640, Test: 0.1950
Epoch: 16, Loss: 2.0697, Train: 0.2500, Val: 0.1820, Test: 0.1950
Epoch: 17, Loss: 2.0945, Train: 0.2571, Val: 0.1840, Test: 0.2000
Epoch: 18, Loss: 1.9739, Train: 0.2714, Val: 0.1860, Test: 0.2060
Epoch: 19, Loss: 2.0191, Train: 0.2857, Val: 0.1960, Test: 0.2190
Epoch: 20, Loss: 2.0556, Train: 0.3143, Val: 0.2000, Test: 0.2350
Epoch: 21, Loss: 2.0714, Train: 0.2857, Val: 0.2160, Test: 0.2410
Epoch: 22, Loss: 2.0143, Train: 0.3000, Val: 0.2240, Test: 0.2480
Epoch: 23, Loss: 1.9979, Train: 0.3000, Val: 0.2160, Test: 0.2680
Epoch: 24, Loss: 1.9926, Train: 0.3286, Val: 0.2500, Test: 0.2690
Epoch: 25, Loss: 2.1542, Train: 0.3357, Val: 0.2660, Test: 0.2740
Epoch: 26, Loss: 1.9742, Train: 0.3714, Val: 0.2700, Test: 0.2780
Epoch: 27, Loss: 2.1466, Train: 0.3714, Val: 0.2560, Test: 0.2700
Epoch: 28, Loss: 1.9384, Train: 0.3500, Val: 0.2260, Test: 0.2640
Epoch: 29, Loss: 1.9388, Train: 0.3429, Val: 0.2120, Test: 0.2390
Epoch: 30, Loss: 1.9779, Train: 0.3286, Val: 0.1980, Test: 0.2280
Epoch: 31, Loss: 1.8850, Train: 0.3286, Val: 0.1820, Test: 0.2100
Epoch: 32, Loss: 1.9805, Train: 0.3214, Val: 0.1760, Test: 0.2040
Epoch: 33, Loss: 2.0733, Train: 0.3357, Val: 0.1620, Test: 0.1940
Epoch: 34, Loss: 2.0067, Train: 0.3357, Val: 0.1480, Test: 0.1830
Epoch: 35, Loss: 1.8884, Train: 0.3500, Val: 0.1420, Test: 0.1830
/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
Epoch: 36, Loss: 2.0826, Train: 0.3500, Val: 0.1420, Test: 0.1800
Epoch: 37, Loss: 1.9780, Train: 0.3500, Val: 0.1420, Test: 0.1740
Epoch: 38, Loss: 1.8990, Train: 0.3357, Val: 0.1420, Test: 0.1740
Epoch: 39, Loss: 1.9769, Train: 0.3286, Val: 0.1420, Test: 0.1690
Epoch: 40, Loss: 1.9502, Train: 0.3214, Val: 0.1440, Test: 0.1680
Epoch: 41, Loss: 2.0303, Train: 0.3214, Val: 0.1440, Test: 0.1680
Epoch: 42, Loss: 1.9364, Train: 0.3214, Val: 0.1460, Test: 0.1680
Epoch: 43, Loss: 1.9746, Train: 0.3214, Val: 0.1460, Test: 0.1650
Epoch: 44, Loss: 2.0005, Train: 0.3357, Val: 0.1420, Test: 0.1630
Epoch: 45, Loss: 2.0434, Train: 0.3500, Val: 0.1420, Test: 0.1660
Epoch: 46, Loss: 1.9737, Train: 0.3286, Val: 0.1420, Test: 0.1660
Epoch: 47, Loss: 1.9806, Train: 0.3357, Val: 0.1420, Test: 0.1660
Epoch: 48, Loss: 1.9802, Train: 0.3357, Val: 0.1460, Test: 0.1690
Epoch: 49, Loss: 1.9938, Train: 0.3357, Val: 0.1440, Test: 0.1660
Epoch: 50, Loss: 2.1483, Train: 0.3357, Val: 0.1380, Test: 0.1630
Epoch: 51, Loss: 1.8894, Train: 0.3214, Val: 0.1320, Test: 0.1600
Epoch: 52, Loss: 1.9405, Train: 0.3286, Val: 0.1340, Test: 0.1560
Epoch: 53, Loss: 1.9313, Train: 0.3357, Val: 0.1340, Test: 0.1540
Epoch: 54, Loss: 1.8852, Train: 0.3286, Val: 0.1340, Test: 0.1550
Epoch: 55, Loss: 1.9250, Train: 0.3286, Val: 0.1360, Test: 0.1570
Epoch: 56, Loss: 1.8818, Train: 0.3429, Val: 0.1380, Test: 0.1620
Epoch: 57, Loss: 1.8762, Train: 0.3500, Val: 0.1420, Test: 0.1650
Epoch: 58, Loss: 1.9228, Train: 0.3571, Val: 0.1460, Test: 0.1700
Epoch: 59, Loss: 1.9026, Train: 0.3643, Val: 0.1540, Test: 0.1790
Epoch: 60, Loss: 1.8919, Train: 0.3714, Val: 0.1660, Test: 0.1830
Epoch: 61, Loss: 1.9002, Train: 0.3714, Val: 0.1720, Test: 0.1940
Epoch: 62, Loss: 1.8544, Train: 0.3571, Val: 0.1820, Test: 0.2000
Epoch: 63, Loss: 1.8289, Train: 0.3571, Val: 0.1940, Test: 0.2090
Epoch: 64, Loss: 1.9356, Train: 0.3643, Val: 0.2000, Test: 0.2220
Epoch: 65, Loss: 1.8215, Train: 0.3643, Val: 0.2120, Test: 0.2270
Epoch: 66, Loss: 1.8411, Train: 0.3714, Val: 0.2280, Test: 0.2360
Epoch: 67, Loss: 1.8835, Train: 0.3643, Val: 0.2360, Test: 0.2470
Epoch: 68, Loss: 1.8227, Train: 0.3714, Val: 0.2460, Test: 0.2580
Epoch: 69, Loss: 1.8407, Train: 0.3714, Val: 0.2500, Test: 0.2710
Epoch: 70, Loss: 1.8743, Train: 0.3786, Val: 0.2640, Test: 0.2850
Epoch: 71, Loss: 1.7395, Train: 0.3929, Val: 0.2760, Test: 0.2940
Epoch: 72, Loss: 1.8891, Train: 0.4000, Val: 0.2880, Test: 0.3000
Epoch: 73, Loss: 1.9602, Train: 0.4071, Val: 0.3020, Test: 0.3200
Epoch: 74, Loss: 1.8984, Train: 0.4000, Val: 0.3040, Test: 0.3300
Epoch: 75, Loss: 1.7930, Train: 0.4143, Val: 0.3260, Test: 0.3430
Epoch: 76, Loss: 1.7859, Train: 0.4286, Val: 0.3420, Test: 0.3570
Epoch: 77, Loss: 1.8081, Train: 0.4357, Val: 0.3520, Test: 0.3680
Epoch: 78, Loss: 1.8090, Train: 0.4357, Val: 0.3580, Test: 0.3810
Epoch: 79, Loss: 1.7420, Train: 0.4571, Val: 0.3660, Test: 0.3850
Epoch: 80, Loss: 1.7208, Train: 0.4571, Val: 0.3700, Test: 0.3960
Epoch: 81, Loss: 1.8039, Train: 0.4643, Val: 0.3720, Test: 0.3950
Epoch: 82, Loss: 1.7570, Train: 0.4571, Val: 0.3820, Test: 0.3980
Epoch: 83, Loss: 1.6863, Train: 0.4571, Val: 0.3800, Test: 0.4070
Epoch: 84, Loss: 1.7294, Train: 0.4643, Val: 0.3960, Test: 0.4180
Epoch: 85, Loss: 1.6782, Train: 0.4786, Val: 0.4020, Test: 0.4280
Epoch: 86, Loss: 1.6896, Train: 0.4714, Val: 0.4160, Test: 0.4330
Epoch: 87, Loss: 1.6663, Train: 0.4714, Val: 0.4280, Test: 0.4470
Epoch: 88, Loss: 1.7835, Train: 0.4786, Val: 0.4320, Test: 0.4540
Epoch: 89, Loss: 1.6996, Train: 0.4857, Val: 0.4420, Test: 0.4610
Epoch: 90, Loss: 1.7085, Train: 0.4929, Val: 0.4420, Test: 0.4670
Epoch: 91, Loss: 1.6097, Train: 0.5000, Val: 0.4480, Test: 0.4700
Epoch: 92, Loss: 1.6641, Train: 0.5000, Val: 0.4480, Test: 0.4730
Epoch: 93, Loss: 1.6876, Train: 0.5143, Val: 0.4540, Test: 0.4750
Epoch: 94, Loss: 1.6501, Train: 0.5214, Val: 0.4600, Test: 0.4800
Epoch: 95, Loss: 1.6189, Train: 0.5286, Val: 0.4640, Test: 0.4810
Epoch: 96, Loss: 1.5333, Train: 0.5357, Val: 0.4700, Test: 0.4810
Epoch: 97, Loss: 1.6762, Train: 0.5357, Val: 0.4720, Test: 0.4860
Epoch: 98, Loss: 1.4817, Train: 0.5357, Val: 0.4760, Test: 0.4950
Epoch: 99, Loss: 1.5737, Train: 0.5357, Val: 0.4780, Test: 0.4980
Epoch: 100, Loss: 1.4458, Train: 0.5357, Val: 0.4840, Test: 0.5010
MAD:  0.8572
Best Test Accuracy: 0.5010, Val Accuracy: 0.4840, Train Accuracy: 0.5357
Training completed.
Seed:  3
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 5.8896, Train: 0.1786, Val: 0.1600, Test: 0.1500
Epoch: 2, Loss: 3.4068, Train: 0.1429, Val: 0.1320, Test: 0.1270
Epoch: 3, Loss: 3.3393, Train: 0.1929, Val: 0.1260, Test: 0.1330
Epoch: 4, Loss: 3.1605, Train: 0.1929, Val: 0.1260, Test: 0.1290
Epoch: 5, Loss: 2.6123, Train: 0.1714, Val: 0.1220, Test: 0.1230
Epoch: 6, Loss: 2.4305, Train: 0.1643, Val: 0.0780, Test: 0.0810
Epoch: 7, Loss: 2.2839, Train: 0.1643, Val: 0.0600, Test: 0.0710
Epoch: 8, Loss: 2.3297, Train: 0.1571, Val: 0.0620, Test: 0.0720
Epoch: 9, Loss: 2.3177, Train: 0.1429, Val: 0.0640, Test: 0.0780
Epoch: 10, Loss: 2.1806, Train: 0.1500, Val: 0.0760, Test: 0.0860
Epoch: 11, Loss: 2.1390, Train: 0.1571, Val: 0.0940, Test: 0.1060
Epoch: 12, Loss: 2.1025, Train: 0.1786, Val: 0.1240, Test: 0.1300
Epoch: 13, Loss: 2.2226, Train: 0.2214, Val: 0.1680, Test: 0.1570
Epoch: 14, Loss: 1.9670, Train: 0.2286, Val: 0.1820, Test: 0.1560
Epoch: 15, Loss: 2.0478, Train: 0.2571, Val: 0.1720, Test: 0.1630
Epoch: 16, Loss: 2.0822, Train: 0.2643, Val: 0.1740, Test: 0.1590
Epoch: 17, Loss: 2.0885, Train: 0.2786, Val: 0.1540, Test: 0.1460
Epoch: 18, Loss: 2.0059, Train: 0.2714, Val: 0.1460, Test: 0.1400
Epoch: 19, Loss: 2.0485, Train: 0.2500, Val: 0.1340, Test: 0.1390
Epoch: 20, Loss: 2.2236, Train: 0.2500, Val: 0.1240, Test: 0.1310
Epoch: 21, Loss: 2.0179, Train: 0.2571, Val: 0.1240, Test: 0.1280
Epoch: 22, Loss: 2.1481, Train: 0.2571, Val: 0.1200, Test: 0.1330
Epoch: 23, Loss: 1.9561, Train: 0.2643, Val: 0.1260, Test: 0.1350
Epoch: 24, Loss: 2.0502, Train: 0.2500, Val: 0.1260, Test: 0.1330
Epoch: 25, Loss: 1.9913, Train: 0.2357, Val: 0.1260, Test: 0.1320
Epoch: 26, Loss: 2.2228, Train: 0.2286, Val: 0.1360, Test: 0.1390
Epoch: 27, Loss: 1.9997, Train: 0.2143, Val: 0.1360, Test: 0.1480
Epoch: 28, Loss: 2.1472, Train: 0.2214, Val: 0.1420, Test: 0.1470
Epoch: 29, Loss: 2.0350, Train: 0.2143, Val: 0.1360, Test: 0.1530
Epoch: 30, Loss: 1.9880, Train: 0.2214, Val: 0.1340, Test: 0.1570
Epoch: 31, Loss: 1.9407, Train: 0.2214, Val: 0.1320, Test: 0.1590
Epoch: 32, Loss: 1.8761, Train: 0.2143, Val: 0.1340, Test: 0.1560
Epoch: 33, Loss: 1.8992, Train: 0.2143, Val: 0.1360, Test: 0.1540
Epoch: 34, Loss: 1.9611, Train: 0.2286, Val: 0.1440, Test: 0.1580
Epoch: 35, Loss: 1.9067, Train: 0.2357, Val: 0.1520, Test: 0.1550
Epoch: 36, Loss: 1.9436, Train: 0.2357, Val: 0.1540, Test: 0.1560
Epoch: 37, Loss: 1.9393, Train: 0.2286, Val: 0.1560, Test: 0.1570
Epoch: 38, Loss: 1.9214, Train: 0.2357, Val: 0.1580, Test: 0.1690
Epoch: 39, Loss: 1.8500, Train: 0.2429, Val: 0.1580, Test: 0.1760
Epoch: 40, Loss: 2.0167, Train: 0.2500, Val: 0.1640, Test: 0.1740
Epoch: 41, Loss: 1.8784, Train: 0.2571, Val: 0.1540, Test: 0.1690
Epoch: 42, Loss: 1.8517, Train: 0.2786, Val: 0.1560, Test: 0.1600
Epoch: 43, Loss: 1.9031, Train: 0.2786, Val: 0.1540, Test: 0.1580
Epoch: 44, Loss: 1.9636, Train: 0.2929, Val: 0.1500, Test: 0.1590
Epoch: 45, Loss: 1.9494, Train: 0.2857, Val: 0.1440, Test: 0.1460
Epoch: 46, Loss: 1.8164, Train: 0.2714, Val: 0.1340, Test: 0.1440
Epoch: 47, Loss: 1.9064, Train: 0.2857, Val: 0.1220, Test: 0.1400
Epoch: 48, Loss: 1.8447, Train: 0.2929, Val: 0.1200, Test: 0.1380
Epoch: 49, Loss: 1.8801, Train: 0.2786, Val: 0.1180, Test: 0.1340
Epoch: 50, Loss: 1.8120, Train: 0.3000, Val: 0.1160, Test: 0.1300
Epoch: 51, Loss: 1.9482, Train: 0.3071, Val: 0.1140, Test: 0.1340
Epoch: 52, Loss: 1.8857, Train: 0.3071, Val: 0.1220, Test: 0.1350
Epoch: 53, Loss: 1.7818, Train: 0.3143, Val: 0.1200, Test: 0.1330
Epoch: 54, Loss: 1.8036, Train: 0.3143, Val: 0.1200, Test: 0.1310
/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
Epoch: 55, Loss: 1.8210, Train: 0.3143, Val: 0.1120, Test: 0.1330
Epoch: 56, Loss: 1.8923, Train: 0.3143, Val: 0.1060, Test: 0.1310
Epoch: 57, Loss: 1.7826, Train: 0.3143, Val: 0.1080, Test: 0.1310
Epoch: 58, Loss: 1.8866, Train: 0.3143, Val: 0.1060, Test: 0.1290
Epoch: 59, Loss: 1.8595, Train: 0.3143, Val: 0.1080, Test: 0.1290
Epoch: 60, Loss: 1.8259, Train: 0.3071, Val: 0.1060, Test: 0.1280
Epoch: 61, Loss: 1.7752, Train: 0.3071, Val: 0.1080, Test: 0.1270
Epoch: 62, Loss: 1.7890, Train: 0.3143, Val: 0.1100, Test: 0.1270
Epoch: 63, Loss: 1.8358, Train: 0.3071, Val: 0.1140, Test: 0.1260
Epoch: 64, Loss: 1.8481, Train: 0.3071, Val: 0.1160, Test: 0.1270
Epoch: 65, Loss: 1.6750, Train: 0.3071, Val: 0.1180, Test: 0.1290
Epoch: 66, Loss: 1.7432, Train: 0.3071, Val: 0.1180, Test: 0.1300
Epoch: 67, Loss: 1.7548, Train: 0.3000, Val: 0.1120, Test: 0.1320
Epoch: 68, Loss: 1.7433, Train: 0.3000, Val: 0.1120, Test: 0.1340
Epoch: 69, Loss: 1.7721, Train: 0.3071, Val: 0.1100, Test: 0.1350
Epoch: 70, Loss: 1.7417, Train: 0.3071, Val: 0.1120, Test: 0.1340
Epoch: 71, Loss: 1.7428, Train: 0.3071, Val: 0.1140, Test: 0.1370
Epoch: 72, Loss: 1.7561, Train: 0.3000, Val: 0.1140, Test: 0.1370
Epoch: 73, Loss: 1.7602, Train: 0.3071, Val: 0.1180, Test: 0.1400
Epoch: 74, Loss: 1.6879, Train: 0.3071, Val: 0.1180, Test: 0.1420
Epoch: 75, Loss: 1.7615, Train: 0.3071, Val: 0.1160, Test: 0.1460
Epoch: 76, Loss: 1.6877, Train: 0.3071, Val: 0.1160, Test: 0.1470
Epoch: 77, Loss: 1.7225, Train: 0.3143, Val: 0.1140, Test: 0.1510
Epoch: 78, Loss: 1.7667, Train: 0.3143, Val: 0.1200, Test: 0.1500
Epoch: 79, Loss: 1.6588, Train: 0.3143, Val: 0.1220, Test: 0.1510
Epoch: 80, Loss: 1.7389, Train: 0.3143, Val: 0.1220, Test: 0.1550
Epoch: 81, Loss: 1.6536, Train: 0.3286, Val: 0.1220, Test: 0.1590
Epoch: 82, Loss: 1.6984, Train: 0.3286, Val: 0.1260, Test: 0.1610
Epoch: 83, Loss: 1.6409, Train: 0.3357, Val: 0.1260, Test: 0.1630
Epoch: 84, Loss: 1.6459, Train: 0.3429, Val: 0.1260, Test: 0.1640
Epoch: 85, Loss: 1.6661, Train: 0.3429, Val: 0.1320, Test: 0.1660
Epoch: 86, Loss: 1.6349, Train: 0.3429, Val: 0.1340, Test: 0.1650
Epoch: 87, Loss: 1.7465, Train: 0.3429, Val: 0.1340, Test: 0.1670
Epoch: 88, Loss: 1.5791, Train: 0.3429, Val: 0.1380, Test: 0.1660
Epoch: 89, Loss: 1.6059, Train: 0.3357, Val: 0.1360, Test: 0.1670
Epoch: 90, Loss: 1.6798, Train: 0.3357, Val: 0.1360, Test: 0.1660
Epoch: 91, Loss: 1.6198, Train: 0.3357, Val: 0.1360, Test: 0.1680
Epoch: 92, Loss: 1.5673, Train: 0.3357, Val: 0.1400, Test: 0.1730
Epoch: 93, Loss: 1.8003, Train: 0.3429, Val: 0.1540, Test: 0.1820
Epoch: 94, Loss: 1.5586, Train: 0.3429, Val: 0.1660, Test: 0.1930
Epoch: 95, Loss: 1.5545, Train: 0.3429, Val: 0.1860, Test: 0.2030
Epoch: 96, Loss: 1.5252, Train: 0.3643, Val: 0.1980, Test: 0.2150
Epoch: 97, Loss: 1.5633, Train: 0.3786, Val: 0.2160, Test: 0.2260
Epoch: 98, Loss: 1.6026, Train: 0.3857, Val: 0.2280, Test: 0.2370
Epoch: 99, Loss: 1.5337, Train: 0.3929, Val: 0.2320, Test: 0.2500
Epoch: 100, Loss: 1.6085, Train: 0.4071, Val: 0.2380, Test: 0.2580
MAD:  0.3268
Best Test Accuracy: 0.2580, Val Accuracy: 0.2380, Train Accuracy: 0.4071
Training completed.
Seed:  4
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 5.1413, Train: 0.1571, Val: 0.0940, Test: 0.1200
Epoch: 2, Loss: 3.9379, Train: 0.2857, Val: 0.3000, Test: 0.2550
Epoch: 3, Loss: 3.3399, Train: 0.2357, Val: 0.2800, Test: 0.2520
Epoch: 4, Loss: 3.0273, Train: 0.2214, Val: 0.2540, Test: 0.2370
Epoch: 5, Loss: 2.8299, Train: 0.2357, Val: 0.2580, Test: 0.2480
Epoch: 6, Loss: 2.5767, Train: 0.3000, Val: 0.2980, Test: 0.3000
Epoch: 7, Loss: 2.6362, Train: 0.3143, Val: 0.3480, Test: 0.3480
Epoch: 8, Loss: 2.4672, Train: 0.3214, Val: 0.3860, Test: 0.3850
Epoch: 9, Loss: 2.5845, Train: 0.3429, Val: 0.3800, Test: 0.4010
Epoch: 10, Loss: 2.1456, Train: 0.3214, Val: 0.3920, Test: 0.4040
Epoch: 11, Loss: 2.1660, Train: 0.3429, Val: 0.3900, Test: 0.4020
Epoch: 12, Loss: 2.1376, Train: 0.3429, Val: 0.3900, Test: 0.4070
Epoch: 13, Loss: 2.2495, Train: 0.3429, Val: 0.3940, Test: 0.4120
Epoch: 14, Loss: 2.2344, Train: 0.3357, Val: 0.3820, Test: 0.4080
Epoch: 15, Loss: 2.0875, Train: 0.3571, Val: 0.4020, Test: 0.4220
Epoch: 16, Loss: 2.3661, Train: 0.3571, Val: 0.4000, Test: 0.4500
Epoch: 17, Loss: 2.3357, Train: 0.3714, Val: 0.4180, Test: 0.4690
Epoch: 18, Loss: 2.1819, Train: 0.4071, Val: 0.4100, Test: 0.4580
Epoch: 19, Loss: 1.9814, Train: 0.3857, Val: 0.4160, Test: 0.4470
Epoch: 20, Loss: 2.1125, Train: 0.4071, Val: 0.3980, Test: 0.4120
Epoch: 21, Loss: 2.1443, Train: 0.4214, Val: 0.3580, Test: 0.3850
Epoch: 22, Loss: 2.0197, Train: 0.3786, Val: 0.3300, Test: 0.3460
Epoch: 23, Loss: 1.9616, Train: 0.3500, Val: 0.3120, Test: 0.3250
Epoch: 24, Loss: 1.9065, Train: 0.3357, Val: 0.3040, Test: 0.3010
Epoch: 25, Loss: 2.0732, Train: 0.3214, Val: 0.2780, Test: 0.2790
Epoch: 26, Loss: 1.9175, Train: 0.3143, Val: 0.2700, Test: 0.2670
Epoch: 27, Loss: 2.0139, Train: 0.3143, Val: 0.2540, Test: 0.2560
Epoch: 28, Loss: 2.0751, Train: 0.3143, Val: 0.2480, Test: 0.2380
Epoch: 29, Loss: 1.9807, Train: 0.3214, Val: 0.2260, Test: 0.2300
Epoch: 30, Loss: 1.9214, Train: 0.3143, Val: 0.2140, Test: 0.2250
Epoch: 31, Loss: 1.9270, Train: 0.3143, Val: 0.2140, Test: 0.2180
Epoch: 32, Loss: 1.9817, Train: 0.3143, Val: 0.2140, Test: 0.2120
Epoch: 33, Loss: 1.8920, Train: 0.3143, Val: 0.2080, Test: 0.2120
Epoch: 34, Loss: 2.0534, Train: 0.3143, Val: 0.2100, Test: 0.2080
Epoch: 35, Loss: 1.9860, Train: 0.3143, Val: 0.2100, Test: 0.2050
Epoch: 36, Loss: 1.9349, Train: 0.3214, Val: 0.2060, Test: 0.2030
Epoch: 37, Loss: 1.8327, Train: 0.3143, Val: 0.2060, Test: 0.2020
Epoch: 38, Loss: 1.9285, Train: 0.3214, Val: 0.2120, Test: 0.2010
Epoch: 39, Loss: 1.9247, Train: 0.3000, Val: 0.2100, Test: 0.2000
Epoch: 40, Loss: 1.9006, Train: 0.2929, Val: 0.2040, Test: 0.2040
Epoch: 41, Loss: 1.9701, Train: 0.2857, Val: 0.2020, Test: 0.2040
Epoch: 42, Loss: 1.8363, Train: 0.3071, Val: 0.2040, Test: 0.2090
Epoch: 43, Loss: 1.9323, Train: 0.3214, Val: 0.2100, Test: 0.2140
Epoch: 44, Loss: 1.9851, Train: 0.3500, Val: 0.2140, Test: 0.2170
Epoch: 45, Loss: 1.8922, Train: 0.3429, Val: 0.2200, Test: 0.2140
Epoch: 46, Loss: 1.9081, Train: 0.3500, Val: 0.2220, Test: 0.2190
Epoch: 47, Loss: 1.8948, Train: 0.3429, Val: 0.2200, Test: 0.2120
Epoch: 48, Loss: 1.8540, Train: 0.3429, Val: 0.2200, Test: 0.2050
Epoch: 49, Loss: 1.9598, Train: 0.3357, Val: 0.2100, Test: 0.2010
Epoch: 50, Loss: 1.8272, Train: 0.3500, Val: 0.2000, Test: 0.1910
Epoch: 51, Loss: 2.0033, Train: 0.3429, Val: 0.1920, Test: 0.1850
Epoch: 52, Loss: 1.8463, Train: 0.3357, Val: 0.1580, Test: 0.1720
Epoch: 53, Loss: 1.8484, Train: 0.3071, Val: 0.1420, Test: 0.1670
Epoch: 54, Loss: 1.7885, Train: 0.2857, Val: 0.1340, Test: 0.1510
Epoch: 55, Loss: 1.7805, Train: 0.2714, Val: 0.1260, Test: 0.1470
Epoch: 56, Loss: 1.9279, Train: 0.2643, Val: 0.1260, Test: 0.1470
Epoch: 57, Loss: 1.8215, Train: 0.2643, Val: 0.1200, Test: 0.1440
Epoch: 58, Loss: 1.7892, Train: 0.2643, Val: 0.1180, Test: 0.1460
Epoch: 59, Loss: 1.8123, Train: 0.2714, Val: 0.1180, Test: 0.1450
Epoch: 60, Loss: 1.8186, Train: 0.2786, Val: 0.1180, Test: 0.1480
Epoch: 61, Loss: 1.9367, Train: 0.2857, Val: 0.1220, Test: 0.1480
Epoch: 62, Loss: 1.8833, Train: 0.2929, Val: 0.1240, Test: 0.1530
Epoch: 63, Loss: 1.8086, Train: 0.2929, Val: 0.1340, Test: 0.1620
Epoch: 64, Loss: 1.8429, Train: 0.3071, Val: 0.1380, Test: 0.1650
Epoch: 65, Loss: 1.8806, Train: 0.3143, Val: 0.1540, Test: 0.1740
Epoch: 66, Loss: 1.7702, Train: 0.3286, Val: 0.1660, Test: 0.1890
Epoch: 67, Loss: 1.7606, Train: 0.3571, Val: 0.1720, Test: 0.1990
Epoch: 68, Loss: 1.7312, Train: 0.3714, Val: 0.1820, Test: 0.2120
Epoch: 69, Loss: 1.7841, Train: 0.3786, Val: 0.1840, Test: 0.2190
Epoch: 70, Loss: 1.7644, Train: 0.3929, Val: 0.1900, Test: 0.2240
Epoch: 71, Loss: 1.7337, Train: 0.3929, Val: 0.1940, Test: 0.2280
Epoch: 72, Loss: 1.7230, Train: 0.4143, Val: 0.2040, Test: 0.2330
Epoch: 73, Loss: 1.6437, Train: 0.4214, Val: 0.2240, Test: 0.2390
/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
Epoch: 74, Loss: 1.6464, Train: 0.4286, Val: 0.2280, Test: 0.2480
Epoch: 75, Loss: 1.6617, Train: 0.4214, Val: 0.2260, Test: 0.2470
Epoch: 76, Loss: 1.7372, Train: 0.4214, Val: 0.2240, Test: 0.2460
Epoch: 77, Loss: 1.6700, Train: 0.4214, Val: 0.2240, Test: 0.2460
Epoch: 78, Loss: 1.6420, Train: 0.4214, Val: 0.2240, Test: 0.2450
Epoch: 79, Loss: 1.6360, Train: 0.4214, Val: 0.2220, Test: 0.2480
Epoch: 80, Loss: 1.6778, Train: 0.4286, Val: 0.2260, Test: 0.2520
Epoch: 81, Loss: 1.7065, Train: 0.4143, Val: 0.2280, Test: 0.2470
Epoch: 82, Loss: 1.5482, Train: 0.4143, Val: 0.2320, Test: 0.2550
Epoch: 83, Loss: 1.5926, Train: 0.4071, Val: 0.2380, Test: 0.2640
Epoch: 84, Loss: 1.5391, Train: 0.4143, Val: 0.2420, Test: 0.2710
Epoch: 85, Loss: 1.5668, Train: 0.4214, Val: 0.2580, Test: 0.2850
Epoch: 86, Loss: 1.6045, Train: 0.4286, Val: 0.2660, Test: 0.2970
Epoch: 87, Loss: 1.5738, Train: 0.4357, Val: 0.2740, Test: 0.3090
Epoch: 88, Loss: 1.4888, Train: 0.4357, Val: 0.2760, Test: 0.3180
Epoch: 89, Loss: 1.5451, Train: 0.4357, Val: 0.2860, Test: 0.3300
Epoch: 90, Loss: 1.5538, Train: 0.4500, Val: 0.2880, Test: 0.3430
Epoch: 91, Loss: 1.5828, Train: 0.4643, Val: 0.2920, Test: 0.3460
Epoch: 92, Loss: 1.4487, Train: 0.4643, Val: 0.2880, Test: 0.3510
Epoch: 93, Loss: 1.5192, Train: 0.4714, Val: 0.2880, Test: 0.3570
Epoch: 94, Loss: 1.4573, Train: 0.4714, Val: 0.2880, Test: 0.3600
Epoch: 95, Loss: 1.5196, Train: 0.4714, Val: 0.2920, Test: 0.3580
Epoch: 96, Loss: 1.4382, Train: 0.4714, Val: 0.2940, Test: 0.3610
Epoch: 97, Loss: 1.4277, Train: 0.4714, Val: 0.2940, Test: 0.3590
Epoch: 98, Loss: 1.4085, Train: 0.4643, Val: 0.2940, Test: 0.3590
Epoch: 99, Loss: 1.4462, Train: 0.4643, Val: 0.2940, Test: 0.3620
Epoch: 100, Loss: 1.3936, Train: 0.4643, Val: 0.2940, Test: 0.3650
MAD:  0.7285
Best Test Accuracy: 0.4690, Val Accuracy: 0.4180, Train Accuracy: 0.3714
Training completed.
Seed:  5
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 5.2836, Train: 0.1429, Val: 0.1560, Test: 0.1460
Epoch: 2, Loss: 4.2388, Train: 0.1429, Val: 0.1540, Test: 0.1470
Epoch: 3, Loss: 3.4921, Train: 0.1214, Val: 0.2060, Test: 0.1710
Epoch: 4, Loss: 3.1078, Train: 0.1500, Val: 0.3080, Test: 0.2800
Epoch: 5, Loss: 2.6968, Train: 0.1286, Val: 0.3000, Test: 0.3040
Epoch: 6, Loss: 2.5535, Train: 0.1429, Val: 0.3060, Test: 0.3150
Epoch: 7, Loss: 2.3855, Train: 0.1429, Val: 0.3100, Test: 0.3160
Epoch: 8, Loss: 2.2719, Train: 0.1357, Val: 0.3100, Test: 0.3160
Epoch: 9, Loss: 2.2389, Train: 0.1357, Val: 0.3080, Test: 0.3200
Epoch: 10, Loss: 2.3786, Train: 0.1429, Val: 0.3100, Test: 0.3200
Epoch: 11, Loss: 2.2589, Train: 0.1429, Val: 0.3100, Test: 0.3200
Epoch: 12, Loss: 2.4607, Train: 0.1429, Val: 0.3120, Test: 0.3210
Epoch: 13, Loss: 2.2011, Train: 0.1500, Val: 0.3120, Test: 0.3210
Epoch: 14, Loss: 2.2599, Train: 0.1500, Val: 0.3120, Test: 0.3210
Epoch: 15, Loss: 2.0804, Train: 0.1500, Val: 0.3140, Test: 0.3200
Epoch: 16, Loss: 2.0731, Train: 0.1500, Val: 0.3180, Test: 0.3120
Epoch: 17, Loss: 2.1934, Train: 0.1500, Val: 0.3140, Test: 0.3060
Epoch: 18, Loss: 2.0484, Train: 0.1714, Val: 0.3040, Test: 0.3100
Epoch: 19, Loss: 2.2849, Train: 0.1857, Val: 0.3080, Test: 0.3010
Epoch: 20, Loss: 2.0028, Train: 0.2214, Val: 0.2840, Test: 0.2930
Epoch: 21, Loss: 2.0454, Train: 0.2571, Val: 0.2780, Test: 0.2920
Epoch: 22, Loss: 1.9700, Train: 0.2857, Val: 0.2620, Test: 0.2780
Epoch: 23, Loss: 2.0522, Train: 0.2786, Val: 0.2420, Test: 0.2550
Epoch: 24, Loss: 2.0466, Train: 0.2786, Val: 0.2280, Test: 0.2300
Epoch: 25, Loss: 2.1213, Train: 0.2500, Val: 0.2100, Test: 0.2180
Epoch: 26, Loss: 2.2076, Train: 0.2500, Val: 0.1780, Test: 0.2010
Epoch: 27, Loss: 2.0739, Train: 0.2357, Val: 0.1820, Test: 0.1790
Epoch: 28, Loss: 2.0701, Train: 0.2429, Val: 0.1660, Test: 0.1620
Epoch: 29, Loss: 2.0465, Train: 0.2571, Val: 0.1500, Test: 0.1550
Epoch: 30, Loss: 1.9609, Train: 0.2571, Val: 0.1380, Test: 0.1570
Epoch: 31, Loss: 2.0187, Train: 0.2786, Val: 0.1260, Test: 0.1520
Epoch: 32, Loss: 1.9357, Train: 0.2786, Val: 0.1160, Test: 0.1480
Epoch: 33, Loss: 1.8974, Train: 0.2643, Val: 0.1060, Test: 0.1400
Epoch: 34, Loss: 2.0577, Train: 0.2643, Val: 0.1080, Test: 0.1350
Epoch: 35, Loss: 2.0683, Train: 0.2643, Val: 0.0980, Test: 0.1320
Epoch: 36, Loss: 1.9720, Train: 0.2571, Val: 0.0880, Test: 0.1240
Epoch: 37, Loss: 2.0264, Train: 0.2643, Val: 0.0860, Test: 0.1220
Epoch: 38, Loss: 1.9454, Train: 0.2714, Val: 0.0860, Test: 0.1200
Epoch: 39, Loss: 1.9448, Train: 0.2714, Val: 0.0840, Test: 0.1170
Epoch: 40, Loss: 1.8584, Train: 0.2714, Val: 0.0840, Test: 0.1180
Epoch: 41, Loss: 1.8570, Train: 0.2786, Val: 0.0840, Test: 0.1170
Epoch: 42, Loss: 1.9864, Train: 0.2857, Val: 0.0900, Test: 0.1150
Epoch: 43, Loss: 1.9663, Train: 0.2857, Val: 0.0900, Test: 0.1140
Epoch: 44, Loss: 1.8895, Train: 0.2857, Val: 0.0900, Test: 0.1160
Epoch: 45, Loss: 1.9204, Train: 0.2786, Val: 0.0900, Test: 0.1180
Epoch: 46, Loss: 1.9818, Train: 0.2786, Val: 0.0900, Test: 0.1180
Epoch: 47, Loss: 2.0018, Train: 0.2786, Val: 0.0880, Test: 0.1170
Epoch: 48, Loss: 1.8171, Train: 0.2786, Val: 0.0900, Test: 0.1180
Epoch: 49, Loss: 1.8714, Train: 0.2786, Val: 0.0920, Test: 0.1200
Epoch: 50, Loss: 1.8786, Train: 0.2786, Val: 0.0960, Test: 0.1230
Epoch: 51, Loss: 1.9047, Train: 0.2786, Val: 0.0960, Test: 0.1250
Epoch: 52, Loss: 1.8862, Train: 0.2857, Val: 0.0980, Test: 0.1270
Epoch: 53, Loss: 1.8899, Train: 0.2929, Val: 0.1020, Test: 0.1310
Epoch: 54, Loss: 1.8673, Train: 0.3143, Val: 0.1040, Test: 0.1370
Epoch: 55, Loss: 1.9684, Train: 0.3286, Val: 0.1040, Test: 0.1410
Epoch: 56, Loss: 1.8001, Train: 0.3357, Val: 0.1140, Test: 0.1420
Epoch: 57, Loss: 1.8482, Train: 0.3429, Val: 0.1160, Test: 0.1480
Epoch: 58, Loss: 1.8069, Train: 0.3429, Val: 0.1180, Test: 0.1520
Epoch: 59, Loss: 1.9424, Train: 0.3429, Val: 0.1200, Test: 0.1560
Epoch: 60, Loss: 1.9185, Train: 0.3286, Val: 0.1300, Test: 0.1620
Epoch: 61, Loss: 1.8697, Train: 0.3357, Val: 0.1300, Test: 0.1630
Epoch: 62, Loss: 1.9107, Train: 0.3357, Val: 0.1360, Test: 0.1640
Epoch: 63, Loss: 1.8148, Train: 0.3357, Val: 0.1340, Test: 0.1660
Epoch: 64, Loss: 1.7639, Train: 0.3357, Val: 0.1380, Test: 0.1680
Epoch: 65, Loss: 1.7912, Train: 0.3357, Val: 0.1380, Test: 0.1710
Epoch: 66, Loss: 1.7990, Train: 0.3357, Val: 0.1380, Test: 0.1770
Epoch: 67, Loss: 1.7375, Train: 0.3357, Val: 0.1400, Test: 0.1750
Epoch: 68, Loss: 1.8145, Train: 0.3286, Val: 0.1400, Test: 0.1750
Epoch: 69, Loss: 1.7559, Train: 0.3357, Val: 0.1440, Test: 0.1780
Epoch: 70, Loss: 1.7892, Train: 0.3429, Val: 0.1480, Test: 0.1800
Epoch: 71, Loss: 1.7591, Train: 0.3429, Val: 0.1480, Test: 0.1820
Epoch: 72, Loss: 1.7405, Train: 0.3357, Val: 0.1520, Test: 0.1820
Epoch: 73, Loss: 1.7278, Train: 0.3429, Val: 0.1520, Test: 0.1810
Epoch: 74, Loss: 1.7828, Train: 0.3429, Val: 0.1500, Test: 0.1800
Epoch: 75, Loss: 1.6935, Train: 0.3500, Val: 0.1540, Test: 0.1790
Epoch: 76, Loss: 1.7801, Train: 0.3429, Val: 0.1540, Test: 0.1820
Epoch: 77, Loss: 1.7935, Train: 0.3357, Val: 0.1620, Test: 0.1810
Epoch: 78, Loss: 1.7056, Train: 0.3429, Val: 0.1640, Test: 0.1850
Epoch: 79, Loss: 1.6767, Train: 0.3571, Val: 0.1640, Test: 0.1880
Epoch: 80, Loss: 1.7082, Train: 0.3571, Val: 0.1740, Test: 0.1980
Epoch: 81, Loss: 1.6817, Train: 0.3643, Val: 0.1780, Test: 0.2010
Epoch: 82, Loss: 1.7145, Train: 0.3643, Val: 0.1860, Test: 0.2110
Epoch: 83, Loss: 1.6905, Train: 0.3643, Val: 0.1920, Test: 0.2140
Epoch: 84, Loss: 1.6610, Train: 0.3714, Val: 0.1960, Test: 0.2140
Epoch: 85, Loss: 1.6421, Train: 0.3857, Val: 0.1980, Test: 0.2160
Epoch: 86, Loss: 1.6586, Train: 0.3857, Val: 0.2020, Test: 0.2220
Epoch: 87, Loss: 1.6521, Train: 0.3929, Val: 0.2060, Test: 0.2260
Epoch: 88, Loss: 1.6610, Train: 0.3929, Val: 0.2100, Test: 0.2280
Epoch: 89, Loss: 1.6368, Train: 0.4000, Val: 0.2140, Test: 0.2340
Epoch: 90, Loss: 1.6552, Train: 0.4000, Val: 0.2260, Test: 0.2390
Epoch: 91, Loss: 1.6707, Train: 0.4000, Val: 0.2280, Test: 0.2410
Epoch: 92, Loss: 1.6903, Train: 0.4071, Val: 0.2280, Test: 0.2410
/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
Epoch: 93, Loss: 1.5506, Train: 0.4143, Val: 0.2320, Test: 0.2480
Epoch: 94, Loss: 1.5995, Train: 0.4143, Val: 0.2440, Test: 0.2510
Epoch: 95, Loss: 1.5754, Train: 0.4143, Val: 0.2500, Test: 0.2540
Epoch: 96, Loss: 1.6080, Train: 0.4143, Val: 0.2500, Test: 0.2610
Epoch: 97, Loss: 1.5457, Train: 0.4214, Val: 0.2580, Test: 0.2680
Epoch: 98, Loss: 1.5988, Train: 0.4214, Val: 0.2600, Test: 0.2710
Epoch: 99, Loss: 1.5948, Train: 0.4214, Val: 0.2660, Test: 0.2750
Epoch: 100, Loss: 1.5641, Train: 0.4214, Val: 0.2720, Test: 0.2800
MAD:  0.1205
Best Test Accuracy: 0.3210, Val Accuracy: 0.3120, Train Accuracy: 0.1429
Training completed.
Seed:  6
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 5.3551, Train: 0.1143, Val: 0.1100, Test: 0.0950
Epoch: 2, Loss: 3.6426, Train: 0.0929, Val: 0.0700, Test: 0.0710
Epoch: 3, Loss: 3.1397, Train: 0.1429, Val: 0.0560, Test: 0.0720
Epoch: 4, Loss: 3.2162, Train: 0.1786, Val: 0.0580, Test: 0.0730
Epoch: 5, Loss: 2.4894, Train: 0.1500, Val: 0.0500, Test: 0.0670
Epoch: 6, Loss: 2.6253, Train: 0.1571, Val: 0.0560, Test: 0.0700
Epoch: 7, Loss: 2.4253, Train: 0.1143, Val: 0.0560, Test: 0.0730
Epoch: 8, Loss: 2.3428, Train: 0.1286, Val: 0.0740, Test: 0.0800
Epoch: 9, Loss: 2.3002, Train: 0.1571, Val: 0.0700, Test: 0.0910
Epoch: 10, Loss: 2.3694, Train: 0.1571, Val: 0.0700, Test: 0.0940
Epoch: 11, Loss: 2.1020, Train: 0.1500, Val: 0.0720, Test: 0.0940
Epoch: 12, Loss: 2.4463, Train: 0.1429, Val: 0.0740, Test: 0.0920
Epoch: 13, Loss: 2.1688, Train: 0.1429, Val: 0.0740, Test: 0.0920
Epoch: 14, Loss: 2.2406, Train: 0.1500, Val: 0.0740, Test: 0.0930
Epoch: 15, Loss: 2.2496, Train: 0.1571, Val: 0.0740, Test: 0.0950
Epoch: 16, Loss: 2.1516, Train: 0.1571, Val: 0.0740, Test: 0.0950
Epoch: 17, Loss: 2.0725, Train: 0.1571, Val: 0.0740, Test: 0.0950
Epoch: 18, Loss: 1.9986, Train: 0.1571, Val: 0.0740, Test: 0.1010
Epoch: 19, Loss: 2.0049, Train: 0.1571, Val: 0.0740, Test: 0.1030
Epoch: 20, Loss: 1.9768, Train: 0.1643, Val: 0.0740, Test: 0.1040
Epoch: 21, Loss: 2.0145, Train: 0.1643, Val: 0.0760, Test: 0.1050
Epoch: 22, Loss: 2.0582, Train: 0.1857, Val: 0.0760, Test: 0.1070
Epoch: 23, Loss: 2.1604, Train: 0.1929, Val: 0.0800, Test: 0.1110
Epoch: 24, Loss: 2.0736, Train: 0.2071, Val: 0.0820, Test: 0.1130
Epoch: 25, Loss: 2.0190, Train: 0.2214, Val: 0.0920, Test: 0.1150
Epoch: 26, Loss: 1.9948, Train: 0.2643, Val: 0.0980, Test: 0.1220
Epoch: 27, Loss: 1.9672, Train: 0.2786, Val: 0.1000, Test: 0.1290
Epoch: 28, Loss: 2.0055, Train: 0.2929, Val: 0.1040, Test: 0.1320
Epoch: 29, Loss: 2.0577, Train: 0.3071, Val: 0.1060, Test: 0.1350
Epoch: 30, Loss: 1.9922, Train: 0.3286, Val: 0.1160, Test: 0.1390
Epoch: 31, Loss: 2.0034, Train: 0.3429, Val: 0.1180, Test: 0.1430
Epoch: 32, Loss: 1.9135, Train: 0.3500, Val: 0.1240, Test: 0.1490
Epoch: 33, Loss: 2.0107, Train: 0.3571, Val: 0.1280, Test: 0.1520
Epoch: 34, Loss: 2.0086, Train: 0.3643, Val: 0.1380, Test: 0.1560
Epoch: 35, Loss: 1.9315, Train: 0.3714, Val: 0.1400, Test: 0.1610
Epoch: 36, Loss: 1.9694, Train: 0.3929, Val: 0.1460, Test: 0.1650
Epoch: 37, Loss: 1.9851, Train: 0.4071, Val: 0.1560, Test: 0.1720
Epoch: 38, Loss: 1.9597, Train: 0.4071, Val: 0.1580, Test: 0.1810
Epoch: 39, Loss: 1.8844, Train: 0.4143, Val: 0.1640, Test: 0.1880
Epoch: 40, Loss: 1.9212, Train: 0.4214, Val: 0.1820, Test: 0.1910
Epoch: 41, Loss: 2.0035, Train: 0.4357, Val: 0.1920, Test: 0.2090
Epoch: 42, Loss: 1.9369, Train: 0.4500, Val: 0.2000, Test: 0.2180
Epoch: 43, Loss: 1.9289, Train: 0.4571, Val: 0.2180, Test: 0.2360
Epoch: 44, Loss: 2.1501, Train: 0.4786, Val: 0.2340, Test: 0.2520
Epoch: 45, Loss: 1.9165, Train: 0.4786, Val: 0.2500, Test: 0.2610
Epoch: 46, Loss: 1.9137, Train: 0.5000, Val: 0.2520, Test: 0.2630
Epoch: 47, Loss: 1.9881, Train: 0.5000, Val: 0.2540, Test: 0.2630
Epoch: 48, Loss: 1.8722, Train: 0.5000, Val: 0.2580, Test: 0.2670
Epoch: 49, Loss: 1.8689, Train: 0.5071, Val: 0.2640, Test: 0.2700
Epoch: 50, Loss: 1.9712, Train: 0.5143, Val: 0.2720, Test: 0.2760
Epoch: 51, Loss: 1.9107, Train: 0.5071, Val: 0.2740, Test: 0.2760
Epoch: 52, Loss: 1.9961, Train: 0.5214, Val: 0.2740, Test: 0.2820
Epoch: 53, Loss: 1.8709, Train: 0.5143, Val: 0.2760, Test: 0.2900
Epoch: 54, Loss: 1.8716, Train: 0.5286, Val: 0.2860, Test: 0.3030
Epoch: 55, Loss: 1.8812, Train: 0.5429, Val: 0.2880, Test: 0.3070
Epoch: 56, Loss: 2.0122, Train: 0.5643, Val: 0.2880, Test: 0.3070
Epoch: 57, Loss: 1.8621, Train: 0.5643, Val: 0.2920, Test: 0.3090
Epoch: 58, Loss: 1.8366, Train: 0.5643, Val: 0.2940, Test: 0.3140
Epoch: 59, Loss: 1.8397, Train: 0.5786, Val: 0.3000, Test: 0.3220
Epoch: 60, Loss: 1.9009, Train: 0.5857, Val: 0.2980, Test: 0.3170
Epoch: 61, Loss: 1.8038, Train: 0.5714, Val: 0.3000, Test: 0.3190
Epoch: 62, Loss: 1.9416, Train: 0.5500, Val: 0.2900, Test: 0.3160
Epoch: 63, Loss: 1.8539, Train: 0.5643, Val: 0.2960, Test: 0.3170
Epoch: 64, Loss: 1.9013, Train: 0.5429, Val: 0.2920, Test: 0.3160
Epoch: 65, Loss: 1.8547, Train: 0.5500, Val: 0.2960, Test: 0.3260
Epoch: 66, Loss: 1.8851, Train: 0.5571, Val: 0.2860, Test: 0.3250
Epoch: 67, Loss: 1.8451, Train: 0.5571, Val: 0.2920, Test: 0.3250
Epoch: 68, Loss: 1.7311, Train: 0.5786, Val: 0.2940, Test: 0.3190
Epoch: 69, Loss: 1.7742, Train: 0.5643, Val: 0.2860, Test: 0.3240
Epoch: 70, Loss: 1.8268, Train: 0.5500, Val: 0.2980, Test: 0.3270
Epoch: 71, Loss: 2.0279, Train: 0.5643, Val: 0.3020, Test: 0.3260
Epoch: 72, Loss: 1.9042, Train: 0.5643, Val: 0.3060, Test: 0.3280
Epoch: 73, Loss: 1.8059, Train: 0.5643, Val: 0.3020, Test: 0.3270
Epoch: 74, Loss: 1.8303, Train: 0.5571, Val: 0.3100, Test: 0.3360
Epoch: 75, Loss: 1.7319, Train: 0.5643, Val: 0.3140, Test: 0.3360
Epoch: 76, Loss: 1.7963, Train: 0.5571, Val: 0.3240, Test: 0.3430
Epoch: 77, Loss: 1.7548, Train: 0.5714, Val: 0.3380, Test: 0.3490
Epoch: 78, Loss: 1.7887, Train: 0.5929, Val: 0.3380, Test: 0.3550
Epoch: 79, Loss: 1.7406, Train: 0.6143, Val: 0.3420, Test: 0.3510
Epoch: 80, Loss: 1.7935, Train: 0.6214, Val: 0.3400, Test: 0.3510
Epoch: 81, Loss: 1.8082, Train: 0.6143, Val: 0.3400, Test: 0.3510
Epoch: 82, Loss: 1.5548, Train: 0.6071, Val: 0.3360, Test: 0.3500
Epoch: 83, Loss: 1.7479, Train: 0.6071, Val: 0.3400, Test: 0.3490
Epoch: 84, Loss: 1.6591, Train: 0.5929, Val: 0.3400, Test: 0.3540
Epoch: 85, Loss: 1.6639, Train: 0.5786, Val: 0.3440, Test: 0.3580
Epoch: 86, Loss: 1.7091, Train: 0.5857, Val: 0.3500, Test: 0.3650
Epoch: 87, Loss: 1.7322, Train: 0.5857, Val: 0.3540, Test: 0.3720
Epoch: 88, Loss: 1.6042, Train: 0.5786, Val: 0.3660, Test: 0.3770
Epoch: 89, Loss: 1.7645, Train: 0.5714, Val: 0.3720, Test: 0.3790
Epoch: 90, Loss: 1.6421, Train: 0.5929, Val: 0.3820, Test: 0.3830
Epoch: 91, Loss: 1.5671, Train: 0.6143, Val: 0.3960, Test: 0.3980
Epoch: 92, Loss: 1.5993, Train: 0.6357, Val: 0.4100, Test: 0.4080
Epoch: 93, Loss: 1.6581, Train: 0.6500, Val: 0.4220, Test: 0.4200
Epoch: 94, Loss: 1.6147, Train: 0.6786, Val: 0.4440, Test: 0.4370
Epoch: 95, Loss: 1.6885, Train: 0.6929, Val: 0.4620, Test: 0.4500
Epoch: 96, Loss: 1.4623, Train: 0.6929, Val: 0.4740, Test: 0.4710
Epoch: 97, Loss: 1.5284, Train: 0.7214, Val: 0.4980, Test: 0.4900
Epoch: 98, Loss: 1.4653, Train: 0.7429, Val: 0.5140, Test: 0.4960
Epoch: 99, Loss: 1.5343, Train: 0.7500, Val: 0.5220, Test: 0.5020
Epoch: 100, Loss: 1.5840, Train: 0.7500, Val: 0.5380, Test: 0.5110
MAD:  0.5871
Best Test Accuracy: 0.5110, Val Accuracy: 0.5380, Train Accuracy: 0.7500
Training completed.
Seed:  7
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 5.1574, Train: 0.1500, Val: 0.2780, Test: 0.2760
Epoch: 2, Loss: 3.4471, Train: 0.1929, Val: 0.1280, Test: 0.1300
Epoch: 3, Loss: 3.2651, Train: 0.1857, Val: 0.1300, Test: 0.1290
Epoch: 4, Loss: 3.0157, Train: 0.1786, Val: 0.1360, Test: 0.1350
Epoch: 5, Loss: 2.4821, Train: 0.2071, Val: 0.1360, Test: 0.1480
Epoch: 6, Loss: 2.4635, Train: 0.2214, Val: 0.1360, Test: 0.1540
Epoch: 7, Loss: 2.2846, Train: 0.2357, Val: 0.1500, Test: 0.1610
/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
Epoch: 8, Loss: 2.5251, Train: 0.2500, Val: 0.1580, Test: 0.1730
Epoch: 9, Loss: 2.4365, Train: 0.2571, Val: 0.1680, Test: 0.1790
Epoch: 10, Loss: 2.2576, Train: 0.2571, Val: 0.1760, Test: 0.1870
Epoch: 11, Loss: 2.4262, Train: 0.2714, Val: 0.1820, Test: 0.2020
Epoch: 12, Loss: 2.1274, Train: 0.3000, Val: 0.1940, Test: 0.2140
Epoch: 13, Loss: 2.1580, Train: 0.3357, Val: 0.2140, Test: 0.2270
Epoch: 14, Loss: 2.1715, Train: 0.3357, Val: 0.2300, Test: 0.2290
Epoch: 15, Loss: 2.1306, Train: 0.3429, Val: 0.2340, Test: 0.2380
Epoch: 16, Loss: 2.0007, Train: 0.3429, Val: 0.2340, Test: 0.2410
Epoch: 17, Loss: 2.0730, Train: 0.3571, Val: 0.2460, Test: 0.2380
Epoch: 18, Loss: 1.9528, Train: 0.3571, Val: 0.2440, Test: 0.2380
Epoch: 19, Loss: 2.0490, Train: 0.3571, Val: 0.2460, Test: 0.2340
Epoch: 20, Loss: 2.1233, Train: 0.3571, Val: 0.2460, Test: 0.2300
Epoch: 21, Loss: 2.0242, Train: 0.3643, Val: 0.2400, Test: 0.2360
Epoch: 22, Loss: 1.9985, Train: 0.3571, Val: 0.2400, Test: 0.2330
Epoch: 23, Loss: 2.1796, Train: 0.3714, Val: 0.2420, Test: 0.2320
Epoch: 24, Loss: 2.0473, Train: 0.3857, Val: 0.2440, Test: 0.2320
Epoch: 25, Loss: 1.9480, Train: 0.3786, Val: 0.2380, Test: 0.2310
Epoch: 26, Loss: 1.9547, Train: 0.3857, Val: 0.2320, Test: 0.2340
Epoch: 27, Loss: 2.0145, Train: 0.3857, Val: 0.2340, Test: 0.2370
Epoch: 28, Loss: 2.0507, Train: 0.3929, Val: 0.2340, Test: 0.2420
Epoch: 29, Loss: 2.0548, Train: 0.3929, Val: 0.2460, Test: 0.2430
Epoch: 30, Loss: 2.0939, Train: 0.3929, Val: 0.2460, Test: 0.2530
Epoch: 31, Loss: 2.0519, Train: 0.4071, Val: 0.2520, Test: 0.2620
Epoch: 32, Loss: 1.9785, Train: 0.4071, Val: 0.2620, Test: 0.2670
Epoch: 33, Loss: 1.9617, Train: 0.4357, Val: 0.2720, Test: 0.2700
Epoch: 34, Loss: 1.8791, Train: 0.4357, Val: 0.2800, Test: 0.2770
Epoch: 35, Loss: 1.9561, Train: 0.4357, Val: 0.2960, Test: 0.2950
Epoch: 36, Loss: 1.9548, Train: 0.4500, Val: 0.3000, Test: 0.3070
Epoch: 37, Loss: 2.1363, Train: 0.4714, Val: 0.3120, Test: 0.3130
Epoch: 38, Loss: 1.8958, Train: 0.5000, Val: 0.3240, Test: 0.3210
Epoch: 39, Loss: 1.8675, Train: 0.5071, Val: 0.3360, Test: 0.3300
Epoch: 40, Loss: 1.8521, Train: 0.5286, Val: 0.3480, Test: 0.3430
Epoch: 41, Loss: 1.8992, Train: 0.5429, Val: 0.3540, Test: 0.3520
Epoch: 42, Loss: 1.8603, Train: 0.5714, Val: 0.3660, Test: 0.3590
Epoch: 43, Loss: 1.8257, Train: 0.5786, Val: 0.3680, Test: 0.3660
Epoch: 44, Loss: 1.7860, Train: 0.5929, Val: 0.3700, Test: 0.3720
Epoch: 45, Loss: 1.8499, Train: 0.6000, Val: 0.3700, Test: 0.3740
Epoch: 46, Loss: 1.8063, Train: 0.6000, Val: 0.3700, Test: 0.3750
Epoch: 47, Loss: 1.7667, Train: 0.6071, Val: 0.3780, Test: 0.3790
Epoch: 48, Loss: 1.8530, Train: 0.6286, Val: 0.3820, Test: 0.3850
Epoch: 49, Loss: 1.8994, Train: 0.6214, Val: 0.3780, Test: 0.3870
Epoch: 50, Loss: 1.9809, Train: 0.6286, Val: 0.3680, Test: 0.3870
Epoch: 51, Loss: 1.7207, Train: 0.6214, Val: 0.3680, Test: 0.3900
Epoch: 52, Loss: 1.7959, Train: 0.6143, Val: 0.3720, Test: 0.3930
Epoch: 53, Loss: 1.7848, Train: 0.6286, Val: 0.3820, Test: 0.3930
Epoch: 54, Loss: 1.7929, Train: 0.6214, Val: 0.3980, Test: 0.4010
Epoch: 55, Loss: 1.7744, Train: 0.6286, Val: 0.4080, Test: 0.4060
Epoch: 56, Loss: 1.8016, Train: 0.6286, Val: 0.4080, Test: 0.4080
Epoch: 57, Loss: 1.8385, Train: 0.6429, Val: 0.4080, Test: 0.4160
Epoch: 58, Loss: 1.8285, Train: 0.6500, Val: 0.4120, Test: 0.4210
Epoch: 59, Loss: 1.8126, Train: 0.6429, Val: 0.4120, Test: 0.4210
Epoch: 60, Loss: 1.7497, Train: 0.6429, Val: 0.4100, Test: 0.4230
Epoch: 61, Loss: 1.7031, Train: 0.6500, Val: 0.4140, Test: 0.4250
Epoch: 62, Loss: 1.7198, Train: 0.6500, Val: 0.4240, Test: 0.4220
Epoch: 63, Loss: 1.7306, Train: 0.6429, Val: 0.4260, Test: 0.4240
Epoch: 64, Loss: 1.8053, Train: 0.6429, Val: 0.4260, Test: 0.4230
Epoch: 65, Loss: 1.7701, Train: 0.6357, Val: 0.4240, Test: 0.4190
Epoch: 66, Loss: 1.7140, Train: 0.6286, Val: 0.4240, Test: 0.4220
Epoch: 67, Loss: 1.6895, Train: 0.6286, Val: 0.4260, Test: 0.4220
Epoch: 68, Loss: 1.6282, Train: 0.6286, Val: 0.4280, Test: 0.4230
Epoch: 69, Loss: 1.6091, Train: 0.6357, Val: 0.4280, Test: 0.4210
Epoch: 70, Loss: 1.7041, Train: 0.6429, Val: 0.4300, Test: 0.4220
Epoch: 71, Loss: 1.5357, Train: 0.6429, Val: 0.4280, Test: 0.4250
Epoch: 72, Loss: 1.6397, Train: 0.6429, Val: 0.4240, Test: 0.4350
Epoch: 73, Loss: 1.5701, Train: 0.6643, Val: 0.4340, Test: 0.4430
Epoch: 74, Loss: 1.5508, Train: 0.6643, Val: 0.4440, Test: 0.4460
Epoch: 75, Loss: 1.6332, Train: 0.6714, Val: 0.4500, Test: 0.4460
Epoch: 76, Loss: 1.5643, Train: 0.6786, Val: 0.4480, Test: 0.4500
Epoch: 77, Loss: 1.4669, Train: 0.6786, Val: 0.4460, Test: 0.4520
Epoch: 78, Loss: 1.4749, Train: 0.6786, Val: 0.4440, Test: 0.4560
Epoch: 79, Loss: 1.4760, Train: 0.6786, Val: 0.4440, Test: 0.4560
Epoch: 80, Loss: 1.4971, Train: 0.6786, Val: 0.4480, Test: 0.4560
Epoch: 81, Loss: 1.3852, Train: 0.6714, Val: 0.4360, Test: 0.4530
Epoch: 82, Loss: 1.3843, Train: 0.6571, Val: 0.4340, Test: 0.4500
Epoch: 83, Loss: 1.5020, Train: 0.6500, Val: 0.4300, Test: 0.4450
Epoch: 84, Loss: 1.3880, Train: 0.6500, Val: 0.4260, Test: 0.4430
Epoch: 85, Loss: 1.3250, Train: 0.6571, Val: 0.4200, Test: 0.4380
Epoch: 86, Loss: 1.3575, Train: 0.6571, Val: 0.4060, Test: 0.4290
Epoch: 87, Loss: 1.2757, Train: 0.6429, Val: 0.3980, Test: 0.4160
Epoch: 88, Loss: 1.4469, Train: 0.6429, Val: 0.3900, Test: 0.3990
Epoch: 89, Loss: 1.2289, Train: 0.6286, Val: 0.3880, Test: 0.3940
Epoch: 90, Loss: 1.2507, Train: 0.6286, Val: 0.3900, Test: 0.3990
Epoch: 91, Loss: 1.1583, Train: 0.6357, Val: 0.3880, Test: 0.4070
Epoch: 92, Loss: 1.2437, Train: 0.6571, Val: 0.4100, Test: 0.4310
Epoch: 93, Loss: 1.1948, Train: 0.6786, Val: 0.4260, Test: 0.4470
Epoch: 94, Loss: 1.1659, Train: 0.6929, Val: 0.4420, Test: 0.4650
Epoch: 95, Loss: 1.1224, Train: 0.7143, Val: 0.4440, Test: 0.4870
Epoch: 96, Loss: 1.2273, Train: 0.7214, Val: 0.4660, Test: 0.4910
Epoch: 97, Loss: 1.0856, Train: 0.7286, Val: 0.4780, Test: 0.4980
Epoch: 98, Loss: 1.0204, Train: 0.7286, Val: 0.4820, Test: 0.5010
Epoch: 99, Loss: 1.0359, Train: 0.7286, Val: 0.4900, Test: 0.5110
Epoch: 100, Loss: 1.0448, Train: 0.7429, Val: 0.4980, Test: 0.5100
MAD:  0.8332
Best Test Accuracy: 0.5110, Val Accuracy: 0.4900, Train Accuracy: 0.7286
Training completed.
Seed:  8
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 4.7361, Train: 0.1286, Val: 0.1260, Test: 0.1020
Epoch: 2, Loss: 3.8075, Train: 0.1214, Val: 0.1420, Test: 0.1210
Epoch: 3, Loss: 3.1502, Train: 0.1500, Val: 0.1380, Test: 0.1200
Epoch: 4, Loss: 2.3705, Train: 0.1714, Val: 0.1440, Test: 0.1410
Epoch: 5, Loss: 2.5657, Train: 0.2071, Val: 0.1740, Test: 0.1550
Epoch: 6, Loss: 2.6435, Train: 0.2143, Val: 0.1700, Test: 0.1630
Epoch: 7, Loss: 2.3819, Train: 0.2429, Val: 0.1720, Test: 0.1690
Epoch: 8, Loss: 2.5221, Train: 0.2643, Val: 0.1720, Test: 0.1610
Epoch: 9, Loss: 2.2628, Train: 0.2714, Val: 0.1700, Test: 0.1620
Epoch: 10, Loss: 2.1984, Train: 0.2786, Val: 0.1720, Test: 0.1700
Epoch: 11, Loss: 2.0894, Train: 0.2786, Val: 0.1920, Test: 0.1890
Epoch: 12, Loss: 2.1019, Train: 0.3000, Val: 0.2100, Test: 0.2040
Epoch: 13, Loss: 2.0500, Train: 0.3357, Val: 0.2160, Test: 0.2240
Epoch: 14, Loss: 2.1400, Train: 0.3357, Val: 0.2380, Test: 0.2400
Epoch: 15, Loss: 2.2331, Train: 0.3857, Val: 0.2620, Test: 0.2600
Epoch: 16, Loss: 2.0057, Train: 0.4000, Val: 0.2740, Test: 0.2700
Epoch: 17, Loss: 2.1234, Train: 0.3857, Val: 0.2760, Test: 0.2710
Epoch: 18, Loss: 2.1343, Train: 0.4000, Val: 0.2840, Test: 0.2680
Epoch: 19, Loss: 2.0790, Train: 0.4143, Val: 0.2980, Test: 0.2790
Epoch: 20, Loss: 1.9347, Train: 0.4571, Val: 0.3040, Test: 0.2810
Epoch: 21, Loss: 2.1899, Train: 0.4786, Val: 0.3100, Test: 0.2810
Epoch: 22, Loss: 2.0637, Train: 0.4786, Val: 0.3140, Test: 0.2810
Epoch: 23, Loss: 1.8912, Train: 0.4857, Val: 0.3080, Test: 0.2840
Epoch: 24, Loss: 2.0178, Train: 0.4929, Val: 0.3080, Test: 0.2790
Epoch: 25, Loss: 1.9516, Train: 0.4786, Val: 0.2960, Test: 0.2820
Epoch: 26, Loss: 2.1375, Train: 0.4643, Val: 0.2940, Test: 0.2810
/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
Epoch: 27, Loss: 1.9020, Train: 0.4429, Val: 0.2800, Test: 0.2700
Epoch: 28, Loss: 1.9995, Train: 0.4357, Val: 0.2800, Test: 0.2650
Epoch: 29, Loss: 1.9438, Train: 0.4357, Val: 0.2620, Test: 0.2650
Epoch: 30, Loss: 1.9668, Train: 0.4000, Val: 0.2340, Test: 0.2530
Epoch: 31, Loss: 2.1039, Train: 0.4000, Val: 0.2320, Test: 0.2490
Epoch: 32, Loss: 2.1986, Train: 0.3857, Val: 0.2340, Test: 0.2450
Epoch: 33, Loss: 1.9191, Train: 0.3857, Val: 0.2340, Test: 0.2370
Epoch: 34, Loss: 1.9029, Train: 0.4000, Val: 0.2340, Test: 0.2330
Epoch: 35, Loss: 1.8908, Train: 0.3857, Val: 0.2280, Test: 0.2310
Epoch: 36, Loss: 1.9077, Train: 0.3929, Val: 0.2260, Test: 0.2270
Epoch: 37, Loss: 1.9352, Train: 0.3857, Val: 0.2240, Test: 0.2260
Epoch: 38, Loss: 1.9108, Train: 0.3929, Val: 0.2100, Test: 0.2330
Epoch: 39, Loss: 1.8484, Train: 0.3857, Val: 0.2080, Test: 0.2300
Epoch: 40, Loss: 1.8719, Train: 0.3643, Val: 0.2120, Test: 0.2360
Epoch: 41, Loss: 1.8559, Train: 0.3714, Val: 0.2180, Test: 0.2370
Epoch: 42, Loss: 1.8626, Train: 0.3714, Val: 0.2220, Test: 0.2400
Epoch: 43, Loss: 1.8423, Train: 0.3643, Val: 0.2220, Test: 0.2440
Epoch: 44, Loss: 1.8663, Train: 0.3786, Val: 0.2220, Test: 0.2460
Epoch: 45, Loss: 1.9510, Train: 0.3929, Val: 0.2200, Test: 0.2490
Epoch: 46, Loss: 1.8207, Train: 0.3929, Val: 0.2240, Test: 0.2510
Epoch: 47, Loss: 1.9268, Train: 0.3857, Val: 0.2240, Test: 0.2560
Epoch: 48, Loss: 1.8405, Train: 0.4000, Val: 0.2280, Test: 0.2600
Epoch: 49, Loss: 1.9420, Train: 0.4214, Val: 0.2340, Test: 0.2640
Epoch: 50, Loss: 1.9150, Train: 0.4286, Val: 0.2400, Test: 0.2640
Epoch: 51, Loss: 1.8728, Train: 0.4429, Val: 0.2400, Test: 0.2690
Epoch: 52, Loss: 1.8589, Train: 0.4214, Val: 0.2380, Test: 0.2630
Epoch: 53, Loss: 1.8144, Train: 0.4143, Val: 0.2420, Test: 0.2620
Epoch: 54, Loss: 1.8483, Train: 0.4071, Val: 0.2380, Test: 0.2650
Epoch: 55, Loss: 1.8719, Train: 0.4143, Val: 0.2360, Test: 0.2630
Epoch: 56, Loss: 1.8145, Train: 0.4143, Val: 0.2360, Test: 0.2560
Epoch: 57, Loss: 1.7333, Train: 0.4143, Val: 0.2340, Test: 0.2490
Epoch: 58, Loss: 1.7708, Train: 0.4143, Val: 0.2280, Test: 0.2480
Epoch: 59, Loss: 1.7719, Train: 0.4143, Val: 0.2280, Test: 0.2500
Epoch: 60, Loss: 1.7741, Train: 0.4000, Val: 0.2200, Test: 0.2490
Epoch: 61, Loss: 1.6942, Train: 0.3929, Val: 0.2220, Test: 0.2510
Epoch: 62, Loss: 1.7264, Train: 0.3929, Val: 0.2200, Test: 0.2540
Epoch: 63, Loss: 1.7516, Train: 0.4000, Val: 0.2200, Test: 0.2570
Epoch: 64, Loss: 1.6972, Train: 0.3929, Val: 0.2280, Test: 0.2610
Epoch: 65, Loss: 1.7770, Train: 0.4000, Val: 0.2340, Test: 0.2640
Epoch: 66, Loss: 1.7127, Train: 0.4071, Val: 0.2340, Test: 0.2650
Epoch: 67, Loss: 1.6877, Train: 0.4071, Val: 0.2440, Test: 0.2710
Epoch: 68, Loss: 1.7015, Train: 0.4071, Val: 0.2500, Test: 0.2740
Epoch: 69, Loss: 1.7267, Train: 0.4286, Val: 0.2520, Test: 0.2770
Epoch: 70, Loss: 1.6809, Train: 0.4143, Val: 0.2560, Test: 0.2840
Epoch: 71, Loss: 1.6760, Train: 0.4214, Val: 0.2580, Test: 0.2860
Epoch: 72, Loss: 1.6219, Train: 0.4286, Val: 0.2560, Test: 0.2850
Epoch: 73, Loss: 1.6895, Train: 0.4214, Val: 0.2580, Test: 0.2820
Epoch: 74, Loss: 1.6187, Train: 0.4214, Val: 0.2620, Test: 0.2850
Epoch: 75, Loss: 1.6344, Train: 0.4143, Val: 0.2700, Test: 0.2870
Epoch: 76, Loss: 1.5593, Train: 0.4214, Val: 0.2720, Test: 0.2930
Epoch: 77, Loss: 1.5186, Train: 0.4214, Val: 0.2740, Test: 0.2970
Epoch: 78, Loss: 1.5628, Train: 0.4286, Val: 0.2740, Test: 0.2980
Epoch: 79, Loss: 1.5249, Train: 0.4357, Val: 0.2760, Test: 0.2990
Epoch: 80, Loss: 1.4902, Train: 0.4357, Val: 0.2820, Test: 0.2980
Epoch: 81, Loss: 1.5205, Train: 0.4500, Val: 0.2840, Test: 0.3020
Epoch: 82, Loss: 1.6208, Train: 0.4571, Val: 0.2880, Test: 0.3060
Epoch: 83, Loss: 1.6938, Train: 0.4714, Val: 0.2900, Test: 0.3110
Epoch: 84, Loss: 1.5251, Train: 0.4857, Val: 0.3020, Test: 0.3200
Epoch: 85, Loss: 1.4729, Train: 0.5000, Val: 0.3140, Test: 0.3260
Epoch: 86, Loss: 1.4821, Train: 0.5286, Val: 0.3220, Test: 0.3280
Epoch: 87, Loss: 1.4696, Train: 0.5214, Val: 0.3260, Test: 0.3360
Epoch: 88, Loss: 1.4836, Train: 0.5429, Val: 0.3360, Test: 0.3410
Epoch: 89, Loss: 1.3824, Train: 0.5571, Val: 0.3540, Test: 0.3510
Epoch: 90, Loss: 1.3070, Train: 0.5714, Val: 0.3580, Test: 0.3640
Epoch: 91, Loss: 1.3671, Train: 0.5857, Val: 0.3620, Test: 0.3660
Epoch: 92, Loss: 1.3582, Train: 0.5857, Val: 0.3660, Test: 0.3710
Epoch: 93, Loss: 1.3530, Train: 0.5857, Val: 0.3640, Test: 0.3790
Epoch: 94, Loss: 1.5312, Train: 0.5857, Val: 0.3600, Test: 0.3760
Epoch: 95, Loss: 1.2965, Train: 0.5929, Val: 0.3600, Test: 0.3800
Epoch: 96, Loss: 1.3311, Train: 0.5929, Val: 0.3580, Test: 0.3830
Epoch: 97, Loss: 1.3316, Train: 0.5929, Val: 0.3580, Test: 0.3820
Epoch: 98, Loss: 1.1573, Train: 0.5929, Val: 0.3560, Test: 0.3840
Epoch: 99, Loss: 1.2803, Train: 0.6000, Val: 0.3600, Test: 0.3810
Epoch: 100, Loss: 1.2245, Train: 0.6143, Val: 0.3660, Test: 0.3850
MAD:  0.6365
Best Test Accuracy: 0.3850, Val Accuracy: 0.3660, Train Accuracy: 0.6143
Training completed.
Seed:  9
GCN(
  (convs): ModuleList(
    (0): GCNConv(1433, 128)
    (1-8): 8 x GCNConv(128, 128)
    (9): GCNConv(128, 7)
  )
  (residual_fc): Linear(in_features=1433, out_features=128, bias=True)
)
Epoch: 1, Loss: 4.2783, Train: 0.1786, Val: 0.1300, Test: 0.1180
Epoch: 2, Loss: 3.7136, Train: 0.2214, Val: 0.1320, Test: 0.1280
Epoch: 3, Loss: 2.9313, Train: 0.2214, Val: 0.1580, Test: 0.1510
Epoch: 4, Loss: 2.9001, Train: 0.2643, Val: 0.1740, Test: 0.1780
Epoch: 5, Loss: 2.5713, Train: 0.2500, Val: 0.1820, Test: 0.1890
Epoch: 6, Loss: 2.5086, Train: 0.2500, Val: 0.1840, Test: 0.1890
Epoch: 7, Loss: 2.6540, Train: 0.2500, Val: 0.1900, Test: 0.1870
Epoch: 8, Loss: 2.2342, Train: 0.2714, Val: 0.2060, Test: 0.1930
Epoch: 9, Loss: 2.3823, Train: 0.2786, Val: 0.2180, Test: 0.2010
Epoch: 10, Loss: 2.3620, Train: 0.2857, Val: 0.2260, Test: 0.2070
Epoch: 11, Loss: 2.2319, Train: 0.2857, Val: 0.2200, Test: 0.2210
Epoch: 12, Loss: 2.0535, Train: 0.3214, Val: 0.2260, Test: 0.2250
Epoch: 13, Loss: 2.1990, Train: 0.3286, Val: 0.2340, Test: 0.2340
Epoch: 14, Loss: 2.1126, Train: 0.3429, Val: 0.2420, Test: 0.2360
Epoch: 15, Loss: 1.9771, Train: 0.3500, Val: 0.2480, Test: 0.2430
Epoch: 16, Loss: 2.0182, Train: 0.3643, Val: 0.2720, Test: 0.2550
Epoch: 17, Loss: 2.0898, Train: 0.4071, Val: 0.2920, Test: 0.2680
Epoch: 18, Loss: 2.0852, Train: 0.3929, Val: 0.2940, Test: 0.2870
Epoch: 19, Loss: 2.0190, Train: 0.4000, Val: 0.3160, Test: 0.2980
Epoch: 20, Loss: 2.2236, Train: 0.4357, Val: 0.3140, Test: 0.3000
Epoch: 21, Loss: 2.0941, Train: 0.4286, Val: 0.3140, Test: 0.3070
Epoch: 22, Loss: 2.0832, Train: 0.4286, Val: 0.3260, Test: 0.3090
Epoch: 23, Loss: 2.0305, Train: 0.4143, Val: 0.3240, Test: 0.3140
Epoch: 24, Loss: 2.0014, Train: 0.4143, Val: 0.3260, Test: 0.3200
Epoch: 25, Loss: 2.0905, Train: 0.4429, Val: 0.3280, Test: 0.3230
Epoch: 26, Loss: 2.0453, Train: 0.4571, Val: 0.3260, Test: 0.3240
Epoch: 27, Loss: 1.9172, Train: 0.4500, Val: 0.3280, Test: 0.3220
Epoch: 28, Loss: 1.9836, Train: 0.4571, Val: 0.3340, Test: 0.3180
Epoch: 29, Loss: 2.0580, Train: 0.4643, Val: 0.3160, Test: 0.3110
Epoch: 30, Loss: 1.8933, Train: 0.4500, Val: 0.3040, Test: 0.3070
Epoch: 31, Loss: 1.9200, Train: 0.4571, Val: 0.2880, Test: 0.2890
Epoch: 32, Loss: 1.9705, Train: 0.4500, Val: 0.2820, Test: 0.2690
Epoch: 33, Loss: 2.0702, Train: 0.4429, Val: 0.2580, Test: 0.2530
Epoch: 34, Loss: 1.8832, Train: 0.4357, Val: 0.2540, Test: 0.2500
Epoch: 35, Loss: 2.0276, Train: 0.4214, Val: 0.2340, Test: 0.2460
Epoch: 36, Loss: 1.9371, Train: 0.4143, Val: 0.2300, Test: 0.2410
Epoch: 37, Loss: 1.9457, Train: 0.4000, Val: 0.2200, Test: 0.2340
Epoch: 38, Loss: 1.8507, Train: 0.3929, Val: 0.2100, Test: 0.2330
Epoch: 39, Loss: 1.9660, Train: 0.3786, Val: 0.2080, Test: 0.2280
Epoch: 40, Loss: 1.9634, Train: 0.3786, Val: 0.2040, Test: 0.2190
Epoch: 41, Loss: 2.1086, Train: 0.3714, Val: 0.2000, Test: 0.2190
Epoch: 42, Loss: 1.9583, Train: 0.3786, Val: 0.1960, Test: 0.2180
Epoch: 43, Loss: 1.9181, Train: 0.3786, Val: 0.1960, Test: 0.2160
Epoch: 44, Loss: 1.9269, Train: 0.3929, Val: 0.1980, Test: 0.2150
Epoch: 45, Loss: 1.8713, Train: 0.4000, Val: 0.1960, Test: 0.2110
/root/code/DIR/DIR-GNN/train/cora.py:393: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f"./pkl/{save_name}.pkl"))
Epoch: 46, Loss: 1.8445, Train: 0.4000, Val: 0.1940, Test: 0.2080
Epoch: 47, Loss: 1.9317, Train: 0.3929, Val: 0.1840, Test: 0.2090
Epoch: 48, Loss: 1.8794, Train: 0.3857, Val: 0.1840, Test: 0.2070
Epoch: 49, Loss: 1.9297, Train: 0.3714, Val: 0.1820, Test: 0.2070
Epoch: 50, Loss: 2.0268, Train: 0.3571, Val: 0.1820, Test: 0.2050
Epoch: 51, Loss: 1.8718, Train: 0.3571, Val: 0.1780, Test: 0.2010
Epoch: 52, Loss: 1.8779, Train: 0.3571, Val: 0.1760, Test: 0.2020
Epoch: 53, Loss: 1.7784, Train: 0.3571, Val: 0.1700, Test: 0.2000
Epoch: 54, Loss: 1.9216, Train: 0.3571, Val: 0.1680, Test: 0.1970
Epoch: 55, Loss: 1.9217, Train: 0.3643, Val: 0.1760, Test: 0.1980
Epoch: 56, Loss: 1.8333, Train: 0.3643, Val: 0.1780, Test: 0.1980
Epoch: 57, Loss: 1.8110, Train: 0.3643, Val: 0.1780, Test: 0.1970
Epoch: 58, Loss: 1.8260, Train: 0.3786, Val: 0.1820, Test: 0.1970
Epoch: 59, Loss: 1.8316, Train: 0.3714, Val: 0.1800, Test: 0.1990
Epoch: 60, Loss: 1.8306, Train: 0.3786, Val: 0.1820, Test: 0.2010
Epoch: 61, Loss: 1.8029, Train: 0.3929, Val: 0.1880, Test: 0.2030
Epoch: 62, Loss: 1.7940, Train: 0.3929, Val: 0.1900, Test: 0.2080
Epoch: 63, Loss: 1.7727, Train: 0.3929, Val: 0.1940, Test: 0.2110
Epoch: 64, Loss: 1.8757, Train: 0.3929, Val: 0.1940, Test: 0.2150
Epoch: 65, Loss: 1.7935, Train: 0.3929, Val: 0.2060, Test: 0.2190
Epoch: 66, Loss: 1.7103, Train: 0.3929, Val: 0.2120, Test: 0.2230
Epoch: 67, Loss: 1.7238, Train: 0.3929, Val: 0.2220, Test: 0.2300
Epoch: 68, Loss: 1.7794, Train: 0.4000, Val: 0.2360, Test: 0.2360
Epoch: 69, Loss: 1.7351, Train: 0.4000, Val: 0.2420, Test: 0.2470
Epoch: 70, Loss: 1.7636, Train: 0.4000, Val: 0.2460, Test: 0.2560
Epoch: 71, Loss: 1.7005, Train: 0.4214, Val: 0.2520, Test: 0.2630
Epoch: 72, Loss: 1.7034, Train: 0.4286, Val: 0.2520, Test: 0.2700
Epoch: 73, Loss: 1.7033, Train: 0.4286, Val: 0.2540, Test: 0.2750
Epoch: 74, Loss: 1.7076, Train: 0.4429, Val: 0.2560, Test: 0.2810
Epoch: 75, Loss: 1.6867, Train: 0.4500, Val: 0.2680, Test: 0.2870
Epoch: 76, Loss: 1.6547, Train: 0.4571, Val: 0.2700, Test: 0.2880
Epoch: 77, Loss: 1.6204, Train: 0.4643, Val: 0.2720, Test: 0.2880
Epoch: 78, Loss: 1.6377, Train: 0.4714, Val: 0.2840, Test: 0.2940
Epoch: 79, Loss: 1.6797, Train: 0.4714, Val: 0.2880, Test: 0.2960
Epoch: 80, Loss: 1.6436, Train: 0.4786, Val: 0.2920, Test: 0.3020
Epoch: 81, Loss: 1.6059, Train: 0.4786, Val: 0.2900, Test: 0.3080
Epoch: 82, Loss: 1.6620, Train: 0.4786, Val: 0.2960, Test: 0.3130
Epoch: 83, Loss: 1.5919, Train: 0.4786, Val: 0.2960, Test: 0.3170
Epoch: 84, Loss: 1.5853, Train: 0.4786, Val: 0.2960, Test: 0.3210
Epoch: 85, Loss: 1.6122, Train: 0.4786, Val: 0.2980, Test: 0.3230
Epoch: 86, Loss: 1.6255, Train: 0.4857, Val: 0.3000, Test: 0.3230
Epoch: 87, Loss: 1.4808, Train: 0.4857, Val: 0.3040, Test: 0.3200
Epoch: 88, Loss: 1.4404, Train: 0.4857, Val: 0.3020, Test: 0.3190
Epoch: 89, Loss: 1.5441, Train: 0.5000, Val: 0.3060, Test: 0.3230
Epoch: 90, Loss: 1.4591, Train: 0.4929, Val: 0.3120, Test: 0.3220
Epoch: 91, Loss: 1.6012, Train: 0.5071, Val: 0.3120, Test: 0.3260
Epoch: 92, Loss: 1.4398, Train: 0.5286, Val: 0.3160, Test: 0.3390
Epoch: 93, Loss: 1.4458, Train: 0.5286, Val: 0.3220, Test: 0.3430
Epoch: 94, Loss: 1.4056, Train: 0.5286, Val: 0.3240, Test: 0.3530
Epoch: 95, Loss: 1.4582, Train: 0.5286, Val: 0.3280, Test: 0.3530
Epoch: 96, Loss: 1.3781, Train: 0.5286, Val: 0.3400, Test: 0.3580
Epoch: 97, Loss: 1.5052, Train: 0.5357, Val: 0.3480, Test: 0.3670
Epoch: 98, Loss: 1.4212, Train: 0.5500, Val: 0.3540, Test: 0.3750
Epoch: 99, Loss: 1.4115, Train: 0.5714, Val: 0.3620, Test: 0.3820
Epoch: 100, Loss: 1.4439, Train: 0.5786, Val: 0.3600, Test: 0.3790
MAD:  0.603
Best Test Accuracy: 0.3820, Val Accuracy: 0.3620, Train Accuracy: 0.5714
Training completed.
Average Test Accuracy:  0.42569999999999997 ± 0.0850518077409293
Average MAD:  0.6201 ± 0.22253066754944137
