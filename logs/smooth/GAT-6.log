Seed:  0
Epoch: 1, Loss: 1.9457, Train: 0.2429, Val: 0.1720, Test: 0.1820
Epoch: 2, Loss: 1.9439, Train: 0.3071, Val: 0.2060, Test: 0.2060
Epoch: 3, Loss: 1.9441, Train: 0.3429, Val: 0.2300, Test: 0.2370
Epoch: 4, Loss: 1.9407, Train: 0.3500, Val: 0.2360, Test: 0.2400
Epoch: 5, Loss: 1.9398, Train: 0.4071, Val: 0.2580, Test: 0.2610
Epoch: 6, Loss: 1.9388, Train: 0.4286, Val: 0.2700, Test: 0.2810
Epoch: 7, Loss: 1.9356, Train: 0.4571, Val: 0.2880, Test: 0.3020
Epoch: 8, Loss: 1.9313, Train: 0.4786, Val: 0.3020, Test: 0.3200
Epoch: 9, Loss: 1.9228, Train: 0.4929, Val: 0.3120, Test: 0.3200
Epoch: 10, Loss: 1.9200, Train: 0.4929, Val: 0.3100, Test: 0.3190
Epoch: 11, Loss: 1.9192, Train: 0.4714, Val: 0.3060, Test: 0.3120
Epoch: 12, Loss: 1.9094, Train: 0.4571, Val: 0.3000, Test: 0.3030
Epoch: 13, Loss: 1.8960, Train: 0.4429, Val: 0.2920, Test: 0.2970
Epoch: 14, Loss: 1.8852, Train: 0.4357, Val: 0.2860, Test: 0.2930
Epoch: 15, Loss: 1.8846, Train: 0.4357, Val: 0.2860, Test: 0.2970
Epoch: 16, Loss: 1.8615, Train: 0.4357, Val: 0.2800, Test: 0.2960
Epoch: 17, Loss: 1.8589, Train: 0.4286, Val: 0.2780, Test: 0.2920
Epoch: 18, Loss: 1.8519, Train: 0.4357, Val: 0.2740, Test: 0.2870
Epoch: 19, Loss: 1.8091, Train: 0.4357, Val: 0.2720, Test: 0.2880
Epoch: 20, Loss: 1.7744, Train: 0.4357, Val: 0.2760, Test: 0.2900
Epoch: 21, Loss: 1.7528, Train: 0.4429, Val: 0.2900, Test: 0.2930
Epoch: 22, Loss: 1.7040, Train: 0.4500, Val: 0.2900, Test: 0.2920
Epoch: 23, Loss: 1.7213, Train: 0.4357, Val: 0.2880, Test: 0.2890
Epoch: 24, Loss: 1.6362, Train: 0.4429, Val: 0.2900, Test: 0.2930
Epoch: 25, Loss: 1.7299, Train: 0.4214, Val: 0.2840, Test: 0.2900
Epoch: 26, Loss: 1.5498, Train: 0.4429, Val: 0.2820, Test: 0.2950
Epoch: 27, Loss: 1.5644, Train: 0.4714, Val: 0.2980, Test: 0.3080
Epoch: 28, Loss: 1.4728, Train: 0.5071, Val: 0.3220, Test: 0.3290
Epoch: 29, Loss: 1.4786, Train: 0.5071, Val: 0.3240, Test: 0.3340
Epoch: 30, Loss: 1.5818, Train: 0.5286, Val: 0.3300, Test: 0.3380
Epoch: 31, Loss: 1.4908, Train: 0.5286, Val: 0.3320, Test: 0.3400
Epoch: 32, Loss: 1.5233, Train: 0.5357, Val: 0.3380, Test: 0.3460
Epoch: 33, Loss: 1.4019, Train: 0.5429, Val: 0.3380, Test: 0.3470
Epoch: 34, Loss: 1.4231, Train: 0.5429, Val: 0.3400, Test: 0.3470
Epoch: 35, Loss: 1.4326, Train: 0.5500, Val: 0.3400, Test: 0.3500
Epoch: 36, Loss: 1.3626, Train: 0.5500, Val: 0.3400, Test: 0.3490
Epoch: 37, Loss: 1.3096, Train: 0.5571, Val: 0.3420, Test: 0.3540
Epoch: 38, Loss: 1.2870, Train: 0.5643, Val: 0.3440, Test: 0.3590
Epoch: 39, Loss: 1.2747, Train: 0.5643, Val: 0.3520, Test: 0.3590
Epoch: 40, Loss: 1.2740, Train: 0.5643, Val: 0.3540, Test: 0.3590
Epoch: 41, Loss: 1.2033, Train: 0.5714, Val: 0.3560, Test: 0.3590
Epoch: 42, Loss: 1.3231, Train: 0.5714, Val: 0.3560, Test: 0.3580
Epoch: 43, Loss: 1.1687, Train: 0.5714, Val: 0.3600, Test: 0.3630
Epoch: 44, Loss: 1.3505, Train: 0.6000, Val: 0.3700, Test: 0.3740
Epoch: 45, Loss: 1.1507, Train: 0.6214, Val: 0.3800, Test: 0.3870
Epoch: 46, Loss: 1.2016, Train: 0.6214, Val: 0.3840, Test: 0.3960
Epoch: 47, Loss: 1.2936, Train: 0.6357, Val: 0.3900, Test: 0.4060
Epoch: 48, Loss: 1.2792, Train: 0.6429, Val: 0.4000, Test: 0.4110
Epoch: 49, Loss: 1.2864, Train: 0.6429, Val: 0.4000, Test: 0.4160
Epoch: 50, Loss: 1.2173, Train: 0.6429, Val: 0.4100, Test: 0.4210
MAD:  0.921
Best Test Accuracy: 0.4210, Val Accuracy: 0.4100, Train Accuracy: 0.6429
Training completed.
Seed:  1
Epoch: 1, Loss: 1.9465, Train: 0.1500, Val: 0.1820, Test: 0.1550
Epoch: 2, Loss: 1.9454, Train: 0.2214, Val: 0.1840, Test: 0.1850
Epoch: 3, Loss: 1.9449, Train: 0.2357, Val: 0.1940, Test: 0.2020
Epoch: 4, Loss: 1.9439, Train: 0.2929, Val: 0.2400, Test: 0.2290
Epoch: 5, Loss: 1.9428, Train: 0.3286, Val: 0.2500, Test: 0.2340
Epoch: 6, Loss: 1.9390, Train: 0.3286, Val: 0.2540, Test: 0.2360
Epoch: 7, Loss: 1.9366, Train: 0.3357, Val: 0.2580, Test: 0.2390
Epoch: 8, Loss: 1.9343, Train: 0.3643, Val: 0.2680, Test: 0.2480
Epoch: 9, Loss: 1.9329, Train: 0.4143, Val: 0.3000, Test: 0.2920
Epoch: 10, Loss: 1.9289, Train: 0.4571, Val: 0.3240, Test: 0.3220
Epoch: 11, Loss: 1.9267, Train: 0.4714, Val: 0.3500, Test: 0.3610
Epoch: 12, Loss: 1.9143, Train: 0.5000, Val: 0.3540, Test: 0.3470
Epoch: 13, Loss: 1.9148, Train: 0.4929, Val: 0.3460, Test: 0.3380
Epoch: 14, Loss: 1.9101, Train: 0.4643, Val: 0.3400, Test: 0.3340
Epoch: 15, Loss: 1.8986, Train: 0.4786, Val: 0.3340, Test: 0.3240
Epoch: 16, Loss: 1.8811, Train: 0.4714, Val: 0.3360, Test: 0.3260
Epoch: 17, Loss: 1.8732, Train: 0.4786, Val: 0.3320, Test: 0.3230
Epoch: 18, Loss: 1.8417, Train: 0.4786, Val: 0.3240, Test: 0.3240
Epoch: 19, Loss: 1.8496, Train: 0.4857, Val: 0.3260, Test: 0.3280
Epoch: 20, Loss: 1.8078, Train: 0.4786, Val: 0.3300, Test: 0.3290
Epoch: 21, Loss: 1.8003, Train: 0.4857, Val: 0.3300, Test: 0.3270
Epoch: 22, Loss: 1.7793, Train: 0.5143, Val: 0.3360, Test: 0.3370
Epoch: 23, Loss: 1.7245, Train: 0.5786, Val: 0.3660, Test: 0.3750
Epoch: 24, Loss: 1.6765, Train: 0.5929, Val: 0.3760, Test: 0.3850
Epoch: 25, Loss: 1.6932, Train: 0.6143, Val: 0.3860, Test: 0.3980
Epoch: 26, Loss: 1.6679, Train: 0.5643, Val: 0.3820, Test: 0.3780
Epoch: 27, Loss: 1.7559, Train: 0.5286, Val: 0.3640, Test: 0.3630
Epoch: 28, Loss: 1.6670, Train: 0.5357, Val: 0.3560, Test: 0.3710
Epoch: 29, Loss: 1.6153, Train: 0.5929, Val: 0.3880, Test: 0.3870
Epoch: 30, Loss: 1.6225, Train: 0.6643, Val: 0.4100, Test: 0.4210
Epoch: 31, Loss: 1.5770, Train: 0.6571, Val: 0.4160, Test: 0.4310
Epoch: 32, Loss: 1.5980, Train: 0.6571, Val: 0.4160, Test: 0.4340
Epoch: 33, Loss: 1.5545, Train: 0.6571, Val: 0.4220, Test: 0.4340
Epoch: 34, Loss: 1.5088, Train: 0.6571, Val: 0.4240, Test: 0.4320
Epoch: 35, Loss: 1.4289, Train: 0.6571, Val: 0.4240, Test: 0.4340
Epoch: 36, Loss: 1.3890, Train: 0.6500, Val: 0.4240, Test: 0.4300
Epoch: 37, Loss: 1.3398, Train: 0.6571, Val: 0.4260, Test: 0.4290
Epoch: 38, Loss: 1.3571, Train: 0.6571, Val: 0.4240, Test: 0.4270
Epoch: 39, Loss: 1.3667, Train: 0.6571, Val: 0.4200, Test: 0.4260
Epoch: 40, Loss: 1.3537, Train: 0.6714, Val: 0.4240, Test: 0.4260
Epoch: 41, Loss: 1.4553, Train: 0.6714, Val: 0.4300, Test: 0.4320
Epoch: 42, Loss: 1.3918, Train: 0.6857, Val: 0.4320, Test: 0.4420
Epoch: 43, Loss: 1.2506, Train: 0.6786, Val: 0.4420, Test: 0.4420
Epoch: 44, Loss: 1.2591, Train: 0.6857, Val: 0.4400, Test: 0.4450
Epoch: 45, Loss: 1.2432, Train: 0.6857, Val: 0.4420, Test: 0.4430
Epoch: 46, Loss: 1.1509, Train: 0.6929, Val: 0.4320, Test: 0.4410
Epoch: 47, Loss: 1.1301, Train: 0.6929, Val: 0.4300, Test: 0.4420
Epoch: 48, Loss: 1.2076, Train: 0.6929, Val: 0.4340, Test: 0.4440
Epoch: 49, Loss: 1.1346, Train: 0.6929, Val: 0.4440, Test: 0.4510
Epoch: 50, Loss: 1.2361, Train: 0.7000, Val: 0.4520, Test: 0.4520
MAD:  0.7193
Best Test Accuracy: 0.4520, Val Accuracy: 0.4520, Train Accuracy: 0.7000
Training completed.
Seed:  2
Epoch: 1, Loss: 1.9460, Train: 0.1429, Val: 0.1400, Test: 0.1340
Epoch: 2, Loss: 1.9445, Train: 0.1429, Val: 0.1260, Test: 0.1310
Epoch: 3, Loss: 1.9446, Train: 0.1429, Val: 0.1260, Test: 0.1310
Epoch: 4, Loss: 1.9439, Train: 0.1429, Val: 0.1220, Test: 0.1310
Epoch: 5, Loss: 1.9421, Train: 0.1429, Val: 0.1220, Test: 0.1320
Epoch: 6, Loss: 1.9406, Train: 0.1429, Val: 0.1220, Test: 0.1330
Epoch: 7, Loss: 1.9369, Train: 0.1429, Val: 0.1220, Test: 0.1400
Epoch: 8, Loss: 1.9369, Train: 0.1429, Val: 0.1240, Test: 0.1400
Epoch: 9, Loss: 1.9394, Train: 0.1571, Val: 0.1340, Test: 0.1450
Epoch: 10, Loss: 1.9373, Train: 0.1643, Val: 0.1400, Test: 0.1520
Epoch: 11, Loss: 1.9355, Train: 0.1929, Val: 0.1680, Test: 0.1890
Epoch: 12, Loss: 1.9298, Train: 0.1929, Val: 0.1900, Test: 0.2000
Epoch: 13, Loss: 1.9258, Train: 0.2071, Val: 0.1960, Test: 0.2010
Epoch: 14, Loss: 1.9112, Train: 0.2357, Val: 0.1840, Test: 0.1990
Epoch: 15, Loss: 1.9059, Train: 0.2429, Val: 0.1620, Test: 0.1900
Epoch: 16, Loss: 1.9070, Train: 0.2429, Val: 0.1540, Test: 0.1870
Epoch: 17, Loss: 1.8914, Train: 0.2429, Val: 0.1540, Test: 0.1890
Epoch: 18, Loss: 1.8921, Train: 0.2500, Val: 0.1720, Test: 0.2020
Epoch: 19, Loss: 1.8998, Train: 0.2857, Val: 0.2180, Test: 0.2480
Epoch: 20, Loss: 1.8610, Train: 0.3214, Val: 0.2380, Test: 0.2760
Epoch: 21, Loss: 1.8515, Train: 0.3286, Val: 0.2800, Test: 0.3150
Epoch: 22, Loss: 1.8501, Train: 0.3357, Val: 0.3040, Test: 0.3420
Epoch: 23, Loss: 1.8566, Train: 0.3571, Val: 0.3520, Test: 0.3770
Epoch: 24, Loss: 1.7964, Train: 0.3643, Val: 0.3600, Test: 0.3870
Epoch: 25, Loss: 1.7859, Train: 0.3429, Val: 0.3700, Test: 0.3870
Epoch: 26, Loss: 1.7591, Train: 0.3429, Val: 0.3800, Test: 0.3980
Epoch: 27, Loss: 1.7286, Train: 0.3500, Val: 0.3840, Test: 0.4010
Epoch: 28, Loss: 1.7449, Train: 0.3643, Val: 0.3960, Test: 0.4100
Epoch: 29, Loss: 1.7208, Train: 0.3714, Val: 0.4000, Test: 0.4180
Epoch: 30, Loss: 1.6612, Train: 0.3857, Val: 0.4060, Test: 0.4250
Epoch: 31, Loss: 1.7230, Train: 0.4143, Val: 0.4160, Test: 0.4470
Epoch: 32, Loss: 1.6176, Train: 0.4214, Val: 0.4320, Test: 0.4500
Epoch: 33, Loss: 1.5990, Train: 0.4357, Val: 0.4500, Test: 0.4600
Epoch: 34, Loss: 1.5578, Train: 0.4571, Val: 0.4340, Test: 0.4670
Epoch: 35, Loss: 1.6246, Train: 0.4500, Val: 0.4420, Test: 0.4730
Epoch: 36, Loss: 1.5398, Train: 0.5000, Val: 0.4780, Test: 0.5040
Epoch: 37, Loss: 1.4863, Train: 0.5571, Val: 0.5060, Test: 0.5400
Epoch: 38, Loss: 1.4250, Train: 0.6000, Val: 0.5160, Test: 0.5450
Epoch: 39, Loss: 1.5736, Train: 0.5643, Val: 0.4980, Test: 0.5160
Epoch: 40, Loss: 1.4615, Train: 0.5857, Val: 0.5020, Test: 0.5180
Epoch: 41, Loss: 1.4945, Train: 0.5857, Val: 0.5000, Test: 0.5170
Epoch: 42, Loss: 1.4415, Train: 0.7000, Val: 0.5560, Test: 0.5700
Epoch: 43, Loss: 1.3207, Train: 0.7500, Val: 0.5640, Test: 0.6110
Epoch: 44, Loss: 1.4329, Train: 0.7571, Val: 0.5900, Test: 0.6340
Epoch: 45, Loss: 1.2773, Train: 0.7357, Val: 0.6000, Test: 0.6470
Epoch: 46, Loss: 1.3378, Train: 0.7714, Val: 0.6160, Test: 0.6410
Epoch: 47, Loss: 1.3842, Train: 0.8000, Val: 0.6080, Test: 0.6290
Epoch: 48, Loss: 1.3365, Train: 0.8071, Val: 0.5780, Test: 0.6050
Epoch: 49, Loss: 1.1875, Train: 0.8143, Val: 0.5680, Test: 0.6020
Epoch: 50, Loss: 1.2107, Train: 0.8143, Val: 0.5660, Test: 0.6030
MAD:  0.5054
Best Test Accuracy: 0.6470, Val Accuracy: 0.6000, Train Accuracy: 0.7357
Training completed.
Seed:  3
Epoch: 1, Loss: 1.9465, Train: 0.1429, Val: 0.1720, Test: 0.1550
Epoch: 2, Loss: 1.9453, Train: 0.1786, Val: 0.1740, Test: 0.1660
Epoch: 3, Loss: 1.9453, Train: 0.3357, Val: 0.2540, Test: 0.2570
Epoch: 4, Loss: 1.9450, Train: 0.3286, Val: 0.1960, Test: 0.2110
Epoch: 5, Loss: 1.9434, Train: 0.1857, Val: 0.1160, Test: 0.1190
Epoch: 6, Loss: 1.9412, Train: 0.1571, Val: 0.0840, Test: 0.0950
Epoch: 7, Loss: 1.9402, Train: 0.1429, Val: 0.0740, Test: 0.0900
Epoch: 8, Loss: 1.9391, Train: 0.1500, Val: 0.0720, Test: 0.0900
Epoch: 9, Loss: 1.9369, Train: 0.1429, Val: 0.0740, Test: 0.0900
Epoch: 10, Loss: 1.9366, Train: 0.1857, Val: 0.0940, Test: 0.1210
Epoch: 11, Loss: 1.9299, Train: 0.2571, Val: 0.1600, Test: 0.1680
Epoch: 12, Loss: 1.9266, Train: 0.2714, Val: 0.1960, Test: 0.1940
Epoch: 13, Loss: 1.9240, Train: 0.2786, Val: 0.2140, Test: 0.2160
Epoch: 14, Loss: 1.9108, Train: 0.2929, Val: 0.2280, Test: 0.2280
Epoch: 15, Loss: 1.9190, Train: 0.2929, Val: 0.2280, Test: 0.2290
Epoch: 16, Loss: 1.8975, Train: 0.2929, Val: 0.2340, Test: 0.2330
Epoch: 17, Loss: 1.8979, Train: 0.3000, Val: 0.2300, Test: 0.2310
Epoch: 18, Loss: 1.8823, Train: 0.3000, Val: 0.2300, Test: 0.2320
Epoch: 19, Loss: 1.8600, Train: 0.3214, Val: 0.2400, Test: 0.2450
Epoch: 20, Loss: 1.8518, Train: 0.3286, Val: 0.2480, Test: 0.2490
Epoch: 21, Loss: 1.8417, Train: 0.3571, Val: 0.2680, Test: 0.2600
Epoch: 22, Loss: 1.8182, Train: 0.3714, Val: 0.2820, Test: 0.2730
Epoch: 23, Loss: 1.7858, Train: 0.4071, Val: 0.3060, Test: 0.2980
Epoch: 24, Loss: 1.8189, Train: 0.4714, Val: 0.3500, Test: 0.3300
Epoch: 25, Loss: 1.7785, Train: 0.4857, Val: 0.3720, Test: 0.3490
Epoch: 26, Loss: 1.7742, Train: 0.4857, Val: 0.3800, Test: 0.3640
Epoch: 27, Loss: 1.7230, Train: 0.4786, Val: 0.3700, Test: 0.3580
Epoch: 28, Loss: 1.7636, Train: 0.4571, Val: 0.3540, Test: 0.3470
Epoch: 29, Loss: 1.6414, Train: 0.4571, Val: 0.3580, Test: 0.3440
Epoch: 30, Loss: 1.6092, Train: 0.4643, Val: 0.3680, Test: 0.3560
Epoch: 31, Loss: 1.6223, Train: 0.4857, Val: 0.3760, Test: 0.3710
Epoch: 32, Loss: 1.6924, Train: 0.5071, Val: 0.3800, Test: 0.3690
Epoch: 33, Loss: 1.6005, Train: 0.5143, Val: 0.3720, Test: 0.3720
Epoch: 34, Loss: 1.5367, Train: 0.5214, Val: 0.3800, Test: 0.3790
Epoch: 35, Loss: 1.4970, Train: 0.5143, Val: 0.3780, Test: 0.3770
Epoch: 36, Loss: 1.5499, Train: 0.5143, Val: 0.3920, Test: 0.3810
Epoch: 37, Loss: 1.4395, Train: 0.5214, Val: 0.4040, Test: 0.3920
Epoch: 38, Loss: 1.5189, Train: 0.5500, Val: 0.4260, Test: 0.4170
Epoch: 39, Loss: 1.4080, Train: 0.5571, Val: 0.4400, Test: 0.4300
Epoch: 40, Loss: 1.4147, Train: 0.5571, Val: 0.4320, Test: 0.4170
Epoch: 41, Loss: 1.4888, Train: 0.5571, Val: 0.4160, Test: 0.4110
Epoch: 42, Loss: 1.3953, Train: 0.5571, Val: 0.4160, Test: 0.4070
Epoch: 43, Loss: 1.3877, Train: 0.5571, Val: 0.4200, Test: 0.4080
Epoch: 44, Loss: 1.3525, Train: 0.5643, Val: 0.4280, Test: 0.4130
Epoch: 45, Loss: 1.3454, Train: 0.5643, Val: 0.4280, Test: 0.4140
Epoch: 46, Loss: 1.2719, Train: 0.5643, Val: 0.4260, Test: 0.4200
Epoch: 47, Loss: 1.3840, Train: 0.5643, Val: 0.4340, Test: 0.4200
Epoch: 48, Loss: 1.2970, Train: 0.5643, Val: 0.4320, Test: 0.4210
Epoch: 49, Loss: 1.4303, Train: 0.5857, Val: 0.4340, Test: 0.4240
Epoch: 50, Loss: 1.3551, Train: 0.5714, Val: 0.4460, Test: 0.4340
MAD:  0.7951
Best Test Accuracy: 0.4340, Val Accuracy: 0.4460, Train Accuracy: 0.5714
Training completed.
Seed:  4
Epoch: 1, Loss: 1.9450, Train: 0.2214, Val: 0.2780, Test: 0.3110
Epoch: 2, Loss: 1.9439, Train: 0.1786, Val: 0.1900, Test: 0.2090
Epoch: 3, Loss: 1.9444, Train: 0.1929, Val: 0.2320, Test: 0.2460
Epoch: 4, Loss: 1.9414, Train: 0.2500, Val: 0.3220, Test: 0.3450
Epoch: 5, Loss: 1.9423, Train: 0.2929, Val: 0.3600, Test: 0.3810
Epoch: 6, Loss: 1.9394, Train: 0.3857, Val: 0.4100, Test: 0.4230
Epoch: 7, Loss: 1.9361, Train: 0.4214, Val: 0.4200, Test: 0.4470
Epoch: 8, Loss: 1.9306, Train: 0.4214, Val: 0.4260, Test: 0.4580
Epoch: 9, Loss: 1.9326, Train: 0.4214, Val: 0.4300, Test: 0.4660
Epoch: 10, Loss: 1.9178, Train: 0.4000, Val: 0.4200, Test: 0.4610
Epoch: 11, Loss: 1.9184, Train: 0.4071, Val: 0.4180, Test: 0.4520
Epoch: 12, Loss: 1.9108, Train: 0.4000, Val: 0.4160, Test: 0.4430
Epoch: 13, Loss: 1.9138, Train: 0.4071, Val: 0.4240, Test: 0.4560
Epoch: 14, Loss: 1.9048, Train: 0.3857, Val: 0.4060, Test: 0.4390
Epoch: 15, Loss: 1.8770, Train: 0.3857, Val: 0.4060, Test: 0.4300
Epoch: 16, Loss: 1.8786, Train: 0.4000, Val: 0.3920, Test: 0.4240
Epoch: 17, Loss: 1.8665, Train: 0.3929, Val: 0.3940, Test: 0.4250
Epoch: 18, Loss: 1.8157, Train: 0.3786, Val: 0.3820, Test: 0.4240
Epoch: 19, Loss: 1.8317, Train: 0.3786, Val: 0.3820, Test: 0.4200
Epoch: 20, Loss: 1.7994, Train: 0.3786, Val: 0.3840, Test: 0.4260
Epoch: 21, Loss: 1.8031, Train: 0.4000, Val: 0.3980, Test: 0.4300
Epoch: 22, Loss: 1.7293, Train: 0.4143, Val: 0.4020, Test: 0.4320
Epoch: 23, Loss: 1.7009, Train: 0.4214, Val: 0.4000, Test: 0.4250
Epoch: 24, Loss: 1.7348, Train: 0.4286, Val: 0.4080, Test: 0.4350
Epoch: 25, Loss: 1.6981, Train: 0.4214, Val: 0.4080, Test: 0.4410
Epoch: 26, Loss: 1.6988, Train: 0.4214, Val: 0.4060, Test: 0.4480
Epoch: 27, Loss: 1.6601, Train: 0.4286, Val: 0.4120, Test: 0.4530
Epoch: 28, Loss: 1.6520, Train: 0.4286, Val: 0.4100, Test: 0.4470
Epoch: 29, Loss: 1.5833, Train: 0.4214, Val: 0.4140, Test: 0.4500
Epoch: 30, Loss: 1.5546, Train: 0.4571, Val: 0.4280, Test: 0.4660
Epoch: 31, Loss: 1.6161, Train: 0.4786, Val: 0.4440, Test: 0.4750
Epoch: 32, Loss: 1.5327, Train: 0.4786, Val: 0.4440, Test: 0.4840
Epoch: 33, Loss: 1.5472, Train: 0.4786, Val: 0.4380, Test: 0.4850
Epoch: 34, Loss: 1.4684, Train: 0.4786, Val: 0.4300, Test: 0.4750
Epoch: 35, Loss: 1.4139, Train: 0.4929, Val: 0.4320, Test: 0.4780
Epoch: 36, Loss: 1.5008, Train: 0.5071, Val: 0.4520, Test: 0.4880
Epoch: 37, Loss: 1.4552, Train: 0.5143, Val: 0.4540, Test: 0.5000
Epoch: 38, Loss: 1.3952, Train: 0.5286, Val: 0.4660, Test: 0.5040
Epoch: 39, Loss: 1.4605, Train: 0.5214, Val: 0.4680, Test: 0.5070
Epoch: 40, Loss: 1.3985, Train: 0.5357, Val: 0.4680, Test: 0.4980
Epoch: 41, Loss: 1.3835, Train: 0.5571, Val: 0.4700, Test: 0.5000
Epoch: 42, Loss: 1.4076, Train: 0.5571, Val: 0.4780, Test: 0.5050
Epoch: 43, Loss: 1.5233, Train: 0.5500, Val: 0.4740, Test: 0.5020
Epoch: 44, Loss: 1.4037, Train: 0.5500, Val: 0.4700, Test: 0.5060
Epoch: 45, Loss: 1.2664, Train: 0.5643, Val: 0.4700, Test: 0.5030
Epoch: 46, Loss: 1.3638, Train: 0.5571, Val: 0.4680, Test: 0.5030
Epoch: 47, Loss: 1.2728, Train: 0.5643, Val: 0.4640, Test: 0.5020
Epoch: 48, Loss: 1.3146, Train: 0.5500, Val: 0.4640, Test: 0.5030
Epoch: 49, Loss: 1.2399, Train: 0.5571, Val: 0.4640, Test: 0.5040
Epoch: 50, Loss: 1.2708, Train: 0.5500, Val: 0.4640, Test: 0.5010
MAD:  0.8062
Best Test Accuracy: 0.5070, Val Accuracy: 0.4680, Train Accuracy: 0.5214
Training completed.
Seed:  5
Epoch: 1, Loss: 1.9465, Train: 0.1643, Val: 0.2040, Test: 0.1830
Epoch: 2, Loss: 1.9451, Train: 0.1786, Val: 0.1480, Test: 0.1450
Epoch: 3, Loss: 1.9459, Train: 0.1857, Val: 0.2100, Test: 0.1860
Epoch: 4, Loss: 1.9425, Train: 0.3143, Val: 0.2420, Test: 0.2520
Epoch: 5, Loss: 1.9424, Train: 0.3429, Val: 0.2520, Test: 0.2810
Epoch: 6, Loss: 1.9412, Train: 0.4429, Val: 0.3280, Test: 0.3410
Epoch: 7, Loss: 1.9404, Train: 0.4500, Val: 0.3480, Test: 0.3530
Epoch: 8, Loss: 1.9397, Train: 0.4714, Val: 0.3520, Test: 0.3640
Epoch: 9, Loss: 1.9343, Train: 0.4643, Val: 0.3540, Test: 0.3430
Epoch: 10, Loss: 1.9323, Train: 0.4643, Val: 0.3240, Test: 0.3170
Epoch: 11, Loss: 1.9327, Train: 0.4214, Val: 0.3020, Test: 0.2890
Epoch: 12, Loss: 1.9249, Train: 0.4000, Val: 0.2880, Test: 0.2820
Epoch: 13, Loss: 1.9094, Train: 0.4000, Val: 0.2680, Test: 0.2690
Epoch: 14, Loss: 1.9145, Train: 0.3929, Val: 0.2740, Test: 0.2720
Epoch: 15, Loss: 1.9019, Train: 0.4071, Val: 0.2820, Test: 0.2750
Epoch: 16, Loss: 1.8908, Train: 0.4071, Val: 0.2940, Test: 0.2840
Epoch: 17, Loss: 1.8984, Train: 0.4286, Val: 0.3060, Test: 0.2940
Epoch: 18, Loss: 1.8877, Train: 0.4429, Val: 0.3220, Test: 0.3030
Epoch: 19, Loss: 1.8693, Train: 0.4429, Val: 0.3240, Test: 0.2960
Epoch: 20, Loss: 1.8489, Train: 0.4286, Val: 0.2960, Test: 0.2850
Epoch: 21, Loss: 1.8207, Train: 0.4143, Val: 0.2940, Test: 0.2840
Epoch: 22, Loss: 1.8074, Train: 0.4143, Val: 0.2940, Test: 0.2810
Epoch: 23, Loss: 1.7737, Train: 0.4143, Val: 0.2920, Test: 0.2830
Epoch: 24, Loss: 1.7310, Train: 0.4214, Val: 0.2980, Test: 0.2850
Epoch: 25, Loss: 1.7056, Train: 0.4286, Val: 0.3140, Test: 0.2960
Epoch: 26, Loss: 1.6843, Train: 0.4714, Val: 0.3440, Test: 0.3130
Epoch: 27, Loss: 1.7179, Train: 0.4786, Val: 0.3500, Test: 0.3280
Epoch: 28, Loss: 1.5482, Train: 0.4857, Val: 0.3620, Test: 0.3410
Epoch: 29, Loss: 1.6029, Train: 0.4929, Val: 0.3640, Test: 0.3530
Epoch: 30, Loss: 1.5672, Train: 0.5000, Val: 0.3800, Test: 0.3510
Epoch: 31, Loss: 1.5879, Train: 0.5214, Val: 0.3840, Test: 0.3600
Epoch: 32, Loss: 1.5016, Train: 0.5500, Val: 0.4300, Test: 0.4150
Epoch: 33, Loss: 1.5746, Train: 0.5571, Val: 0.4700, Test: 0.4690
Epoch: 34, Loss: 1.5668, Train: 0.6286, Val: 0.5360, Test: 0.5380
Epoch: 35, Loss: 1.3967, Train: 0.6429, Val: 0.5900, Test: 0.5770
Epoch: 36, Loss: 1.4124, Train: 0.6500, Val: 0.5820, Test: 0.5950
Epoch: 37, Loss: 1.4399, Train: 0.6500, Val: 0.5900, Test: 0.5930
Epoch: 38, Loss: 1.4006, Train: 0.6429, Val: 0.5900, Test: 0.5960
Epoch: 39, Loss: 1.3328, Train: 0.6429, Val: 0.5960, Test: 0.6000
Epoch: 40, Loss: 1.3457, Train: 0.6500, Val: 0.5980, Test: 0.5980
Epoch: 41, Loss: 1.4016, Train: 0.6500, Val: 0.5940, Test: 0.6050
Epoch: 42, Loss: 1.3460, Train: 0.6571, Val: 0.5880, Test: 0.6030
Epoch: 43, Loss: 1.3492, Train: 0.6643, Val: 0.5860, Test: 0.6000
Epoch: 44, Loss: 1.2288, Train: 0.6786, Val: 0.5880, Test: 0.6010
Epoch: 45, Loss: 1.3399, Train: 0.6786, Val: 0.5920, Test: 0.6020
Epoch: 46, Loss: 1.2356, Train: 0.6786, Val: 0.6020, Test: 0.6040
Epoch: 47, Loss: 1.3042, Train: 0.6786, Val: 0.5960, Test: 0.6060
Epoch: 48, Loss: 1.1744, Train: 0.6857, Val: 0.5960, Test: 0.6060
Epoch: 49, Loss: 1.3098, Train: 0.6857, Val: 0.6020, Test: 0.6080
Epoch: 50, Loss: 1.1627, Train: 0.6857, Val: 0.6060, Test: 0.6140
MAD:  0.6258
Best Test Accuracy: 0.6140, Val Accuracy: 0.6060, Train Accuracy: 0.6857
Training completed.
Seed:  6
Epoch: 1, Loss: 1.9464, Train: 0.1429, Val: 0.1140, Test: 0.1060
Epoch: 2, Loss: 1.9455, Train: 0.1929, Val: 0.1520, Test: 0.1590
Epoch: 3, Loss: 1.9462, Train: 0.2214, Val: 0.1780, Test: 0.1750
Epoch: 4, Loss: 1.9440, Train: 0.2429, Val: 0.1860, Test: 0.1820
Epoch: 5, Loss: 1.9453, Train: 0.2500, Val: 0.2100, Test: 0.1970
Epoch: 6, Loss: 1.9422, Train: 0.2714, Val: 0.2460, Test: 0.2110
Epoch: 7, Loss: 1.9424, Train: 0.2786, Val: 0.2600, Test: 0.2340
Epoch: 8, Loss: 1.9405, Train: 0.2857, Val: 0.2660, Test: 0.2440
Epoch: 9, Loss: 1.9381, Train: 0.3286, Val: 0.2780, Test: 0.2550
Epoch: 10, Loss: 1.9371, Train: 0.3500, Val: 0.2940, Test: 0.2840
Epoch: 11, Loss: 1.9309, Train: 0.3857, Val: 0.3260, Test: 0.3020
Epoch: 12, Loss: 1.9331, Train: 0.3929, Val: 0.3720, Test: 0.3320
Epoch: 13, Loss: 1.9280, Train: 0.4071, Val: 0.3840, Test: 0.3490
Epoch: 14, Loss: 1.9206, Train: 0.4071, Val: 0.3920, Test: 0.3560
Epoch: 15, Loss: 1.9169, Train: 0.4071, Val: 0.4000, Test: 0.3610
Epoch: 16, Loss: 1.9132, Train: 0.4071, Val: 0.4000, Test: 0.3610
Epoch: 17, Loss: 1.9044, Train: 0.4143, Val: 0.3980, Test: 0.3610
Epoch: 18, Loss: 1.8928, Train: 0.4143, Val: 0.3960, Test: 0.3570
Epoch: 19, Loss: 1.8856, Train: 0.4143, Val: 0.3960, Test: 0.3550
Epoch: 20, Loss: 1.8625, Train: 0.4143, Val: 0.3980, Test: 0.3570
Epoch: 21, Loss: 1.8597, Train: 0.4143, Val: 0.4000, Test: 0.3600
Epoch: 22, Loss: 1.8367, Train: 0.4143, Val: 0.4000, Test: 0.3620
Epoch: 23, Loss: 1.7968, Train: 0.4143, Val: 0.4000, Test: 0.3650
Epoch: 24, Loss: 1.8210, Train: 0.4143, Val: 0.4000, Test: 0.3660
Epoch: 25, Loss: 1.7651, Train: 0.4143, Val: 0.4000, Test: 0.3650
Epoch: 26, Loss: 1.7120, Train: 0.4143, Val: 0.3980, Test: 0.3650
Epoch: 27, Loss: 1.7170, Train: 0.4143, Val: 0.4000, Test: 0.3660
Epoch: 28, Loss: 1.7013, Train: 0.4214, Val: 0.3980, Test: 0.3670
Epoch: 29, Loss: 1.6179, Train: 0.4214, Val: 0.3980, Test: 0.3660
Epoch: 30, Loss: 1.5647, Train: 0.4214, Val: 0.3980, Test: 0.3660
Epoch: 31, Loss: 1.6279, Train: 0.4286, Val: 0.3980, Test: 0.3680
Epoch: 32, Loss: 1.6169, Train: 0.4286, Val: 0.4060, Test: 0.3750
Epoch: 33, Loss: 1.5546, Train: 0.4286, Val: 0.4080, Test: 0.3760
Epoch: 34, Loss: 1.5174, Train: 0.4214, Val: 0.4020, Test: 0.3730
Epoch: 35, Loss: 1.4527, Train: 0.4286, Val: 0.4040, Test: 0.3690
Epoch: 36, Loss: 1.5571, Train: 0.4571, Val: 0.4120, Test: 0.3800
Epoch: 37, Loss: 1.5209, Train: 0.5143, Val: 0.4300, Test: 0.4050
Epoch: 38, Loss: 1.4577, Train: 0.5643, Val: 0.4660, Test: 0.4270
Epoch: 39, Loss: 1.4433, Train: 0.5571, Val: 0.4600, Test: 0.4310
Epoch: 40, Loss: 1.4566, Train: 0.5714, Val: 0.4620, Test: 0.4320
Epoch: 41, Loss: 1.4473, Train: 0.5857, Val: 0.4760, Test: 0.4440
Epoch: 42, Loss: 1.4090, Train: 0.6071, Val: 0.4920, Test: 0.4480
Epoch: 43, Loss: 1.4408, Train: 0.6071, Val: 0.4900, Test: 0.4530
Epoch: 44, Loss: 1.3510, Train: 0.6143, Val: 0.4840, Test: 0.4540
Epoch: 45, Loss: 1.3822, Train: 0.6071, Val: 0.4780, Test: 0.4460
Epoch: 46, Loss: 1.3788, Train: 0.6071, Val: 0.4620, Test: 0.4360
Epoch: 47, Loss: 1.3879, Train: 0.6143, Val: 0.4660, Test: 0.4360
Epoch: 48, Loss: 1.3644, Train: 0.6786, Val: 0.4820, Test: 0.4700
Epoch: 49, Loss: 1.3134, Train: 0.6857, Val: 0.4940, Test: 0.4720
Epoch: 50, Loss: 1.3836, Train: 0.7000, Val: 0.4940, Test: 0.4720
MAD:  0.5569
Best Test Accuracy: 0.4720, Val Accuracy: 0.4940, Train Accuracy: 0.6857
Training completed.
Seed:  7
Epoch: 1, Loss: 1.9447, Train: 0.2143, Val: 0.1280, Test: 0.1330
Epoch: 2, Loss: 1.9436, Train: 0.2929, Val: 0.1540, Test: 0.1760
Epoch: 3, Loss: 1.9428, Train: 0.2500, Val: 0.1280, Test: 0.1520
Epoch: 4, Loss: 1.9418, Train: 0.2286, Val: 0.1320, Test: 0.1500
Epoch: 5, Loss: 1.9410, Train: 0.3357, Val: 0.1660, Test: 0.1860
Epoch: 6, Loss: 1.9371, Train: 0.4071, Val: 0.2060, Test: 0.2200
Epoch: 7, Loss: 1.9311, Train: 0.4286, Val: 0.2320, Test: 0.2430
Epoch: 8, Loss: 1.9289, Train: 0.4357, Val: 0.2360, Test: 0.2520
Epoch: 9, Loss: 1.9280, Train: 0.5071, Val: 0.2780, Test: 0.2920
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 10, Loss: 1.9260, Train: 0.5357, Val: 0.3260, Test: 0.3450
Epoch: 11, Loss: 1.9124, Train: 0.5429, Val: 0.3240, Test: 0.3320
Epoch: 12, Loss: 1.9104, Train: 0.5286, Val: 0.3160, Test: 0.3230
Epoch: 13, Loss: 1.9041, Train: 0.5500, Val: 0.3280, Test: 0.3320
Epoch: 14, Loss: 1.8873, Train: 0.5357, Val: 0.3360, Test: 0.3440
Epoch: 15, Loss: 1.8611, Train: 0.5286, Val: 0.3420, Test: 0.3400
Epoch: 16, Loss: 1.8666, Train: 0.5643, Val: 0.3420, Test: 0.3520
Epoch: 17, Loss: 1.8416, Train: 0.5643, Val: 0.3500, Test: 0.3550
Epoch: 18, Loss: 1.8204, Train: 0.5643, Val: 0.3500, Test: 0.3560
Epoch: 19, Loss: 1.8434, Train: 0.5714, Val: 0.3540, Test: 0.3620
Epoch: 20, Loss: 1.7689, Train: 0.5929, Val: 0.3600, Test: 0.3750
Epoch: 21, Loss: 1.7857, Train: 0.6071, Val: 0.3800, Test: 0.3890
Epoch: 22, Loss: 1.7339, Train: 0.6214, Val: 0.3760, Test: 0.4010
Epoch: 23, Loss: 1.7274, Train: 0.6429, Val: 0.3800, Test: 0.4010
Epoch: 24, Loss: 1.6398, Train: 0.6357, Val: 0.3940, Test: 0.4040
Epoch: 25, Loss: 1.6142, Train: 0.6286, Val: 0.3860, Test: 0.4000
Epoch: 26, Loss: 1.6436, Train: 0.6429, Val: 0.3840, Test: 0.3950
Epoch: 27, Loss: 1.5417, Train: 0.6429, Val: 0.3860, Test: 0.4000
Epoch: 28, Loss: 1.5234, Train: 0.6286, Val: 0.3780, Test: 0.4040
Epoch: 29, Loss: 1.5450, Train: 0.6214, Val: 0.3820, Test: 0.4050
Epoch: 30, Loss: 1.4608, Train: 0.6429, Val: 0.3900, Test: 0.4110
Epoch: 31, Loss: 1.4370, Train: 0.6429, Val: 0.3880, Test: 0.4180
Epoch: 32, Loss: 1.4377, Train: 0.6571, Val: 0.4000, Test: 0.4230
Epoch: 33, Loss: 1.3310, Train: 0.6643, Val: 0.4040, Test: 0.4290
Epoch: 34, Loss: 1.3166, Train: 0.6714, Val: 0.4100, Test: 0.4350
Epoch: 35, Loss: 1.3452, Train: 0.6714, Val: 0.4080, Test: 0.4320
Epoch: 36, Loss: 1.3692, Train: 0.6786, Val: 0.4060, Test: 0.4260
Epoch: 37, Loss: 1.2151, Train: 0.6786, Val: 0.4120, Test: 0.4280
Epoch: 38, Loss: 1.1855, Train: 0.6714, Val: 0.4200, Test: 0.4420
Epoch: 39, Loss: 1.2585, Train: 0.6714, Val: 0.4260, Test: 0.4430
Epoch: 40, Loss: 1.1485, Train: 0.6714, Val: 0.4300, Test: 0.4460
Epoch: 41, Loss: 1.2037, Train: 0.6786, Val: 0.4300, Test: 0.4450
Epoch: 42, Loss: 1.0896, Train: 0.6929, Val: 0.4260, Test: 0.4460
Epoch: 43, Loss: 1.1102, Train: 0.6857, Val: 0.4240, Test: 0.4440
Epoch: 44, Loss: 1.0280, Train: 0.6786, Val: 0.4300, Test: 0.4560
Epoch: 45, Loss: 1.1618, Train: 0.6786, Val: 0.4400, Test: 0.4520
Epoch: 46, Loss: 1.1917, Train: 0.6857, Val: 0.4440, Test: 0.4490
Epoch: 47, Loss: 1.0342, Train: 0.6929, Val: 0.4420, Test: 0.4520
Epoch: 48, Loss: 1.0363, Train: 0.6929, Val: 0.4460, Test: 0.4530
Epoch: 49, Loss: 1.0486, Train: 0.7214, Val: 0.4440, Test: 0.4500
Epoch: 50, Loss: 1.0469, Train: 0.7071, Val: 0.4440, Test: 0.4550
MAD:  0.7054
Best Test Accuracy: 0.4560, Val Accuracy: 0.4300, Train Accuracy: 0.6786
Training completed.
Seed:  8
Epoch: 1, Loss: 1.9463, Train: 0.2286, Val: 0.2180, Test: 0.2030
Epoch: 2, Loss: 1.9444, Train: 0.1857, Val: 0.1800, Test: 0.1600
Epoch: 3, Loss: 1.9436, Train: 0.2571, Val: 0.2280, Test: 0.2180
Epoch: 4, Loss: 1.9405, Train: 0.2857, Val: 0.2460, Test: 0.2330
Epoch: 5, Loss: 1.9402, Train: 0.3071, Val: 0.2680, Test: 0.2540
Epoch: 6, Loss: 1.9382, Train: 0.3143, Val: 0.2840, Test: 0.2620
Epoch: 7, Loss: 1.9325, Train: 0.3286, Val: 0.2860, Test: 0.2640
Epoch: 8, Loss: 1.9267, Train: 0.3286, Val: 0.3020, Test: 0.2690
Epoch: 9, Loss: 1.9191, Train: 0.3286, Val: 0.2960, Test: 0.2630
Epoch: 10, Loss: 1.9180, Train: 0.3286, Val: 0.2920, Test: 0.2630
Epoch: 11, Loss: 1.9166, Train: 0.3357, Val: 0.3080, Test: 0.2740
Epoch: 12, Loss: 1.8973, Train: 0.3286, Val: 0.2960, Test: 0.2680
Epoch: 13, Loss: 1.8912, Train: 0.3286, Val: 0.2940, Test: 0.2650
Epoch: 14, Loss: 1.8920, Train: 0.3357, Val: 0.2980, Test: 0.2690
Epoch: 15, Loss: 1.8719, Train: 0.3429, Val: 0.3060, Test: 0.2820
Epoch: 16, Loss: 1.8473, Train: 0.3429, Val: 0.3020, Test: 0.2770
Epoch: 17, Loss: 1.8377, Train: 0.3357, Val: 0.2960, Test: 0.2710
Epoch: 18, Loss: 1.8441, Train: 0.3286, Val: 0.2740, Test: 0.2620
Epoch: 19, Loss: 1.8015, Train: 0.3071, Val: 0.2680, Test: 0.2550
Epoch: 20, Loss: 1.7628, Train: 0.3000, Val: 0.2640, Test: 0.2510
Epoch: 21, Loss: 1.7692, Train: 0.3000, Val: 0.2640, Test: 0.2510
Epoch: 22, Loss: 1.7858, Train: 0.3000, Val: 0.2660, Test: 0.2520
Epoch: 23, Loss: 1.7027, Train: 0.3071, Val: 0.2640, Test: 0.2560
Epoch: 24, Loss: 1.6674, Train: 0.3143, Val: 0.2700, Test: 0.2640
Epoch: 25, Loss: 1.6227, Train: 0.3286, Val: 0.2740, Test: 0.2700
Epoch: 26, Loss: 1.6549, Train: 0.3500, Val: 0.2860, Test: 0.2980
Epoch: 27, Loss: 1.6797, Train: 0.4071, Val: 0.3320, Test: 0.3360
Epoch: 28, Loss: 1.5508, Train: 0.4429, Val: 0.3760, Test: 0.3700
Epoch: 29, Loss: 1.5365, Train: 0.4571, Val: 0.4240, Test: 0.4060
Epoch: 30, Loss: 1.5557, Train: 0.5000, Val: 0.4660, Test: 0.4410
Epoch: 31, Loss: 1.5738, Train: 0.5214, Val: 0.4940, Test: 0.5040
Epoch: 32, Loss: 1.5613, Train: 0.5643, Val: 0.5240, Test: 0.5320
Epoch: 33, Loss: 1.5169, Train: 0.5786, Val: 0.5220, Test: 0.5390
Epoch: 34, Loss: 1.5700, Train: 0.5714, Val: 0.5180, Test: 0.5410
Epoch: 35, Loss: 1.4984, Train: 0.5714, Val: 0.5360, Test: 0.5380
Epoch: 36, Loss: 1.4717, Train: 0.5714, Val: 0.5380, Test: 0.5390
Epoch: 37, Loss: 1.3979, Train: 0.5786, Val: 0.5400, Test: 0.5490
Epoch: 38, Loss: 1.3518, Train: 0.5857, Val: 0.5460, Test: 0.5540
Epoch: 39, Loss: 1.4033, Train: 0.5929, Val: 0.5480, Test: 0.5600
Epoch: 40, Loss: 1.3860, Train: 0.6000, Val: 0.5600, Test: 0.5740
Epoch: 41, Loss: 1.3341, Train: 0.6214, Val: 0.5560, Test: 0.5980
Epoch: 42, Loss: 1.4095, Train: 0.6429, Val: 0.5620, Test: 0.6050
Epoch: 43, Loss: 1.3732, Train: 0.6286, Val: 0.5660, Test: 0.5740
Epoch: 44, Loss: 1.3053, Train: 0.6286, Val: 0.5620, Test: 0.5520
Epoch: 45, Loss: 1.4184, Train: 0.6357, Val: 0.5620, Test: 0.5580
Epoch: 46, Loss: 1.3083, Train: 0.6500, Val: 0.5640, Test: 0.5800
Epoch: 47, Loss: 1.3072, Train: 0.6643, Val: 0.5700, Test: 0.6050
Epoch: 48, Loss: 1.2575, Train: 0.6714, Val: 0.5780, Test: 0.6080
Epoch: 49, Loss: 1.3199, Train: 0.6643, Val: 0.5920, Test: 0.6050
Epoch: 50, Loss: 1.2951, Train: 0.6714, Val: 0.5880, Test: 0.6000
MAD:  0.6263
Best Test Accuracy: 0.6080, Val Accuracy: 0.5780, Train Accuracy: 0.6714
Training completed.
Seed:  9
Epoch: 1, Loss: 1.9456, Train: 0.2143, Val: 0.1620, Test: 0.1680
Epoch: 2, Loss: 1.9415, Train: 0.1929, Val: 0.1560, Test: 0.1570
Epoch: 3, Loss: 1.9401, Train: 0.1786, Val: 0.1500, Test: 0.1470
Epoch: 4, Loss: 1.9414, Train: 0.1857, Val: 0.1500, Test: 0.1500
Epoch: 5, Loss: 1.9339, Train: 0.2071, Val: 0.1560, Test: 0.1560
Epoch: 6, Loss: 1.9299, Train: 0.2500, Val: 0.1800, Test: 0.1800
Epoch: 7, Loss: 1.9272, Train: 0.3143, Val: 0.2220, Test: 0.2340
Epoch: 8, Loss: 1.9236, Train: 0.4286, Val: 0.3420, Test: 0.3480
Epoch: 9, Loss: 1.9153, Train: 0.4429, Val: 0.3660, Test: 0.3690
Epoch: 10, Loss: 1.8983, Train: 0.4357, Val: 0.3700, Test: 0.3690
Epoch: 11, Loss: 1.9020, Train: 0.4071, Val: 0.3660, Test: 0.3620
Epoch: 12, Loss: 1.8760, Train: 0.4071, Val: 0.3620, Test: 0.3560
Epoch: 13, Loss: 1.8899, Train: 0.4357, Val: 0.3760, Test: 0.3780
Epoch: 14, Loss: 1.8614, Train: 0.4643, Val: 0.3940, Test: 0.3900
Epoch: 15, Loss: 1.8363, Train: 0.4714, Val: 0.4060, Test: 0.3930
Epoch: 16, Loss: 1.8165, Train: 0.5071, Val: 0.4100, Test: 0.4020
Epoch: 17, Loss: 1.7839, Train: 0.5071, Val: 0.4120, Test: 0.4060
Epoch: 18, Loss: 1.7835, Train: 0.5071, Val: 0.4200, Test: 0.4090
Epoch: 19, Loss: 1.7436, Train: 0.5071, Val: 0.4280, Test: 0.4120
Epoch: 20, Loss: 1.6993, Train: 0.5143, Val: 0.4340, Test: 0.4220
Epoch: 21, Loss: 1.7060, Train: 0.5357, Val: 0.4440, Test: 0.4270
Epoch: 22, Loss: 1.6744, Train: 0.5571, Val: 0.4840, Test: 0.4660
Epoch: 23, Loss: 1.7029, Train: 0.5857, Val: 0.5320, Test: 0.4940
Epoch: 24, Loss: 1.6497, Train: 0.6286, Val: 0.5680, Test: 0.5270
Epoch: 25, Loss: 1.6689, Train: 0.6286, Val: 0.6020, Test: 0.5780
Epoch: 26, Loss: 1.6091, Train: 0.6429, Val: 0.6160, Test: 0.5710
Epoch: 27, Loss: 1.4927, Train: 0.6500, Val: 0.6440, Test: 0.6100
Epoch: 28, Loss: 1.4403, Train: 0.6500, Val: 0.6660, Test: 0.6380
Epoch: 29, Loss: 1.4415, Train: 0.6571, Val: 0.6800, Test: 0.6430
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 30, Loss: 1.3524, Train: 0.7000, Val: 0.6840, Test: 0.6450
Epoch: 31, Loss: 1.3629, Train: 0.6857, Val: 0.6980, Test: 0.6490
Epoch: 32, Loss: 1.3731, Train: 0.6929, Val: 0.6940, Test: 0.6480
Epoch: 33, Loss: 1.4040, Train: 0.7571, Val: 0.6900, Test: 0.6700
Epoch: 34, Loss: 1.3730, Train: 0.7500, Val: 0.6940, Test: 0.6640
Epoch: 35, Loss: 1.2942, Train: 0.7643, Val: 0.6980, Test: 0.6920
Epoch: 36, Loss: 1.2866, Train: 0.7857, Val: 0.7100, Test: 0.6860
Epoch: 37, Loss: 1.3044, Train: 0.7857, Val: 0.7160, Test: 0.6760
Epoch: 38, Loss: 1.1908, Train: 0.7857, Val: 0.7100, Test: 0.6690
Epoch: 39, Loss: 1.2168, Train: 0.7929, Val: 0.7080, Test: 0.6700
Epoch: 40, Loss: 1.1408, Train: 0.8143, Val: 0.7080, Test: 0.6830
Epoch: 41, Loss: 1.1554, Train: 0.8143, Val: 0.7100, Test: 0.6950
Epoch: 42, Loss: 1.0978, Train: 0.7929, Val: 0.7180, Test: 0.6930
Epoch: 43, Loss: 1.0882, Train: 0.7929, Val: 0.7300, Test: 0.6940
Epoch: 44, Loss: 0.9380, Train: 0.8000, Val: 0.7220, Test: 0.7060
Epoch: 45, Loss: 1.1612, Train: 0.8143, Val: 0.7120, Test: 0.7060
Epoch: 46, Loss: 1.0841, Train: 0.8286, Val: 0.7160, Test: 0.7060
Epoch: 47, Loss: 0.9978, Train: 0.8143, Val: 0.7140, Test: 0.7060
Epoch: 48, Loss: 0.8715, Train: 0.8214, Val: 0.7160, Test: 0.7010
Epoch: 49, Loss: 0.9974, Train: 0.8143, Val: 0.7200, Test: 0.7070
Epoch: 50, Loss: 1.0054, Train: 0.8286, Val: 0.7240, Test: 0.7120
MAD:  0.728
Best Test Accuracy: 0.7120, Val Accuracy: 0.7240, Train Accuracy: 0.8286
Training completed.
Average Test Accuracy:  0.5323 ± 0.09820901180645288
Average MAD:  0.69894 ± 0.11816173830813427
