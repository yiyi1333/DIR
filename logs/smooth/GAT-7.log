Seed:  0
Epoch: 1, Loss: 1.9460, Train: 0.1500, Val: 0.0760, Test: 0.0920
Epoch: 2, Loss: 1.9432, Train: 0.1786, Val: 0.0700, Test: 0.0930
Epoch: 3, Loss: 1.9427, Train: 0.1786, Val: 0.0720, Test: 0.0940
Epoch: 4, Loss: 1.9437, Train: 0.2000, Val: 0.0760, Test: 0.0950
Epoch: 5, Loss: 1.9401, Train: 0.2286, Val: 0.0980, Test: 0.1200
Epoch: 6, Loss: 1.9399, Train: 0.2857, Val: 0.1240, Test: 0.1600
Epoch: 7, Loss: 1.9336, Train: 0.3286, Val: 0.1520, Test: 0.1960
Epoch: 8, Loss: 1.9302, Train: 0.3500, Val: 0.1760, Test: 0.2120
Epoch: 9, Loss: 1.9271, Train: 0.3929, Val: 0.2160, Test: 0.2470
Epoch: 10, Loss: 1.9213, Train: 0.3929, Val: 0.2320, Test: 0.2530
Epoch: 11, Loss: 1.9156, Train: 0.4000, Val: 0.2380, Test: 0.2590
Epoch: 12, Loss: 1.9171, Train: 0.4071, Val: 0.2360, Test: 0.2600
Epoch: 13, Loss: 1.9027, Train: 0.4000, Val: 0.2240, Test: 0.2550
Epoch: 14, Loss: 1.8919, Train: 0.3929, Val: 0.2220, Test: 0.2560
Epoch: 15, Loss: 1.8951, Train: 0.4071, Val: 0.2360, Test: 0.2620
Epoch: 16, Loss: 1.8493, Train: 0.4143, Val: 0.2480, Test: 0.2660
Epoch: 17, Loss: 1.8312, Train: 0.4214, Val: 0.2500, Test: 0.2670
Epoch: 18, Loss: 1.8577, Train: 0.4286, Val: 0.2560, Test: 0.2710
Epoch: 19, Loss: 1.8306, Train: 0.4286, Val: 0.2560, Test: 0.2710
Epoch: 20, Loss: 1.7665, Train: 0.4286, Val: 0.2680, Test: 0.2800
Epoch: 21, Loss: 1.7568, Train: 0.4571, Val: 0.2840, Test: 0.2880
Epoch: 22, Loss: 1.6864, Train: 0.4643, Val: 0.2880, Test: 0.2920
Epoch: 23, Loss: 1.6991, Train: 0.5000, Val: 0.3140, Test: 0.3080
Epoch: 24, Loss: 1.6225, Train: 0.5214, Val: 0.3320, Test: 0.3270
Epoch: 25, Loss: 1.6533, Train: 0.5643, Val: 0.3600, Test: 0.3650
Epoch: 26, Loss: 1.5403, Train: 0.5857, Val: 0.3960, Test: 0.3970
Epoch: 27, Loss: 1.5301, Train: 0.6286, Val: 0.4220, Test: 0.4190
Epoch: 28, Loss: 1.5681, Train: 0.6643, Val: 0.4560, Test: 0.4500
Epoch: 29, Loss: 1.4141, Train: 0.6714, Val: 0.4720, Test: 0.4610
Epoch: 30, Loss: 1.3989, Train: 0.6786, Val: 0.4780, Test: 0.4720
Epoch: 31, Loss: 1.5363, Train: 0.7143, Val: 0.5180, Test: 0.5070
Epoch: 32, Loss: 1.4310, Train: 0.7786, Val: 0.5420, Test: 0.5330
Epoch: 33, Loss: 1.4131, Train: 0.8000, Val: 0.5520, Test: 0.5520
Epoch: 34, Loss: 1.3699, Train: 0.8071, Val: 0.5680, Test: 0.5540
Epoch: 35, Loss: 1.2847, Train: 0.8000, Val: 0.5500, Test: 0.5400
Epoch: 36, Loss: 1.3054, Train: 0.7929, Val: 0.5400, Test: 0.5400
Epoch: 37, Loss: 1.2607, Train: 0.8143, Val: 0.5540, Test: 0.5410
Epoch: 38, Loss: 1.2501, Train: 0.8143, Val: 0.5580, Test: 0.5470
Epoch: 39, Loss: 1.2221, Train: 0.8143, Val: 0.5640, Test: 0.5530
Epoch: 40, Loss: 1.0861, Train: 0.8286, Val: 0.5660, Test: 0.5600
Epoch: 41, Loss: 1.1618, Train: 0.8357, Val: 0.5720, Test: 0.5510
Epoch: 42, Loss: 1.2464, Train: 0.8357, Val: 0.5760, Test: 0.5570
Epoch: 43, Loss: 1.0396, Train: 0.8357, Val: 0.5820, Test: 0.5590
Epoch: 44, Loss: 0.9469, Train: 0.8286, Val: 0.5840, Test: 0.5600
Epoch: 45, Loss: 1.0051, Train: 0.8286, Val: 0.5660, Test: 0.5630
Epoch: 46, Loss: 1.0133, Train: 0.8429, Val: 0.5680, Test: 0.5620
Epoch: 47, Loss: 1.0130, Train: 0.8571, Val: 0.5900, Test: 0.5770
Epoch: 48, Loss: 0.9471, Train: 0.8643, Val: 0.6100, Test: 0.5910
Epoch: 49, Loss: 0.9125, Train: 0.8571, Val: 0.6300, Test: 0.6040
Epoch: 50, Loss: 0.9624, Train: 0.8714, Val: 0.6300, Test: 0.6130
MAD:  0.6738
Best Test Accuracy: 0.6130, Val Accuracy: 0.6300, Train Accuracy: 0.8714
Training completed.
Seed:  1
Epoch: 1, Loss: 1.9460, Train: 0.1429, Val: 0.0740, Test: 0.0910
Epoch: 2, Loss: 1.9452, Train: 0.1571, Val: 0.0740, Test: 0.0920
Epoch: 3, Loss: 1.9454, Train: 0.1929, Val: 0.0760, Test: 0.0950
Epoch: 4, Loss: 1.9448, Train: 0.2429, Val: 0.0860, Test: 0.1140
Epoch: 5, Loss: 1.9453, Train: 0.2714, Val: 0.1180, Test: 0.1420
Epoch: 6, Loss: 1.9446, Train: 0.2714, Val: 0.1160, Test: 0.1360
Epoch: 7, Loss: 1.9445, Train: 0.2714, Val: 0.1160, Test: 0.1370
Epoch: 8, Loss: 1.9417, Train: 0.2929, Val: 0.1300, Test: 0.1510
Epoch: 9, Loss: 1.9425, Train: 0.3500, Val: 0.1600, Test: 0.1780
Epoch: 10, Loss: 1.9400, Train: 0.3429, Val: 0.1560, Test: 0.1800
Epoch: 11, Loss: 1.9379, Train: 0.3714, Val: 0.1680, Test: 0.1900
Epoch: 12, Loss: 1.9343, Train: 0.3357, Val: 0.1580, Test: 0.1770
Epoch: 13, Loss: 1.9280, Train: 0.3286, Val: 0.1480, Test: 0.1840
Epoch: 14, Loss: 1.9320, Train: 0.3214, Val: 0.1380, Test: 0.1760
Epoch: 15, Loss: 1.9297, Train: 0.3286, Val: 0.1360, Test: 0.1760
Epoch: 16, Loss: 1.9215, Train: 0.3286, Val: 0.1380, Test: 0.1680
Epoch: 17, Loss: 1.9194, Train: 0.3214, Val: 0.1320, Test: 0.1630
Epoch: 18, Loss: 1.9035, Train: 0.3214, Val: 0.1360, Test: 0.1720
Epoch: 19, Loss: 1.8969, Train: 0.3429, Val: 0.1400, Test: 0.1800
Epoch: 20, Loss: 1.8922, Train: 0.3286, Val: 0.1380, Test: 0.1720
Epoch: 21, Loss: 1.8695, Train: 0.3429, Val: 0.1420, Test: 0.1720
Epoch: 22, Loss: 1.8488, Train: 0.3429, Val: 0.1400, Test: 0.1720
Epoch: 23, Loss: 1.8403, Train: 0.3429, Val: 0.1380, Test: 0.1690
Epoch: 24, Loss: 1.8040, Train: 0.3429, Val: 0.1360, Test: 0.1710
Epoch: 25, Loss: 1.8400, Train: 0.3071, Val: 0.1300, Test: 0.1630
Epoch: 26, Loss: 1.7464, Train: 0.3071, Val: 0.1200, Test: 0.1580
Epoch: 27, Loss: 1.7404, Train: 0.2929, Val: 0.1280, Test: 0.1570
Epoch: 28, Loss: 1.7615, Train: 0.3000, Val: 0.1280, Test: 0.1620
Epoch: 29, Loss: 1.7513, Train: 0.3071, Val: 0.1280, Test: 0.1630
Epoch: 30, Loss: 1.7077, Train: 0.3286, Val: 0.1400, Test: 0.1790
Epoch: 31, Loss: 1.7093, Train: 0.3929, Val: 0.1800, Test: 0.2240
Epoch: 32, Loss: 1.6605, Train: 0.4000, Val: 0.1860, Test: 0.2260
Epoch: 33, Loss: 1.6555, Train: 0.4143, Val: 0.1960, Test: 0.2360
Epoch: 34, Loss: 1.6347, Train: 0.4429, Val: 0.2100, Test: 0.2520
Epoch: 35, Loss: 1.5605, Train: 0.4786, Val: 0.2300, Test: 0.2690
Epoch: 36, Loss: 1.6885, Train: 0.4857, Val: 0.2540, Test: 0.2820
Epoch: 37, Loss: 1.5403, Train: 0.4857, Val: 0.2900, Test: 0.3000
Epoch: 38, Loss: 1.5672, Train: 0.5214, Val: 0.2940, Test: 0.3300
Epoch: 39, Loss: 1.5946, Train: 0.5357, Val: 0.3180, Test: 0.3460
Epoch: 40, Loss: 1.5960, Train: 0.5571, Val: 0.3360, Test: 0.3560
Epoch: 41, Loss: 1.5010, Train: 0.5500, Val: 0.3360, Test: 0.3600
Epoch: 42, Loss: 1.5104, Train: 0.5571, Val: 0.3380, Test: 0.3710
Epoch: 43, Loss: 1.4340, Train: 0.5571, Val: 0.3500, Test: 0.3720
Epoch: 44, Loss: 1.3873, Train: 0.5571, Val: 0.3360, Test: 0.3550
Epoch: 45, Loss: 1.4454, Train: 0.5571, Val: 0.3460, Test: 0.3670
Epoch: 46, Loss: 1.3966, Train: 0.5571, Val: 0.3480, Test: 0.3760
Epoch: 47, Loss: 1.4254, Train: 0.5571, Val: 0.3440, Test: 0.3710
Epoch: 48, Loss: 1.4656, Train: 0.5571, Val: 0.3440, Test: 0.3660
Epoch: 49, Loss: 1.3477, Train: 0.5571, Val: 0.3300, Test: 0.3530
Epoch: 50, Loss: 1.3247, Train: 0.5571, Val: 0.3260, Test: 0.3550
MAD:  0.5414
Best Test Accuracy: 0.3760, Val Accuracy: 0.3480, Train Accuracy: 0.5571
Training completed.
Seed:  2
Epoch: 1, Loss: 1.9459, Train: 0.1714, Val: 0.1340, Test: 0.1450
Epoch: 2, Loss: 1.9452, Train: 0.2429, Val: 0.2040, Test: 0.1970
Epoch: 3, Loss: 1.9446, Train: 0.2429, Val: 0.2200, Test: 0.2070
Epoch: 4, Loss: 1.9448, Train: 0.2143, Val: 0.1700, Test: 0.1530
Epoch: 5, Loss: 1.9452, Train: 0.2214, Val: 0.1360, Test: 0.1220
Epoch: 6, Loss: 1.9425, Train: 0.2929, Val: 0.1720, Test: 0.1670
Epoch: 7, Loss: 1.9416, Train: 0.3786, Val: 0.2300, Test: 0.2290
Epoch: 8, Loss: 1.9411, Train: 0.4571, Val: 0.3040, Test: 0.3040
Epoch: 9, Loss: 1.9394, Train: 0.5500, Val: 0.3480, Test: 0.3520
Epoch: 10, Loss: 1.9375, Train: 0.5571, Val: 0.3700, Test: 0.3790
Epoch: 11, Loss: 1.9335, Train: 0.5571, Val: 0.3800, Test: 0.3850
Epoch: 12, Loss: 1.9325, Train: 0.4714, Val: 0.3440, Test: 0.3360
Epoch: 13, Loss: 1.9328, Train: 0.5429, Val: 0.3720, Test: 0.3620
Epoch: 14, Loss: 1.9252, Train: 0.5714, Val: 0.3660, Test: 0.3710
Epoch: 15, Loss: 1.9211, Train: 0.5786, Val: 0.3660, Test: 0.3750
Epoch: 16, Loss: 1.9172, Train: 0.5857, Val: 0.3680, Test: 0.3710
Epoch: 17, Loss: 1.9137, Train: 0.6071, Val: 0.3740, Test: 0.3800
Epoch: 18, Loss: 1.9108, Train: 0.5786, Val: 0.4000, Test: 0.3910
Epoch: 19, Loss: 1.8926, Train: 0.5429, Val: 0.3760, Test: 0.3640
Epoch: 20, Loss: 1.8900, Train: 0.5071, Val: 0.3640, Test: 0.3520
Epoch: 21, Loss: 1.8743, Train: 0.5357, Val: 0.3720, Test: 0.3670
Epoch: 22, Loss: 1.8775, Train: 0.5857, Val: 0.3900, Test: 0.3940
Epoch: 23, Loss: 1.8324, Train: 0.5857, Val: 0.3860, Test: 0.3830
Epoch: 24, Loss: 1.8421, Train: 0.5929, Val: 0.3920, Test: 0.3860
Epoch: 25, Loss: 1.8207, Train: 0.5857, Val: 0.4020, Test: 0.4000
Epoch: 26, Loss: 1.8121, Train: 0.6000, Val: 0.4120, Test: 0.4040
Epoch: 27, Loss: 1.7130, Train: 0.6214, Val: 0.4120, Test: 0.4040
Epoch: 28, Loss: 1.7355, Train: 0.6500, Val: 0.4200, Test: 0.4300
Epoch: 29, Loss: 1.6810, Train: 0.6643, Val: 0.4260, Test: 0.4440
Epoch: 30, Loss: 1.7008, Train: 0.6714, Val: 0.4320, Test: 0.4460
Epoch: 31, Loss: 1.6069, Train: 0.6857, Val: 0.4480, Test: 0.4440
Epoch: 32, Loss: 1.5553, Train: 0.6643, Val: 0.4440, Test: 0.4420
Epoch: 33, Loss: 1.5906, Train: 0.6714, Val: 0.4440, Test: 0.4490
Epoch: 34, Loss: 1.5368, Train: 0.6857, Val: 0.4460, Test: 0.4510
Epoch: 35, Loss: 1.5633, Train: 0.6929, Val: 0.4400, Test: 0.4540
Epoch: 36, Loss: 1.4197, Train: 0.6929, Val: 0.4500, Test: 0.4520
Epoch: 37, Loss: 1.4046, Train: 0.6857, Val: 0.4440, Test: 0.4520
Epoch: 38, Loss: 1.3241, Train: 0.6929, Val: 0.4460, Test: 0.4560
Epoch: 39, Loss: 1.3177, Train: 0.6929, Val: 0.4440, Test: 0.4600
Epoch: 40, Loss: 1.2247, Train: 0.6857, Val: 0.4440, Test: 0.4570
Epoch: 41, Loss: 1.2617, Train: 0.6857, Val: 0.4360, Test: 0.4550
Epoch: 42, Loss: 1.3086, Train: 0.6857, Val: 0.4380, Test: 0.4560
Epoch: 43, Loss: 1.0927, Train: 0.6929, Val: 0.4380, Test: 0.4580
Epoch: 44, Loss: 1.1972, Train: 0.6929, Val: 0.4380, Test: 0.4560
Epoch: 45, Loss: 1.2228, Train: 0.6857, Val: 0.4400, Test: 0.4540
Epoch: 46, Loss: 1.2401, Train: 0.6929, Val: 0.4280, Test: 0.4480
Epoch: 47, Loss: 1.1468, Train: 0.6857, Val: 0.4320, Test: 0.4470
Epoch: 48, Loss: 1.1921, Train: 0.6929, Val: 0.4320, Test: 0.4520
Epoch: 49, Loss: 1.1074, Train: 0.7000, Val: 0.4360, Test: 0.4550
Epoch: 50, Loss: 1.1306, Train: 0.6857, Val: 0.4260, Test: 0.4440
MAD:  0.5951
Best Test Accuracy: 0.4600, Val Accuracy: 0.4440, Train Accuracy: 0.6929
Training completed.
Seed:  3
Epoch: 1, Loss: 1.9465, Train: 0.1429, Val: 0.1120, Test: 0.0990
Epoch: 2, Loss: 1.9458, Train: 0.2000, Val: 0.1200, Test: 0.1130
Epoch: 3, Loss: 1.9443, Train: 0.3357, Val: 0.2200, Test: 0.1990
Epoch: 4, Loss: 1.9432, Train: 0.2643, Val: 0.2180, Test: 0.2000
Epoch: 5, Loss: 1.9437, Train: 0.1786, Val: 0.1160, Test: 0.1120
Epoch: 6, Loss: 1.9411, Train: 0.1786, Val: 0.1140, Test: 0.1070
Epoch: 7, Loss: 1.9394, Train: 0.1786, Val: 0.1140, Test: 0.1070
Epoch: 8, Loss: 1.9383, Train: 0.1929, Val: 0.1140, Test: 0.1100
Epoch: 9, Loss: 1.9348, Train: 0.2071, Val: 0.1160, Test: 0.1150
Epoch: 10, Loss: 1.9377, Train: 0.2143, Val: 0.1160, Test: 0.1160
Epoch: 11, Loss: 1.9296, Train: 0.2143, Val: 0.1180, Test: 0.1170
Epoch: 12, Loss: 1.9207, Train: 0.2214, Val: 0.1180, Test: 0.1180
Epoch: 13, Loss: 1.9171, Train: 0.2286, Val: 0.1220, Test: 0.1200
Epoch: 14, Loss: 1.9136, Train: 0.2286, Val: 0.1220, Test: 0.1220
Epoch: 15, Loss: 1.8963, Train: 0.2286, Val: 0.1240, Test: 0.1240
Epoch: 16, Loss: 1.8903, Train: 0.2286, Val: 0.1220, Test: 0.1250
Epoch: 17, Loss: 1.8809, Train: 0.2357, Val: 0.1240, Test: 0.1320
Epoch: 18, Loss: 1.8582, Train: 0.2429, Val: 0.1320, Test: 0.1290
Epoch: 19, Loss: 1.8778, Train: 0.2643, Val: 0.1360, Test: 0.1410
Epoch: 20, Loss: 1.8508, Train: 0.2786, Val: 0.1440, Test: 0.1510
Epoch: 21, Loss: 1.8048, Train: 0.2714, Val: 0.1460, Test: 0.1450
Epoch: 22, Loss: 1.7682, Train: 0.2714, Val: 0.1460, Test: 0.1400
Epoch: 23, Loss: 1.8048, Train: 0.2714, Val: 0.1540, Test: 0.1400
Epoch: 24, Loss: 1.7085, Train: 0.2714, Val: 0.1540, Test: 0.1380
Epoch: 25, Loss: 1.7694, Train: 0.2714, Val: 0.1520, Test: 0.1410
Epoch: 26, Loss: 1.7516, Train: 0.2714, Val: 0.1520, Test: 0.1440
Epoch: 27, Loss: 1.7289, Train: 0.2714, Val: 0.1500, Test: 0.1460
Epoch: 28, Loss: 1.6929, Train: 0.2929, Val: 0.1620, Test: 0.1520
Epoch: 29, Loss: 1.7092, Train: 0.3071, Val: 0.1680, Test: 0.1630
Epoch: 30, Loss: 1.6901, Train: 0.3857, Val: 0.1900, Test: 0.2040
Epoch: 31, Loss: 1.6443, Train: 0.4071, Val: 0.2580, Test: 0.2470
Epoch: 32, Loss: 1.6519, Train: 0.4143, Val: 0.2800, Test: 0.2600
Epoch: 33, Loss: 1.6697, Train: 0.4214, Val: 0.2980, Test: 0.2760
Epoch: 34, Loss: 1.6113, Train: 0.4214, Val: 0.3080, Test: 0.2810
Epoch: 35, Loss: 1.5986, Train: 0.4643, Val: 0.3200, Test: 0.3070
Epoch: 36, Loss: 1.6069, Train: 0.4857, Val: 0.3380, Test: 0.3310
Epoch: 37, Loss: 1.5107, Train: 0.4929, Val: 0.3480, Test: 0.3360
Epoch: 38, Loss: 1.5720, Train: 0.5000, Val: 0.3580, Test: 0.3440
Epoch: 39, Loss: 1.4910, Train: 0.5071, Val: 0.3600, Test: 0.3460
Epoch: 40, Loss: 1.4619, Train: 0.5143, Val: 0.3560, Test: 0.3490
Epoch: 41, Loss: 1.5345, Train: 0.5143, Val: 0.3580, Test: 0.3530
Epoch: 42, Loss: 1.4849, Train: 0.5143, Val: 0.3560, Test: 0.3520
Epoch: 43, Loss: 1.4379, Train: 0.5286, Val: 0.3600, Test: 0.3570
Epoch: 44, Loss: 1.4622, Train: 0.5357, Val: 0.3640, Test: 0.3650
Epoch: 45, Loss: 1.3838, Train: 0.5357, Val: 0.3640, Test: 0.3680
Epoch: 46, Loss: 1.3489, Train: 0.5357, Val: 0.3680, Test: 0.3690
Epoch: 47, Loss: 1.4070, Train: 0.5500, Val: 0.3700, Test: 0.3720
Epoch: 48, Loss: 1.4393, Train: 0.5500, Val: 0.3800, Test: 0.3750
Epoch: 49, Loss: 1.3122, Train: 0.5500, Val: 0.3860, Test: 0.3770
Epoch: 50, Loss: 1.4151, Train: 0.5571, Val: 0.3900, Test: 0.3810
MAD:  0.6925
Best Test Accuracy: 0.3810, Val Accuracy: 0.3900, Train Accuracy: 0.5571
Training completed.
Seed:  4
Epoch: 1, Loss: 1.9455, Train: 0.2714, Val: 0.1440, Test: 0.1550
Epoch: 2, Loss: 1.9445, Train: 0.2143, Val: 0.1020, Test: 0.1140
Epoch: 3, Loss: 1.9424, Train: 0.2500, Val: 0.1160, Test: 0.1260
Epoch: 4, Loss: 1.9412, Train: 0.2500, Val: 0.1140, Test: 0.1280
Epoch: 5, Loss: 1.9429, Train: 0.3143, Val: 0.1660, Test: 0.1790
Epoch: 6, Loss: 1.9392, Train: 0.4571, Val: 0.2840, Test: 0.2890
Epoch: 7, Loss: 1.9328, Train: 0.4714, Val: 0.3020, Test: 0.3030
Epoch: 8, Loss: 1.9344, Train: 0.4357, Val: 0.2720, Test: 0.2780
Epoch: 9, Loss: 1.9262, Train: 0.4143, Val: 0.2160, Test: 0.2420
Epoch: 10, Loss: 1.9294, Train: 0.3786, Val: 0.1960, Test: 0.2280
Epoch: 11, Loss: 1.9194, Train: 0.4357, Val: 0.2520, Test: 0.2730
Epoch: 12, Loss: 1.9141, Train: 0.4643, Val: 0.2900, Test: 0.2960
Epoch: 13, Loss: 1.9099, Train: 0.4786, Val: 0.2960, Test: 0.3030
Epoch: 14, Loss: 1.8958, Train: 0.4714, Val: 0.2920, Test: 0.3070
Epoch: 15, Loss: 1.9027, Train: 0.4929, Val: 0.3020, Test: 0.3100
Epoch: 16, Loss: 1.8984, Train: 0.5143, Val: 0.3180, Test: 0.3170
Epoch: 17, Loss: 1.8719, Train: 0.5214, Val: 0.3280, Test: 0.3180
Epoch: 18, Loss: 1.8597, Train: 0.5143, Val: 0.3280, Test: 0.3180
Epoch: 19, Loss: 1.8160, Train: 0.5143, Val: 0.3160, Test: 0.3140
Epoch: 20, Loss: 1.8134, Train: 0.4929, Val: 0.3040, Test: 0.3070
Epoch: 21, Loss: 1.7825, Train: 0.5000, Val: 0.3080, Test: 0.3040
Epoch: 22, Loss: 1.7754, Train: 0.4714, Val: 0.3140, Test: 0.3060
Epoch: 23, Loss: 1.7401, Train: 0.4643, Val: 0.3180, Test: 0.3080
Epoch: 24, Loss: 1.7012, Train: 0.4857, Val: 0.3180, Test: 0.3150
Epoch: 25, Loss: 1.7339, Train: 0.5000, Val: 0.3280, Test: 0.3250
Epoch: 26, Loss: 1.6003, Train: 0.5286, Val: 0.3520, Test: 0.3350
Epoch: 27, Loss: 1.6175, Train: 0.5357, Val: 0.3580, Test: 0.3500
Epoch: 28, Loss: 1.5644, Train: 0.5500, Val: 0.3800, Test: 0.3620
Epoch: 29, Loss: 1.4509, Train: 0.5500, Val: 0.4000, Test: 0.3900
Epoch: 30, Loss: 1.4045, Train: 0.5929, Val: 0.4380, Test: 0.4360
Epoch: 31, Loss: 1.4210, Train: 0.6214, Val: 0.5100, Test: 0.4860
Epoch: 32, Loss: 1.4506, Train: 0.6357, Val: 0.5240, Test: 0.5170
Epoch: 33, Loss: 1.3393, Train: 0.6571, Val: 0.5760, Test: 0.5660
Epoch: 34, Loss: 1.3999, Train: 0.6857, Val: 0.5880, Test: 0.5870
Epoch: 35, Loss: 1.3136, Train: 0.6929, Val: 0.5740, Test: 0.5830
Epoch: 36, Loss: 1.3363, Train: 0.6929, Val: 0.5840, Test: 0.5970
Epoch: 37, Loss: 1.2645, Train: 0.6857, Val: 0.6080, Test: 0.6140
Epoch: 38, Loss: 1.4014, Train: 0.6857, Val: 0.6080, Test: 0.6140
Epoch: 39, Loss: 1.1773, Train: 0.6929, Val: 0.5980, Test: 0.6100
Epoch: 40, Loss: 1.2351, Train: 0.7071, Val: 0.5800, Test: 0.5990
Epoch: 41, Loss: 1.1711, Train: 0.7143, Val: 0.5880, Test: 0.6030
Epoch: 42, Loss: 1.1678, Train: 0.7071, Val: 0.6000, Test: 0.6180
Epoch: 43, Loss: 1.2609, Train: 0.7071, Val: 0.6140, Test: 0.6230
Epoch: 44, Loss: 1.1681, Train: 0.7357, Val: 0.6560, Test: 0.6620
Epoch: 45, Loss: 1.0317, Train: 0.8071, Val: 0.6680, Test: 0.6830
Epoch: 46, Loss: 1.2483, Train: 0.8143, Val: 0.6700, Test: 0.6830
Epoch: 47, Loss: 1.1287, Train: 0.8071, Val: 0.6760, Test: 0.6810
Epoch: 48, Loss: 1.0188, Train: 0.8143, Val: 0.6700, Test: 0.6810
Epoch: 49, Loss: 1.0020, Train: 0.8143, Val: 0.6780, Test: 0.6850
Epoch: 50, Loss: 1.0069, Train: 0.8214, Val: 0.6940, Test: 0.6940
MAD:  0.6271
Best Test Accuracy: 0.6940, Val Accuracy: 0.6940, Train Accuracy: 0.8214
Training completed.
Seed:  5
Epoch: 1, Loss: 1.9453, Train: 0.2786, Val: 0.2100, Test: 0.2060
Epoch: 2, Loss: 1.9447, Train: 0.2357, Val: 0.1720, Test: 0.1840
Epoch: 3, Loss: 1.9432, Train: 0.2286, Val: 0.1660, Test: 0.1790
Epoch: 4, Loss: 1.9420, Train: 0.2500, Val: 0.1780, Test: 0.1900
Epoch: 5, Loss: 1.9416, Train: 0.2714, Val: 0.2040, Test: 0.2160
Epoch: 6, Loss: 1.9404, Train: 0.2857, Val: 0.2240, Test: 0.2330
Epoch: 7, Loss: 1.9351, Train: 0.2857, Val: 0.2240, Test: 0.2310
Epoch: 8, Loss: 1.9326, Train: 0.3214, Val: 0.2260, Test: 0.2330
Epoch: 9, Loss: 1.9349, Train: 0.3286, Val: 0.2340, Test: 0.2460
Epoch: 10, Loss: 1.9224, Train: 0.4143, Val: 0.2520, Test: 0.2810
Epoch: 11, Loss: 1.9163, Train: 0.4071, Val: 0.2340, Test: 0.2700
Epoch: 12, Loss: 1.9124, Train: 0.4000, Val: 0.2480, Test: 0.2830
Epoch: 13, Loss: 1.9127, Train: 0.4143, Val: 0.2480, Test: 0.2890
Epoch: 14, Loss: 1.8927, Train: 0.4286, Val: 0.2800, Test: 0.3080
Epoch: 15, Loss: 1.8940, Train: 0.4643, Val: 0.3160, Test: 0.3320
Epoch: 16, Loss: 1.8856, Train: 0.5357, Val: 0.3400, Test: 0.3460
Epoch: 17, Loss: 1.8652, Train: 0.5643, Val: 0.3680, Test: 0.3630
Epoch: 18, Loss: 1.8425, Train: 0.5643, Val: 0.3740, Test: 0.3630
Epoch: 19, Loss: 1.8152, Train: 0.5643, Val: 0.3720, Test: 0.3650
Epoch: 20, Loss: 1.7868, Train: 0.5643, Val: 0.3600, Test: 0.3610
Epoch: 21, Loss: 1.7694, Train: 0.5643, Val: 0.3440, Test: 0.3590
Epoch: 22, Loss: 1.7193, Train: 0.5500, Val: 0.3320, Test: 0.3620
Epoch: 23, Loss: 1.7123, Train: 0.5571, Val: 0.3420, Test: 0.3740
Epoch: 24, Loss: 1.6959, Train: 0.6143, Val: 0.3900, Test: 0.3930
Epoch: 25, Loss: 1.7100, Train: 0.6214, Val: 0.4200, Test: 0.4160
Epoch: 26, Loss: 1.6518, Train: 0.6214, Val: 0.4380, Test: 0.4290
Epoch: 27, Loss: 1.6792, Train: 0.6429, Val: 0.4500, Test: 0.4480
Epoch: 28, Loss: 1.5304, Train: 0.6500, Val: 0.4520, Test: 0.4440
Epoch: 29, Loss: 1.4572, Train: 0.6500, Val: 0.4640, Test: 0.4580
Epoch: 30, Loss: 1.5127, Train: 0.6786, Val: 0.4680, Test: 0.4700
Epoch: 31, Loss: 1.4293, Train: 0.6857, Val: 0.4860, Test: 0.4790
Epoch: 32, Loss: 1.3628, Train: 0.6929, Val: 0.4840, Test: 0.4820
Epoch: 33, Loss: 1.2777, Train: 0.6857, Val: 0.4840, Test: 0.4790
Epoch: 34, Loss: 1.2935, Train: 0.6857, Val: 0.4820, Test: 0.4790
Epoch: 35, Loss: 1.3578, Train: 0.6857, Val: 0.4840, Test: 0.4830
Epoch: 36, Loss: 1.3486, Train: 0.6857, Val: 0.4960, Test: 0.4870
Epoch: 37, Loss: 1.2921, Train: 0.7143, Val: 0.5000, Test: 0.4960
Epoch: 38, Loss: 1.2737, Train: 0.7071, Val: 0.5080, Test: 0.4990
Epoch: 39, Loss: 1.1757, Train: 0.7071, Val: 0.5080, Test: 0.4970
Epoch: 40, Loss: 1.1165, Train: 0.7071, Val: 0.5080, Test: 0.4980
Epoch: 41, Loss: 1.1603, Train: 0.7071, Val: 0.5040, Test: 0.4960
Epoch: 42, Loss: 1.1613, Train: 0.7071, Val: 0.5020, Test: 0.4950
Epoch: 43, Loss: 1.0910, Train: 0.7143, Val: 0.5060, Test: 0.4990
Epoch: 44, Loss: 1.2191, Train: 0.7357, Val: 0.5200, Test: 0.5100
Epoch: 45, Loss: 1.0982, Train: 0.7429, Val: 0.5220, Test: 0.5270
Epoch: 46, Loss: 1.1859, Train: 0.7143, Val: 0.5240, Test: 0.5140
Epoch: 47, Loss: 1.1509, Train: 0.7143, Val: 0.5180, Test: 0.5050
Epoch: 48, Loss: 1.0568, Train: 0.7500, Val: 0.5520, Test: 0.5280
Epoch: 49, Loss: 1.0867, Train: 0.7929, Val: 0.5480, Test: 0.5470
Epoch: 50, Loss: 1.0005, Train: 0.7929, Val: 0.5720, Test: 0.5580
MAD:  0.8253
Best Test Accuracy: 0.5580, Val Accuracy: 0.5720, Train Accuracy: 0.7929
Training completed.
Seed:  6
Epoch: 1, Loss: 1.9456, Train: 0.2357, Val: 0.1560, Test: 0.1760
Epoch: 2, Loss: 1.9453, Train: 0.2286, Val: 0.1620, Test: 0.1740
Epoch: 3, Loss: 1.9452, Train: 0.1643, Val: 0.1240, Test: 0.1400
Epoch: 4, Loss: 1.9432, Train: 0.1786, Val: 0.1240, Test: 0.1440
Epoch: 5, Loss: 1.9429, Train: 0.1857, Val: 0.1300, Test: 0.1430
Epoch: 6, Loss: 1.9412, Train: 0.2500, Val: 0.1420, Test: 0.1710
Epoch: 7, Loss: 1.9398, Train: 0.2571, Val: 0.1700, Test: 0.1820
Epoch: 8, Loss: 1.9393, Train: 0.2857, Val: 0.1780, Test: 0.2050
Epoch: 9, Loss: 1.9353, Train: 0.2714, Val: 0.1840, Test: 0.2140
Epoch: 10, Loss: 1.9329, Train: 0.3071, Val: 0.1860, Test: 0.2250
Epoch: 11, Loss: 1.9290, Train: 0.3286, Val: 0.1960, Test: 0.2350
Epoch: 12, Loss: 1.9265, Train: 0.3571, Val: 0.2360, Test: 0.2530
Epoch: 13, Loss: 1.9173, Train: 0.3857, Val: 0.2480, Test: 0.2620
Epoch: 14, Loss: 1.9147, Train: 0.3929, Val: 0.2720, Test: 0.2770
Epoch: 15, Loss: 1.9089, Train: 0.4071, Val: 0.3080, Test: 0.3130
Epoch: 16, Loss: 1.8961, Train: 0.4143, Val: 0.3100, Test: 0.3170
Epoch: 17, Loss: 1.8905, Train: 0.4357, Val: 0.3100, Test: 0.3160
Epoch: 18, Loss: 1.8778, Train: 0.4500, Val: 0.3120, Test: 0.3170
Epoch: 19, Loss: 1.8708, Train: 0.4786, Val: 0.3140, Test: 0.3280
Epoch: 20, Loss: 1.8433, Train: 0.4714, Val: 0.3220, Test: 0.3270
Epoch: 21, Loss: 1.8341, Train: 0.4571, Val: 0.3220, Test: 0.3330
Epoch: 22, Loss: 1.8176, Train: 0.5429, Val: 0.3900, Test: 0.4080
Epoch: 23, Loss: 1.8082, Train: 0.5643, Val: 0.4500, Test: 0.4730
Epoch: 24, Loss: 1.7321, Train: 0.5643, Val: 0.4360, Test: 0.4510
Epoch: 25, Loss: 1.7985, Train: 0.5500, Val: 0.4280, Test: 0.4460
Epoch: 26, Loss: 1.7206, Train: 0.5071, Val: 0.3960, Test: 0.4280
Epoch: 27, Loss: 1.6490, Train: 0.5643, Val: 0.4420, Test: 0.4630
Epoch: 28, Loss: 1.6762, Train: 0.5857, Val: 0.4740, Test: 0.4880
Epoch: 29, Loss: 1.6389, Train: 0.6286, Val: 0.4960, Test: 0.5190
Epoch: 30, Loss: 1.6018, Train: 0.6071, Val: 0.4860, Test: 0.5140
Epoch: 31, Loss: 1.4933, Train: 0.6286, Val: 0.4700, Test: 0.5120
Epoch: 32, Loss: 1.5709, Train: 0.6643, Val: 0.4920, Test: 0.5290
Epoch: 33, Loss: 1.4627, Train: 0.6929, Val: 0.5400, Test: 0.5630
Epoch: 34, Loss: 1.3538, Train: 0.7000, Val: 0.5620, Test: 0.5840
Epoch: 35, Loss: 1.4330, Train: 0.7143, Val: 0.5780, Test: 0.6000
Epoch: 36, Loss: 1.5504, Train: 0.7429, Val: 0.6040, Test: 0.6220
Epoch: 37, Loss: 1.5330, Train: 0.7500, Val: 0.6220, Test: 0.6420
Epoch: 38, Loss: 1.3563, Train: 0.7643, Val: 0.6260, Test: 0.6410
Epoch: 39, Loss: 1.3726, Train: 0.7643, Val: 0.6280, Test: 0.6410
Epoch: 40, Loss: 1.3364, Train: 0.7786, Val: 0.6240, Test: 0.6390
Epoch: 41, Loss: 1.2789, Train: 0.7786, Val: 0.6320, Test: 0.6490
Epoch: 42, Loss: 1.2925, Train: 0.7714, Val: 0.6160, Test: 0.6410
Epoch: 43, Loss: 1.2876, Train: 0.7786, Val: 0.6240, Test: 0.6420
Epoch: 44, Loss: 1.2705, Train: 0.7714, Val: 0.6220, Test: 0.6440
Epoch: 45, Loss: 1.1876, Train: 0.7714, Val: 0.6280, Test: 0.6410
Epoch: 46, Loss: 1.2299, Train: 0.7929, Val: 0.6340, Test: 0.6500
Epoch: 47, Loss: 1.2631, Train: 0.8000, Val: 0.6480, Test: 0.6690
Epoch: 48, Loss: 1.1055, Train: 0.7857, Val: 0.6300, Test: 0.6610
Epoch: 49, Loss: 1.2996, Train: 0.8071, Val: 0.6360, Test: 0.6630
Epoch: 50, Loss: 1.3075, Train: 0.8071, Val: 0.6480, Test: 0.6590
MAD:  0.6084
Best Test Accuracy: 0.6690, Val Accuracy: 0.6480, Train Accuracy: 0.8000
Training completed.
Seed:  7
Epoch: 1, Loss: 1.9464, Train: 0.1571, Val: 0.1340, Test: 0.1390
Epoch: 2, Loss: 1.9462, Train: 0.2786, Val: 0.1680, Test: 0.2020
Epoch: 3, Loss: 1.9448, Train: 0.2714, Val: 0.1920, Test: 0.2260
Epoch: 4, Loss: 1.9452, Train: 0.2857, Val: 0.1980, Test: 0.2340
Epoch: 5, Loss: 1.9441, Train: 0.2929, Val: 0.2140, Test: 0.2700
Epoch: 6, Loss: 1.9424, Train: 0.2929, Val: 0.2120, Test: 0.2470
Epoch: 7, Loss: 1.9421, Train: 0.3429, Val: 0.2320, Test: 0.2450
Epoch: 8, Loss: 1.9421, Train: 0.3929, Val: 0.2400, Test: 0.2610
Epoch: 9, Loss: 1.9371, Train: 0.3929, Val: 0.2520, Test: 0.2680
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 10, Loss: 1.9376, Train: 0.3786, Val: 0.2460, Test: 0.2640
Epoch: 11, Loss: 1.9324, Train: 0.3786, Val: 0.2520, Test: 0.2710
Epoch: 12, Loss: 1.9315, Train: 0.3929, Val: 0.2540, Test: 0.2740
Epoch: 13, Loss: 1.9270, Train: 0.3714, Val: 0.2480, Test: 0.2680
Epoch: 14, Loss: 1.9226, Train: 0.3071, Val: 0.2040, Test: 0.2200
Epoch: 15, Loss: 1.9191, Train: 0.2857, Val: 0.1840, Test: 0.1980
Epoch: 16, Loss: 1.9164, Train: 0.2857, Val: 0.1820, Test: 0.1950
Epoch: 17, Loss: 1.9057, Train: 0.2857, Val: 0.1820, Test: 0.1930
Epoch: 18, Loss: 1.8969, Train: 0.2857, Val: 0.1760, Test: 0.1900
Epoch: 19, Loss: 1.8965, Train: 0.2857, Val: 0.1740, Test: 0.1880
Epoch: 20, Loss: 1.8830, Train: 0.2857, Val: 0.1720, Test: 0.1890
Epoch: 21, Loss: 1.8610, Train: 0.2857, Val: 0.1720, Test: 0.1880
Epoch: 22, Loss: 1.8420, Train: 0.2857, Val: 0.1720, Test: 0.1880
Epoch: 23, Loss: 1.8670, Train: 0.2857, Val: 0.1780, Test: 0.1850
Epoch: 24, Loss: 1.8184, Train: 0.2857, Val: 0.1780, Test: 0.1830
Epoch: 25, Loss: 1.8027, Train: 0.2857, Val: 0.1780, Test: 0.1850
Epoch: 26, Loss: 1.7679, Train: 0.2857, Val: 0.1720, Test: 0.1850
Epoch: 27, Loss: 1.7483, Train: 0.2857, Val: 0.1720, Test: 0.1850
Epoch: 28, Loss: 1.6920, Train: 0.2857, Val: 0.1760, Test: 0.1860
Epoch: 29, Loss: 1.7155, Train: 0.2929, Val: 0.1760, Test: 0.1870
Epoch: 30, Loss: 1.6665, Train: 0.3000, Val: 0.1820, Test: 0.1970
Epoch: 31, Loss: 1.6878, Train: 0.3357, Val: 0.2320, Test: 0.2590
Epoch: 32, Loss: 1.7043, Train: 0.3571, Val: 0.2700, Test: 0.2790
Epoch: 33, Loss: 1.6256, Train: 0.4071, Val: 0.3420, Test: 0.3580
Epoch: 34, Loss: 1.6275, Train: 0.4214, Val: 0.4060, Test: 0.4350
Epoch: 35, Loss: 1.5871, Train: 0.4429, Val: 0.4220, Test: 0.4460
Epoch: 36, Loss: 1.6045, Train: 0.5143, Val: 0.4660, Test: 0.4880
Epoch: 37, Loss: 1.5136, Train: 0.5143, Val: 0.4720, Test: 0.4910
Epoch: 38, Loss: 1.6135, Train: 0.5143, Val: 0.4720, Test: 0.4940
Epoch: 39, Loss: 1.5798, Train: 0.5143, Val: 0.4800, Test: 0.5010
Epoch: 40, Loss: 1.5401, Train: 0.5071, Val: 0.4540, Test: 0.4860
Epoch: 41, Loss: 1.5378, Train: 0.5357, Val: 0.4440, Test: 0.4790
Epoch: 42, Loss: 1.5763, Train: 0.5571, Val: 0.4580, Test: 0.4920
Epoch: 43, Loss: 1.5610, Train: 0.5357, Val: 0.4620, Test: 0.5000
Epoch: 44, Loss: 1.4825, Train: 0.5429, Val: 0.4700, Test: 0.5130
Epoch: 45, Loss: 1.5115, Train: 0.5929, Val: 0.4800, Test: 0.5240
Epoch: 46, Loss: 1.3954, Train: 0.6357, Val: 0.4840, Test: 0.5270
Epoch: 47, Loss: 1.4940, Train: 0.6643, Val: 0.4940, Test: 0.5400
Epoch: 48, Loss: 1.4393, Train: 0.6857, Val: 0.5120, Test: 0.5500
Epoch: 49, Loss: 1.5226, Train: 0.6786, Val: 0.5120, Test: 0.5530
Epoch: 50, Loss: 1.4471, Train: 0.6500, Val: 0.4960, Test: 0.5470
MAD:  0.4684
Best Test Accuracy: 0.5530, Val Accuracy: 0.5120, Train Accuracy: 0.6786
Training completed.
Seed:  8
Epoch: 1, Loss: 1.9466, Train: 0.1143, Val: 0.2340, Test: 0.2580
Epoch: 2, Loss: 1.9452, Train: 0.2357, Val: 0.2440, Test: 0.2850
Epoch: 3, Loss: 1.9462, Train: 0.2500, Val: 0.3060, Test: 0.3470
Epoch: 4, Loss: 1.9464, Train: 0.2500, Val: 0.2760, Test: 0.3300
Epoch: 5, Loss: 1.9442, Train: 0.2643, Val: 0.3260, Test: 0.3680
Epoch: 6, Loss: 1.9434, Train: 0.2429, Val: 0.3400, Test: 0.3620
Epoch: 7, Loss: 1.9422, Train: 0.2286, Val: 0.3320, Test: 0.3560
Epoch: 8, Loss: 1.9426, Train: 0.2429, Val: 0.3480, Test: 0.3660
Epoch: 9, Loss: 1.9435, Train: 0.2929, Val: 0.3360, Test: 0.3750
Epoch: 10, Loss: 1.9403, Train: 0.3571, Val: 0.3460, Test: 0.3970
Epoch: 11, Loss: 1.9375, Train: 0.4571, Val: 0.4200, Test: 0.4770
Epoch: 12, Loss: 1.9351, Train: 0.4929, Val: 0.4960, Test: 0.5210
Epoch: 13, Loss: 1.9327, Train: 0.5000, Val: 0.5180, Test: 0.5210
Epoch: 14, Loss: 1.9301, Train: 0.4857, Val: 0.5160, Test: 0.5230
Epoch: 15, Loss: 1.9277, Train: 0.5000, Val: 0.5040, Test: 0.5280
Epoch: 16, Loss: 1.9274, Train: 0.4857, Val: 0.4780, Test: 0.5150
Epoch: 17, Loss: 1.9201, Train: 0.4714, Val: 0.4660, Test: 0.5030
Epoch: 18, Loss: 1.9124, Train: 0.4500, Val: 0.4580, Test: 0.4870
Epoch: 19, Loss: 1.9050, Train: 0.4429, Val: 0.4500, Test: 0.4810
Epoch: 20, Loss: 1.8988, Train: 0.4429, Val: 0.4440, Test: 0.4800
Epoch: 21, Loss: 1.8758, Train: 0.4500, Val: 0.4480, Test: 0.4850
Epoch: 22, Loss: 1.8880, Train: 0.4714, Val: 0.4720, Test: 0.5100
Epoch: 23, Loss: 1.8479, Train: 0.5143, Val: 0.4940, Test: 0.5300
Epoch: 24, Loss: 1.8561, Train: 0.5429, Val: 0.5260, Test: 0.5540
Epoch: 25, Loss: 1.8336, Train: 0.5357, Val: 0.5120, Test: 0.5570
Epoch: 26, Loss: 1.8042, Train: 0.5071, Val: 0.4920, Test: 0.5290
Epoch: 27, Loss: 1.7785, Train: 0.4857, Val: 0.4480, Test: 0.4810
Epoch: 28, Loss: 1.8052, Train: 0.4643, Val: 0.4480, Test: 0.4540
Epoch: 29, Loss: 1.7413, Train: 0.4500, Val: 0.4100, Test: 0.4200
Epoch: 30, Loss: 1.7114, Train: 0.4714, Val: 0.4100, Test: 0.4210
Epoch: 31, Loss: 1.6726, Train: 0.4857, Val: 0.4320, Test: 0.4420
Epoch: 32, Loss: 1.5930, Train: 0.5500, Val: 0.4560, Test: 0.4880
Epoch: 33, Loss: 1.8108, Train: 0.5571, Val: 0.4520, Test: 0.4830
Epoch: 34, Loss: 1.5436, Train: 0.5643, Val: 0.4460, Test: 0.4790
Epoch: 35, Loss: 1.6559, Train: 0.5929, Val: 0.4460, Test: 0.4820
Epoch: 36, Loss: 1.6103, Train: 0.6214, Val: 0.4620, Test: 0.4950
Epoch: 37, Loss: 1.5038, Train: 0.6000, Val: 0.4680, Test: 0.4970
Epoch: 38, Loss: 1.5065, Train: 0.6357, Val: 0.4840, Test: 0.5150
Epoch: 39, Loss: 1.5516, Train: 0.6429, Val: 0.4940, Test: 0.5290
Epoch: 40, Loss: 1.4531, Train: 0.6500, Val: 0.5020, Test: 0.5240
Epoch: 41, Loss: 1.4101, Train: 0.6571, Val: 0.5040, Test: 0.5470
Epoch: 42, Loss: 1.4568, Train: 0.6500, Val: 0.5040, Test: 0.5500
Epoch: 43, Loss: 1.2923, Train: 0.6500, Val: 0.5120, Test: 0.5520
Epoch: 44, Loss: 1.3658, Train: 0.6571, Val: 0.5220, Test: 0.5550
Epoch: 45, Loss: 1.3582, Train: 0.6714, Val: 0.5380, Test: 0.5790
Epoch: 46, Loss: 1.2935, Train: 0.6857, Val: 0.5300, Test: 0.5700
Epoch: 47, Loss: 1.2953, Train: 0.6786, Val: 0.5320, Test: 0.5700
Epoch: 48, Loss: 1.3005, Train: 0.6857, Val: 0.5300, Test: 0.5650
Epoch: 49, Loss: 1.3920, Train: 0.6929, Val: 0.5300, Test: 0.5700
Epoch: 50, Loss: 1.3208, Train: 0.6929, Val: 0.5300, Test: 0.5660
MAD:  0.499
Best Test Accuracy: 0.5790, Val Accuracy: 0.5380, Train Accuracy: 0.6714
Training completed.
Seed:  9
Epoch: 1, Loss: 1.9472, Train: 0.1857, Val: 0.1120, Test: 0.1200
Epoch: 2, Loss: 1.9449, Train: 0.1929, Val: 0.1220, Test: 0.1360
Epoch: 3, Loss: 1.9434, Train: 0.1643, Val: 0.1240, Test: 0.1400
Epoch: 4, Loss: 1.9426, Train: 0.2929, Val: 0.1700, Test: 0.1990
Epoch: 5, Loss: 1.9399, Train: 0.3071, Val: 0.1720, Test: 0.2080
Epoch: 6, Loss: 1.9396, Train: 0.3071, Val: 0.1820, Test: 0.2100
Epoch: 7, Loss: 1.9371, Train: 0.3214, Val: 0.1840, Test: 0.2070
Epoch: 8, Loss: 1.9325, Train: 0.3143, Val: 0.1600, Test: 0.1830
Epoch: 9, Loss: 1.9292, Train: 0.3286, Val: 0.1660, Test: 0.1820
Epoch: 10, Loss: 1.9255, Train: 0.3357, Val: 0.1620, Test: 0.2020
Epoch: 11, Loss: 1.9195, Train: 0.3643, Val: 0.1700, Test: 0.1950
Epoch: 12, Loss: 1.8981, Train: 0.3429, Val: 0.1580, Test: 0.1810
Epoch: 13, Loss: 1.8960, Train: 0.3214, Val: 0.1460, Test: 0.1690
Epoch: 14, Loss: 1.8746, Train: 0.3000, Val: 0.1300, Test: 0.1610
Epoch: 15, Loss: 1.8884, Train: 0.3000, Val: 0.1220, Test: 0.1560
Epoch: 16, Loss: 1.8675, Train: 0.3000, Val: 0.1200, Test: 0.1530
Epoch: 17, Loss: 1.8608, Train: 0.3000, Val: 0.1180, Test: 0.1520
Epoch: 18, Loss: 1.7790, Train: 0.3000, Val: 0.1180, Test: 0.1490
Epoch: 19, Loss: 1.7823, Train: 0.2929, Val: 0.1180, Test: 0.1450
Epoch: 20, Loss: 1.7609, Train: 0.2929, Val: 0.1180, Test: 0.1470
Epoch: 21, Loss: 1.7526, Train: 0.2929, Val: 0.1160, Test: 0.1510
Epoch: 22, Loss: 1.7275, Train: 0.3000, Val: 0.1220, Test: 0.1570
Epoch: 23, Loss: 1.8628, Train: 0.3500, Val: 0.1500, Test: 0.1810
Epoch: 24, Loss: 1.6908, Train: 0.3643, Val: 0.1900, Test: 0.2180
Epoch: 25, Loss: 1.7441, Train: 0.4143, Val: 0.2020, Test: 0.2330
Epoch: 26, Loss: 1.7028, Train: 0.4143, Val: 0.2020, Test: 0.2320
Epoch: 27, Loss: 1.6911, Train: 0.4214, Val: 0.2020, Test: 0.2370
Epoch: 28, Loss: 1.7565, Train: 0.4214, Val: 0.2000, Test: 0.2360
Epoch: 29, Loss: 1.6787, Train: 0.4143, Val: 0.2120, Test: 0.2460
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 30, Loss: 1.6564, Train: 0.4214, Val: 0.2100, Test: 0.2470
Epoch: 31, Loss: 1.6713, Train: 0.4214, Val: 0.2100, Test: 0.2470
Epoch: 32, Loss: 1.5745, Train: 0.4286, Val: 0.2100, Test: 0.2460
Epoch: 33, Loss: 1.6496, Train: 0.4286, Val: 0.2120, Test: 0.2470
Epoch: 34, Loss: 1.5453, Train: 0.4286, Val: 0.2100, Test: 0.2420
Epoch: 35, Loss: 1.5985, Train: 0.4286, Val: 0.2060, Test: 0.2400
Epoch: 36, Loss: 1.6606, Train: 0.4286, Val: 0.2120, Test: 0.2430
Epoch: 37, Loss: 1.6283, Train: 0.4214, Val: 0.2180, Test: 0.2510
Epoch: 38, Loss: 1.5690, Train: 0.4214, Val: 0.2180, Test: 0.2540
Epoch: 39, Loss: 1.5798, Train: 0.4357, Val: 0.2200, Test: 0.2570
Epoch: 40, Loss: 1.5279, Train: 0.4643, Val: 0.2300, Test: 0.2600
Epoch: 41, Loss: 1.5221, Train: 0.4643, Val: 0.2320, Test: 0.2620
Epoch: 42, Loss: 1.4011, Train: 0.4786, Val: 0.2460, Test: 0.2840
Epoch: 43, Loss: 1.5110, Train: 0.5071, Val: 0.2600, Test: 0.3120
Epoch: 44, Loss: 1.3912, Train: 0.5429, Val: 0.2760, Test: 0.3240
Epoch: 45, Loss: 1.5197, Train: 0.5643, Val: 0.2960, Test: 0.3340
Epoch: 46, Loss: 1.4178, Train: 0.5643, Val: 0.3020, Test: 0.3330
Epoch: 47, Loss: 1.3762, Train: 0.5643, Val: 0.3100, Test: 0.3410
Epoch: 48, Loss: 1.3714, Train: 0.5643, Val: 0.3200, Test: 0.3500
Epoch: 49, Loss: 1.3377, Train: 0.5643, Val: 0.3340, Test: 0.3520
Epoch: 50, Loss: 1.3537, Train: 0.5714, Val: 0.3340, Test: 0.3580
MAD:  0.763
Best Test Accuracy: 0.3580, Val Accuracy: 0.3340, Train Accuracy: 0.5714
Training completed.
Average Test Accuracy:  0.5241 ± 0.1169926920794628
Average MAD:  0.6294 ± 0.10699097158171807
