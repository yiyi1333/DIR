Seed:  0
Epoch: 1, Loss: 1.9433, Train: 0.2857, Val: 0.2300, Test: 0.2120
Epoch: 2, Loss: 1.9328, Train: 0.3286, Val: 0.2560, Test: 0.2540
Epoch: 3, Loss: 1.9256, Train: 0.3929, Val: 0.3200, Test: 0.2990
Epoch: 4, Loss: 1.9117, Train: 0.4786, Val: 0.3760, Test: 0.3470
Epoch: 5, Loss: 1.8971, Train: 0.5857, Val: 0.4220, Test: 0.3880
Epoch: 6, Loss: 1.8811, Train: 0.6714, Val: 0.4520, Test: 0.4360
Epoch: 7, Loss: 1.8600, Train: 0.7286, Val: 0.4980, Test: 0.4880
Epoch: 8, Loss: 1.8299, Train: 0.8071, Val: 0.5360, Test: 0.5300
Epoch: 9, Loss: 1.8157, Train: 0.8286, Val: 0.5640, Test: 0.5430
Epoch: 10, Loss: 1.8097, Train: 0.8500, Val: 0.5780, Test: 0.5720
Epoch: 11, Loss: 1.7915, Train: 0.8643, Val: 0.6000, Test: 0.5960
Epoch: 12, Loss: 1.7471, Train: 0.8714, Val: 0.6160, Test: 0.6140
Epoch: 13, Loss: 1.7075, Train: 0.8786, Val: 0.6380, Test: 0.6370
Epoch: 14, Loss: 1.7364, Train: 0.8786, Val: 0.6600, Test: 0.6550
Epoch: 15, Loss: 1.6605, Train: 0.8929, Val: 0.6700, Test: 0.6730
Epoch: 16, Loss: 1.6567, Train: 0.8929, Val: 0.6760, Test: 0.6880
Epoch: 17, Loss: 1.5892, Train: 0.8929, Val: 0.6900, Test: 0.7000
Epoch: 18, Loss: 1.5670, Train: 0.9214, Val: 0.7080, Test: 0.7080
Epoch: 19, Loss: 1.5502, Train: 0.9429, Val: 0.7160, Test: 0.7210
Epoch: 20, Loss: 1.5079, Train: 0.9500, Val: 0.7140, Test: 0.7250
Epoch: 21, Loss: 1.4550, Train: 0.9500, Val: 0.7260, Test: 0.7280
Epoch: 22, Loss: 1.3612, Train: 0.9643, Val: 0.7320, Test: 0.7330
Epoch: 23, Loss: 1.3772, Train: 0.9643, Val: 0.7380, Test: 0.7340
Epoch: 24, Loss: 1.3576, Train: 0.9643, Val: 0.7440, Test: 0.7430
Epoch: 25, Loss: 1.2974, Train: 0.9643, Val: 0.7500, Test: 0.7480
Epoch: 26, Loss: 1.2663, Train: 0.9714, Val: 0.7580, Test: 0.7520
Epoch: 27, Loss: 1.1445, Train: 0.9714, Val: 0.7580, Test: 0.7610
Epoch: 28, Loss: 1.2500, Train: 0.9714, Val: 0.7660, Test: 0.7690
Epoch: 29, Loss: 1.0676, Train: 0.9714, Val: 0.7640, Test: 0.7710
Epoch: 30, Loss: 1.1907, Train: 0.9714, Val: 0.7700, Test: 0.7760
Epoch: 31, Loss: 1.0481, Train: 0.9643, Val: 0.7720, Test: 0.7770
Epoch: 32, Loss: 1.1520, Train: 0.9714, Val: 0.7700, Test: 0.7750
Epoch: 33, Loss: 0.9592, Train: 0.9714, Val: 0.7700, Test: 0.7740
Epoch: 34, Loss: 0.9898, Train: 0.9714, Val: 0.7700, Test: 0.7730
Epoch: 35, Loss: 1.0318, Train: 0.9786, Val: 0.7720, Test: 0.7750
Epoch: 36, Loss: 0.8168, Train: 0.9786, Val: 0.7760, Test: 0.7750
Epoch: 37, Loss: 0.8291, Train: 0.9786, Val: 0.7740, Test: 0.7760
Epoch: 38, Loss: 0.9096, Train: 0.9786, Val: 0.7760, Test: 0.7790
Epoch: 39, Loss: 0.8923, Train: 0.9786, Val: 0.7780, Test: 0.7830
Epoch: 40, Loss: 0.8404, Train: 0.9786, Val: 0.7820, Test: 0.7840
Epoch: 41, Loss: 0.8169, Train: 0.9786, Val: 0.7840, Test: 0.7830
Epoch: 42, Loss: 0.8454, Train: 0.9857, Val: 0.7860, Test: 0.7800
Epoch: 43, Loss: 0.7129, Train: 0.9857, Val: 0.7820, Test: 0.7800
Epoch: 44, Loss: 0.6343, Train: 0.9857, Val: 0.7820, Test: 0.7810
Epoch: 45, Loss: 0.7049, Train: 0.9857, Val: 0.7800, Test: 0.7850
Epoch: 46, Loss: 0.8791, Train: 0.9857, Val: 0.7820, Test: 0.7860
Epoch: 47, Loss: 0.8548, Train: 0.9857, Val: 0.7820, Test: 0.7860
Epoch: 48, Loss: 0.7522, Train: 0.9857, Val: 0.7820, Test: 0.7860
Epoch: 49, Loss: 0.7338, Train: 0.9857, Val: 0.7800, Test: 0.7860
Epoch: 50, Loss: 0.6612, Train: 0.9857, Val: 0.7780, Test: 0.7880
MAD:  0.7185
Best Test Accuracy: 0.7880, Val Accuracy: 0.7780, Train Accuracy: 0.9857
Training completed.
Seed:  1
Epoch: 1, Loss: 1.9490, Train: 0.3571, Val: 0.2740, Test: 0.2440
Epoch: 2, Loss: 1.9386, Train: 0.4143, Val: 0.3320, Test: 0.3240
Epoch: 3, Loss: 1.9284, Train: 0.4643, Val: 0.3560, Test: 0.3600
Epoch: 4, Loss: 1.9230, Train: 0.4929, Val: 0.4040, Test: 0.4060
Epoch: 5, Loss: 1.9014, Train: 0.5357, Val: 0.4520, Test: 0.4420
Epoch: 6, Loss: 1.8977, Train: 0.5714, Val: 0.4820, Test: 0.4870
Epoch: 7, Loss: 1.8872, Train: 0.5786, Val: 0.5100, Test: 0.5290
Epoch: 8, Loss: 1.8746, Train: 0.6071, Val: 0.5380, Test: 0.5540
Epoch: 9, Loss: 1.8582, Train: 0.6286, Val: 0.5580, Test: 0.5870
Epoch: 10, Loss: 1.8343, Train: 0.6571, Val: 0.5880, Test: 0.6090
Epoch: 11, Loss: 1.8228, Train: 0.6643, Val: 0.6140, Test: 0.6240
Epoch: 12, Loss: 1.7914, Train: 0.6643, Val: 0.6260, Test: 0.6420
Epoch: 13, Loss: 1.7676, Train: 0.6714, Val: 0.6320, Test: 0.6500
Epoch: 14, Loss: 1.7420, Train: 0.6714, Val: 0.6360, Test: 0.6520
Epoch: 15, Loss: 1.7545, Train: 0.6643, Val: 0.6460, Test: 0.6570
Epoch: 16, Loss: 1.7463, Train: 0.6714, Val: 0.6440, Test: 0.6620
Epoch: 17, Loss: 1.7527, Train: 0.6714, Val: 0.6460, Test: 0.6590
Epoch: 18, Loss: 1.7300, Train: 0.6786, Val: 0.6500, Test: 0.6620
Epoch: 19, Loss: 1.6612, Train: 0.6857, Val: 0.6560, Test: 0.6570
Epoch: 20, Loss: 1.6256, Train: 0.6857, Val: 0.6580, Test: 0.6570
Epoch: 21, Loss: 1.5867, Train: 0.6857, Val: 0.6620, Test: 0.6580
Epoch: 22, Loss: 1.4962, Train: 0.6786, Val: 0.6620, Test: 0.6580
Epoch: 23, Loss: 1.5480, Train: 0.6786, Val: 0.6580, Test: 0.6550
Epoch: 24, Loss: 1.5009, Train: 0.6786, Val: 0.6580, Test: 0.6550
Epoch: 25, Loss: 1.4522, Train: 0.6786, Val: 0.6580, Test: 0.6560
Epoch: 26, Loss: 1.4166, Train: 0.6786, Val: 0.6620, Test: 0.6590
Epoch: 27, Loss: 1.3714, Train: 0.6786, Val: 0.6620, Test: 0.6610
Epoch: 28, Loss: 1.3402, Train: 0.6786, Val: 0.6640, Test: 0.6650
Epoch: 29, Loss: 1.4356, Train: 0.6857, Val: 0.6660, Test: 0.6680
Epoch: 30, Loss: 1.2856, Train: 0.6857, Val: 0.6680, Test: 0.6680
Epoch: 31, Loss: 1.2218, Train: 0.6857, Val: 0.6760, Test: 0.6730
Epoch: 32, Loss: 1.2615, Train: 0.6929, Val: 0.6860, Test: 0.6780
Epoch: 33, Loss: 1.2166, Train: 0.6929, Val: 0.6840, Test: 0.6830
Epoch: 34, Loss: 1.2514, Train: 0.6929, Val: 0.6820, Test: 0.6840
Epoch: 35, Loss: 1.2534, Train: 0.7071, Val: 0.6820, Test: 0.6790
Epoch: 36, Loss: 1.2794, Train: 0.7071, Val: 0.6860, Test: 0.6770
Epoch: 37, Loss: 1.1837, Train: 0.7071, Val: 0.6840, Test: 0.6820
Epoch: 38, Loss: 1.1795, Train: 0.7214, Val: 0.6840, Test: 0.6790
Epoch: 39, Loss: 1.1937, Train: 0.7214, Val: 0.6880, Test: 0.6820
Epoch: 40, Loss: 1.0910, Train: 0.7286, Val: 0.6880, Test: 0.6810
Epoch: 41, Loss: 1.1537, Train: 0.7357, Val: 0.6880, Test: 0.6850
Epoch: 42, Loss: 1.0240, Train: 0.7429, Val: 0.6940, Test: 0.6900
Epoch: 43, Loss: 1.0036, Train: 0.7714, Val: 0.6940, Test: 0.6960
Epoch: 44, Loss: 1.0972, Train: 0.7857, Val: 0.7000, Test: 0.7040
Epoch: 45, Loss: 1.0248, Train: 0.7857, Val: 0.7040, Test: 0.7070
Epoch: 46, Loss: 1.0642, Train: 0.8000, Val: 0.7020, Test: 0.7080
Epoch: 47, Loss: 1.0250, Train: 0.8071, Val: 0.7100, Test: 0.7080
Epoch: 48, Loss: 1.1229, Train: 0.8071, Val: 0.7100, Test: 0.7110
Epoch: 49, Loss: 0.9762, Train: 0.7929, Val: 0.7120, Test: 0.7110
Epoch: 50, Loss: 1.0150, Train: 0.8000, Val: 0.7100, Test: 0.7130
MAD:  0.7374
Best Test Accuracy: 0.7130, Val Accuracy: 0.7100, Train Accuracy: 0.8000
Training completed.
Seed:  2
Epoch: 1, Loss: 1.9510, Train: 0.1643, Val: 0.1340, Test: 0.1580
Epoch: 2, Loss: 1.9414, Train: 0.3071, Val: 0.2320, Test: 0.2470
Epoch: 3, Loss: 1.9302, Train: 0.4071, Val: 0.3340, Test: 0.3200
Epoch: 4, Loss: 1.9252, Train: 0.5000, Val: 0.3820, Test: 0.3700
Epoch: 5, Loss: 1.9071, Train: 0.5429, Val: 0.4120, Test: 0.4090
Epoch: 6, Loss: 1.8977, Train: 0.5929, Val: 0.4600, Test: 0.4540
Epoch: 7, Loss: 1.8863, Train: 0.6214, Val: 0.5040, Test: 0.4970
Epoch: 8, Loss: 1.8690, Train: 0.6286, Val: 0.5300, Test: 0.5300
Epoch: 9, Loss: 1.8561, Train: 0.6357, Val: 0.5620, Test: 0.5600
Epoch: 10, Loss: 1.8389, Train: 0.6500, Val: 0.5800, Test: 0.5680
Epoch: 11, Loss: 1.8296, Train: 0.6714, Val: 0.6000, Test: 0.5780
Epoch: 12, Loss: 1.8281, Train: 0.6786, Val: 0.6000, Test: 0.5850
Epoch: 13, Loss: 1.7847, Train: 0.6857, Val: 0.6060, Test: 0.5890
Epoch: 14, Loss: 1.7443, Train: 0.6857, Val: 0.6160, Test: 0.5940
Epoch: 15, Loss: 1.7501, Train: 0.6857, Val: 0.6200, Test: 0.5930
Epoch: 16, Loss: 1.7190, Train: 0.7000, Val: 0.6220, Test: 0.5950
Epoch: 17, Loss: 1.6905, Train: 0.7000, Val: 0.6240, Test: 0.5890
Epoch: 18, Loss: 1.6557, Train: 0.7000, Val: 0.6260, Test: 0.5870
Epoch: 19, Loss: 1.6530, Train: 0.7000, Val: 0.6280, Test: 0.5920
Epoch: 20, Loss: 1.5810, Train: 0.7000, Val: 0.6360, Test: 0.5940
Epoch: 21, Loss: 1.5886, Train: 0.7000, Val: 0.6440, Test: 0.5990
Epoch: 22, Loss: 1.5861, Train: 0.7000, Val: 0.6420, Test: 0.6100
Epoch: 23, Loss: 1.5109, Train: 0.7000, Val: 0.6460, Test: 0.6190
Epoch: 24, Loss: 1.5248, Train: 0.7000, Val: 0.6480, Test: 0.6220
Epoch: 25, Loss: 1.4193, Train: 0.7000, Val: 0.6520, Test: 0.6240
Epoch: 26, Loss: 1.4587, Train: 0.7000, Val: 0.6560, Test: 0.6250
Epoch: 27, Loss: 1.4602, Train: 0.7000, Val: 0.6560, Test: 0.6270
Epoch: 28, Loss: 1.4355, Train: 0.7143, Val: 0.6540, Test: 0.6280
Epoch: 29, Loss: 1.3963, Train: 0.7143, Val: 0.6540, Test: 0.6280
Epoch: 30, Loss: 1.3013, Train: 0.7143, Val: 0.6520, Test: 0.6270
Epoch: 31, Loss: 1.2831, Train: 0.7143, Val: 0.6560, Test: 0.6290
Epoch: 32, Loss: 1.2731, Train: 0.7214, Val: 0.6560, Test: 0.6290
Epoch: 33, Loss: 1.1574, Train: 0.7214, Val: 0.6580, Test: 0.6320
Epoch: 34, Loss: 1.3102, Train: 0.7214, Val: 0.6580, Test: 0.6340
Epoch: 35, Loss: 1.2454, Train: 0.7286, Val: 0.6660, Test: 0.6340
Epoch: 36, Loss: 1.2485, Train: 0.7286, Val: 0.6680, Test: 0.6350
Epoch: 37, Loss: 1.1346, Train: 0.7286, Val: 0.6700, Test: 0.6360
Epoch: 38, Loss: 1.0888, Train: 0.7286, Val: 0.6720, Test: 0.6380
Epoch: 39, Loss: 1.2072, Train: 0.7357, Val: 0.6720, Test: 0.6400
Epoch: 40, Loss: 1.0034, Train: 0.7429, Val: 0.6720, Test: 0.6430
Epoch: 41, Loss: 1.2057, Train: 0.7429, Val: 0.6780, Test: 0.6490
Epoch: 42, Loss: 1.0590, Train: 0.7500, Val: 0.6820, Test: 0.6490
Epoch: 43, Loss: 0.9987, Train: 0.7571, Val: 0.6900, Test: 0.6560
Epoch: 44, Loss: 1.1173, Train: 0.7643, Val: 0.6940, Test: 0.6630
Epoch: 45, Loss: 1.0693, Train: 0.7786, Val: 0.6920, Test: 0.6660
Epoch: 46, Loss: 1.0508, Train: 0.7786, Val: 0.6980, Test: 0.6710
Epoch: 47, Loss: 0.9758, Train: 0.7857, Val: 0.6980, Test: 0.6720
Epoch: 48, Loss: 1.1339, Train: 0.7929, Val: 0.6940, Test: 0.6740
Epoch: 49, Loss: 0.9664, Train: 0.8000, Val: 0.6920, Test: 0.6750
Epoch: 50, Loss: 1.0795, Train: 0.7929, Val: 0.6900, Test: 0.6750
MAD:  0.7787
Best Test Accuracy: 0.6750, Val Accuracy: 0.6920, Train Accuracy: 0.8000
Training completed.
Seed:  3
Epoch: 1, Loss: 1.9455, Train: 0.3071, Val: 0.3440, Test: 0.3610
Epoch: 2, Loss: 1.9365, Train: 0.4071, Val: 0.4280, Test: 0.4390
Epoch: 3, Loss: 1.9224, Train: 0.4500, Val: 0.4640, Test: 0.4710
Epoch: 4, Loss: 1.9123, Train: 0.5143, Val: 0.4740, Test: 0.4970
Epoch: 5, Loss: 1.8943, Train: 0.5429, Val: 0.4920, Test: 0.5060
Epoch: 6, Loss: 1.8847, Train: 0.6000, Val: 0.5040, Test: 0.5260
Epoch: 7, Loss: 1.8794, Train: 0.6214, Val: 0.5140, Test: 0.5450
Epoch: 8, Loss: 1.8529, Train: 0.6429, Val: 0.5340, Test: 0.5540
Epoch: 9, Loss: 1.8344, Train: 0.6500, Val: 0.5460, Test: 0.5670
Epoch: 10, Loss: 1.8330, Train: 0.6643, Val: 0.5620, Test: 0.5870
Epoch: 11, Loss: 1.8123, Train: 0.6929, Val: 0.5860, Test: 0.6070
Epoch: 12, Loss: 1.7469, Train: 0.7071, Val: 0.6080, Test: 0.6220
Epoch: 13, Loss: 1.7545, Train: 0.7357, Val: 0.6340, Test: 0.6370
Epoch: 14, Loss: 1.7212, Train: 0.7571, Val: 0.6580, Test: 0.6480
Epoch: 15, Loss: 1.7094, Train: 0.7786, Val: 0.6700, Test: 0.6720
Epoch: 16, Loss: 1.6742, Train: 0.7857, Val: 0.6800, Test: 0.6890
Epoch: 17, Loss: 1.6267, Train: 0.8000, Val: 0.6840, Test: 0.6950
Epoch: 18, Loss: 1.6052, Train: 0.8000, Val: 0.6860, Test: 0.7000
Epoch: 19, Loss: 1.5630, Train: 0.8000, Val: 0.6940, Test: 0.7000
Epoch: 20, Loss: 1.5867, Train: 0.8214, Val: 0.7020, Test: 0.7080
Epoch: 21, Loss: 1.4876, Train: 0.8214, Val: 0.7040, Test: 0.7070
Epoch: 22, Loss: 1.4960, Train: 0.8286, Val: 0.7040, Test: 0.7090
Epoch: 23, Loss: 1.4747, Train: 0.8429, Val: 0.7000, Test: 0.7100
Epoch: 24, Loss: 1.3753, Train: 0.8500, Val: 0.7020, Test: 0.7130
Epoch: 25, Loss: 1.4208, Train: 0.8571, Val: 0.7080, Test: 0.7160
Epoch: 26, Loss: 1.3000, Train: 0.8500, Val: 0.7120, Test: 0.7170
Epoch: 27, Loss: 1.3939, Train: 0.8500, Val: 0.7140, Test: 0.7190
Epoch: 28, Loss: 1.2672, Train: 0.8500, Val: 0.7160, Test: 0.7200
Epoch: 29, Loss: 1.3428, Train: 0.8500, Val: 0.7100, Test: 0.7180
Epoch: 30, Loss: 1.2554, Train: 0.8500, Val: 0.7080, Test: 0.7200
Epoch: 31, Loss: 1.2746, Train: 0.8500, Val: 0.7100, Test: 0.7200
Epoch: 32, Loss: 1.1461, Train: 0.8643, Val: 0.7140, Test: 0.7240
Epoch: 33, Loss: 1.2211, Train: 0.8857, Val: 0.7240, Test: 0.7330
Epoch: 34, Loss: 1.0909, Train: 0.9143, Val: 0.7360, Test: 0.7440
Epoch: 35, Loss: 1.1561, Train: 0.9143, Val: 0.7360, Test: 0.7530
Epoch: 36, Loss: 1.1345, Train: 0.9143, Val: 0.7380, Test: 0.7610
Epoch: 37, Loss: 0.9286, Train: 0.9143, Val: 0.7460, Test: 0.7720
Epoch: 38, Loss: 1.0028, Train: 0.9286, Val: 0.7520, Test: 0.7770
Epoch: 39, Loss: 0.9114, Train: 0.9429, Val: 0.7600, Test: 0.7840
Epoch: 40, Loss: 0.9544, Train: 0.9429, Val: 0.7640, Test: 0.7880
Epoch: 41, Loss: 0.9050, Train: 0.9500, Val: 0.7720, Test: 0.7900
Epoch: 42, Loss: 0.8696, Train: 0.9571, Val: 0.7700, Test: 0.7920
Epoch: 43, Loss: 0.8671, Train: 0.9643, Val: 0.7660, Test: 0.7970
Epoch: 44, Loss: 0.7036, Train: 0.9643, Val: 0.7660, Test: 0.7920
Epoch: 45, Loss: 0.8064, Train: 0.9643, Val: 0.7800, Test: 0.7920
Epoch: 46, Loss: 0.7947, Train: 0.9643, Val: 0.7780, Test: 0.7930
Epoch: 47, Loss: 0.7228, Train: 0.9714, Val: 0.7720, Test: 0.7980
Epoch: 48, Loss: 0.6801, Train: 0.9714, Val: 0.7700, Test: 0.7980
Epoch: 49, Loss: 0.8425, Train: 0.9714, Val: 0.7760, Test: 0.7960
Epoch: 50, Loss: 0.6765, Train: 0.9786, Val: 0.7720, Test: 0.7960
MAD:  0.642
Best Test Accuracy: 0.7980, Val Accuracy: 0.7720, Train Accuracy: 0.9714
Training completed.
Seed:  4
Epoch: 1, Loss: 1.9428, Train: 0.3143, Val: 0.1860, Test: 0.1800
Epoch: 2, Loss: 1.9352, Train: 0.4357, Val: 0.2600, Test: 0.2740
Epoch: 3, Loss: 1.9207, Train: 0.4643, Val: 0.2940, Test: 0.3150
Epoch: 4, Loss: 1.9150, Train: 0.5071, Val: 0.3300, Test: 0.3440
Epoch: 5, Loss: 1.8946, Train: 0.5571, Val: 0.3720, Test: 0.3760
Epoch: 6, Loss: 1.8874, Train: 0.5857, Val: 0.4100, Test: 0.4010
Epoch: 7, Loss: 1.8663, Train: 0.6286, Val: 0.4400, Test: 0.4220
Epoch: 8, Loss: 1.8448, Train: 0.6500, Val: 0.4580, Test: 0.4460
Epoch: 9, Loss: 1.8394, Train: 0.6786, Val: 0.4700, Test: 0.4700
Epoch: 10, Loss: 1.8281, Train: 0.6786, Val: 0.4940, Test: 0.4880
Epoch: 11, Loss: 1.7780, Train: 0.6929, Val: 0.4960, Test: 0.4910
Epoch: 12, Loss: 1.7903, Train: 0.7000, Val: 0.5020, Test: 0.4970
Epoch: 13, Loss: 1.7464, Train: 0.7214, Val: 0.5100, Test: 0.5070
Epoch: 14, Loss: 1.7297, Train: 0.7357, Val: 0.5360, Test: 0.5150
Epoch: 15, Loss: 1.6874, Train: 0.7357, Val: 0.5400, Test: 0.5170
Epoch: 16, Loss: 1.6726, Train: 0.7357, Val: 0.5540, Test: 0.5290
Epoch: 17, Loss: 1.6395, Train: 0.7429, Val: 0.5680, Test: 0.5390
Epoch: 18, Loss: 1.5784, Train: 0.7429, Val: 0.5780, Test: 0.5560
Epoch: 19, Loss: 1.5543, Train: 0.7500, Val: 0.6100, Test: 0.5700
Epoch: 20, Loss: 1.5078, Train: 0.7571, Val: 0.6180, Test: 0.5950
Epoch: 21, Loss: 1.5344, Train: 0.7643, Val: 0.6360, Test: 0.6050
Epoch: 22, Loss: 1.4834, Train: 0.7714, Val: 0.6540, Test: 0.6200
Epoch: 23, Loss: 1.4528, Train: 0.7714, Val: 0.6740, Test: 0.6340
Epoch: 24, Loss: 1.3882, Train: 0.7857, Val: 0.6800, Test: 0.6380
Epoch: 25, Loss: 1.3063, Train: 0.7857, Val: 0.6960, Test: 0.6610
Epoch: 26, Loss: 1.3326, Train: 0.8000, Val: 0.7120, Test: 0.6790
Epoch: 27, Loss: 1.3130, Train: 0.8071, Val: 0.7240, Test: 0.6900
Epoch: 28, Loss: 1.2669, Train: 0.8071, Val: 0.7320, Test: 0.6940
Epoch: 29, Loss: 1.2915, Train: 0.8214, Val: 0.7340, Test: 0.7080
Epoch: 30, Loss: 1.1797, Train: 0.8214, Val: 0.7380, Test: 0.7160
Epoch: 31, Loss: 1.1622, Train: 0.8214, Val: 0.7420, Test: 0.7210
Epoch: 32, Loss: 1.0715, Train: 0.8143, Val: 0.7400, Test: 0.7240
Epoch: 33, Loss: 1.1015, Train: 0.8071, Val: 0.7420, Test: 0.7260
Epoch: 34, Loss: 1.0808, Train: 0.8071, Val: 0.7420, Test: 0.7240
Epoch: 35, Loss: 1.0665, Train: 0.8071, Val: 0.7400, Test: 0.7250
Epoch: 36, Loss: 0.9781, Train: 0.8143, Val: 0.7400, Test: 0.7260
Epoch: 37, Loss: 1.0730, Train: 0.8143, Val: 0.7440, Test: 0.7280
Epoch: 38, Loss: 1.0753, Train: 0.8214, Val: 0.7400, Test: 0.7280
Epoch: 39, Loss: 1.0335, Train: 0.8286, Val: 0.7380, Test: 0.7350
Epoch: 40, Loss: 0.9404, Train: 0.8286, Val: 0.7340, Test: 0.7390
Epoch: 41, Loss: 1.0260, Train: 0.8357, Val: 0.7360, Test: 0.7380
Epoch: 42, Loss: 0.8463, Train: 0.8357, Val: 0.7360, Test: 0.7390
Epoch: 43, Loss: 0.8385, Train: 0.8643, Val: 0.7360, Test: 0.7380
Epoch: 44, Loss: 0.9064, Train: 0.8714, Val: 0.7340, Test: 0.7380
Epoch: 45, Loss: 0.9745, Train: 0.8786, Val: 0.7320, Test: 0.7370
Epoch: 46, Loss: 0.8156, Train: 0.8786, Val: 0.7320, Test: 0.7360
Epoch: 47, Loss: 0.8570, Train: 0.8857, Val: 0.7300, Test: 0.7340
Epoch: 48, Loss: 0.9736, Train: 0.8857, Val: 0.7380, Test: 0.7370
Epoch: 49, Loss: 0.9104, Train: 0.8929, Val: 0.7440, Test: 0.7400
Epoch: 50, Loss: 0.8716, Train: 0.9071, Val: 0.7440, Test: 0.7430
MAD:  0.7302
Best Test Accuracy: 0.7430, Val Accuracy: 0.7440, Train Accuracy: 0.9071
Training completed.
Seed:  5
Epoch: 1, Loss: 1.9523, Train: 0.2214, Val: 0.2020, Test: 0.1800
Epoch: 2, Loss: 1.9397, Train: 0.3571, Val: 0.3100, Test: 0.2870
Epoch: 3, Loss: 1.9175, Train: 0.4571, Val: 0.3880, Test: 0.3800
Epoch: 4, Loss: 1.9096, Train: 0.5000, Val: 0.4540, Test: 0.4490
Epoch: 5, Loss: 1.9014, Train: 0.5571, Val: 0.5100, Test: 0.4950
Epoch: 6, Loss: 1.8625, Train: 0.6071, Val: 0.5500, Test: 0.5190
Epoch: 7, Loss: 1.8717, Train: 0.6429, Val: 0.5800, Test: 0.5530
Epoch: 8, Loss: 1.8437, Train: 0.6714, Val: 0.5940, Test: 0.5760
Epoch: 9, Loss: 1.8176, Train: 0.6929, Val: 0.6200, Test: 0.5910
Epoch: 10, Loss: 1.7936, Train: 0.7286, Val: 0.6340, Test: 0.6010
Epoch: 11, Loss: 1.7577, Train: 0.7429, Val: 0.6520, Test: 0.6060
Epoch: 12, Loss: 1.7619, Train: 0.7643, Val: 0.6660, Test: 0.6190
Epoch: 13, Loss: 1.7322, Train: 0.7714, Val: 0.6720, Test: 0.6260
Epoch: 14, Loss: 1.7144, Train: 0.7643, Val: 0.6900, Test: 0.6250
Epoch: 15, Loss: 1.6705, Train: 0.7714, Val: 0.6900, Test: 0.6360
Epoch: 16, Loss: 1.6939, Train: 0.7714, Val: 0.6780, Test: 0.6370
Epoch: 17, Loss: 1.5934, Train: 0.7857, Val: 0.6780, Test: 0.6370
Epoch: 18, Loss: 1.6254, Train: 0.7857, Val: 0.6780, Test: 0.6410
Epoch: 19, Loss: 1.5385, Train: 0.7857, Val: 0.6780, Test: 0.6470
Epoch: 20, Loss: 1.5300, Train: 0.7929, Val: 0.6820, Test: 0.6520
Epoch: 21, Loss: 1.4645, Train: 0.7857, Val: 0.6840, Test: 0.6540
Epoch: 22, Loss: 1.5065, Train: 0.7929, Val: 0.6900, Test: 0.6550
Epoch: 23, Loss: 1.4078, Train: 0.7929, Val: 0.6920, Test: 0.6600
Epoch: 24, Loss: 1.4854, Train: 0.8000, Val: 0.6880, Test: 0.6580
Epoch: 25, Loss: 1.3275, Train: 0.8000, Val: 0.6900, Test: 0.6670
Epoch: 26, Loss: 1.3033, Train: 0.8071, Val: 0.6880, Test: 0.6670
Epoch: 27, Loss: 1.2985, Train: 0.8143, Val: 0.6900, Test: 0.6710
Epoch: 28, Loss: 1.2589, Train: 0.8143, Val: 0.6940, Test: 0.6730
Epoch: 29, Loss: 1.1591, Train: 0.8143, Val: 0.6980, Test: 0.6760
Epoch: 30, Loss: 1.0805, Train: 0.8214, Val: 0.6980, Test: 0.6840
Epoch: 31, Loss: 1.1851, Train: 0.8214, Val: 0.7040, Test: 0.6880
Epoch: 32, Loss: 1.0959, Train: 0.8286, Val: 0.7060, Test: 0.6940
Epoch: 33, Loss: 1.1304, Train: 0.8357, Val: 0.7040, Test: 0.6980
Epoch: 34, Loss: 1.0652, Train: 0.8357, Val: 0.7100, Test: 0.7040
Epoch: 35, Loss: 1.1091, Train: 0.8286, Val: 0.7180, Test: 0.7090
Epoch: 36, Loss: 1.0070, Train: 0.8429, Val: 0.7220, Test: 0.7070
Epoch: 37, Loss: 0.9475, Train: 0.8571, Val: 0.7240, Test: 0.7020
Epoch: 38, Loss: 1.0247, Train: 0.8714, Val: 0.7300, Test: 0.7090
Epoch: 39, Loss: 0.9448, Train: 0.9000, Val: 0.7340, Test: 0.7140
Epoch: 40, Loss: 0.9920, Train: 0.9071, Val: 0.7440, Test: 0.7180
Epoch: 41, Loss: 0.8600, Train: 0.9143, Val: 0.7420, Test: 0.7190
Epoch: 42, Loss: 1.0310, Train: 0.9286, Val: 0.7420, Test: 0.7280
Epoch: 43, Loss: 0.8285, Train: 0.9357, Val: 0.7440, Test: 0.7350
Epoch: 44, Loss: 0.8347, Train: 0.9357, Val: 0.7420, Test: 0.7390
Epoch: 45, Loss: 0.7603, Train: 0.9429, Val: 0.7460, Test: 0.7460
Epoch: 46, Loss: 0.8799, Train: 0.9429, Val: 0.7640, Test: 0.7560
Epoch: 47, Loss: 0.7851, Train: 0.9571, Val: 0.7720, Test: 0.7640
Epoch: 48, Loss: 0.7121, Train: 0.9500, Val: 0.7820, Test: 0.7750
Epoch: 49, Loss: 0.6826, Train: 0.9571, Val: 0.7720, Test: 0.7760
Epoch: 50, Loss: 0.6967, Train: 0.9643, Val: 0.7700, Test: 0.7760
MAD:  0.6962
Best Test Accuracy: 0.7760, Val Accuracy: 0.7720, Train Accuracy: 0.9571
Training completed.
Seed:  6
Epoch: 1, Loss: 1.9498, Train: 0.1929, Val: 0.1360, Test: 0.1170
Epoch: 2, Loss: 1.9370, Train: 0.2214, Val: 0.1680, Test: 0.1440
Epoch: 3, Loss: 1.9261, Train: 0.2786, Val: 0.1940, Test: 0.1770
Epoch: 4, Loss: 1.9067, Train: 0.3643, Val: 0.2260, Test: 0.2200
Epoch: 5, Loss: 1.8960, Train: 0.4071, Val: 0.2780, Test: 0.2560
Epoch: 6, Loss: 1.8908, Train: 0.5286, Val: 0.3260, Test: 0.3310
Epoch: 7, Loss: 1.8737, Train: 0.5643, Val: 0.3820, Test: 0.3830
Epoch: 8, Loss: 1.8576, Train: 0.6143, Val: 0.4240, Test: 0.4250
Epoch: 9, Loss: 1.8455, Train: 0.6500, Val: 0.4680, Test: 0.4640
Epoch: 10, Loss: 1.8106, Train: 0.6786, Val: 0.4940, Test: 0.4940
Epoch: 11, Loss: 1.7947, Train: 0.6857, Val: 0.5100, Test: 0.5230
Epoch: 12, Loss: 1.7929, Train: 0.6929, Val: 0.5420, Test: 0.5430
Epoch: 13, Loss: 1.7408, Train: 0.7071, Val: 0.5640, Test: 0.5600
Epoch: 14, Loss: 1.7112, Train: 0.7286, Val: 0.5860, Test: 0.5730
Epoch: 15, Loss: 1.6719, Train: 0.7286, Val: 0.5980, Test: 0.5790
Epoch: 16, Loss: 1.6766, Train: 0.7429, Val: 0.6020, Test: 0.5840
Epoch: 17, Loss: 1.6586, Train: 0.7500, Val: 0.6160, Test: 0.5990
Epoch: 18, Loss: 1.6170, Train: 0.7571, Val: 0.6420, Test: 0.6110
Epoch: 19, Loss: 1.5409, Train: 0.7571, Val: 0.6500, Test: 0.6180
Epoch: 20, Loss: 1.5154, Train: 0.7571, Val: 0.6540, Test: 0.6200
Epoch: 21, Loss: 1.5282, Train: 0.7571, Val: 0.6580, Test: 0.6240
Epoch: 22, Loss: 1.5505, Train: 0.7643, Val: 0.6700, Test: 0.6320
Epoch: 23, Loss: 1.3943, Train: 0.7714, Val: 0.6940, Test: 0.6470
Epoch: 24, Loss: 1.3856, Train: 0.7857, Val: 0.7020, Test: 0.6600
Epoch: 25, Loss: 1.3736, Train: 0.7929, Val: 0.7040, Test: 0.6620
Epoch: 26, Loss: 1.3755, Train: 0.7929, Val: 0.7160, Test: 0.6680
Epoch: 27, Loss: 1.3092, Train: 0.7929, Val: 0.7220, Test: 0.6720
Epoch: 28, Loss: 1.2717, Train: 0.7929, Val: 0.7240, Test: 0.6830
Epoch: 29, Loss: 1.2938, Train: 0.7929, Val: 0.7300, Test: 0.6960
Epoch: 30, Loss: 1.2244, Train: 0.8071, Val: 0.7320, Test: 0.7010
Epoch: 31, Loss: 1.2110, Train: 0.8143, Val: 0.7320, Test: 0.7060
Epoch: 32, Loss: 1.1751, Train: 0.8143, Val: 0.7320, Test: 0.7090
Epoch: 33, Loss: 1.0948, Train: 0.8143, Val: 0.7340, Test: 0.7120
Epoch: 34, Loss: 1.0455, Train: 0.8143, Val: 0.7360, Test: 0.7140
Epoch: 35, Loss: 1.0758, Train: 0.8214, Val: 0.7360, Test: 0.7170
Epoch: 36, Loss: 1.0884, Train: 0.8214, Val: 0.7380, Test: 0.7190
Epoch: 37, Loss: 0.9940, Train: 0.8286, Val: 0.7360, Test: 0.7210
Epoch: 38, Loss: 1.1287, Train: 0.8429, Val: 0.7400, Test: 0.7260
Epoch: 39, Loss: 1.0862, Train: 0.8571, Val: 0.7440, Test: 0.7300
Epoch: 40, Loss: 0.8808, Train: 0.8786, Val: 0.7440, Test: 0.7390
Epoch: 41, Loss: 1.0011, Train: 0.8857, Val: 0.7480, Test: 0.7400
Epoch: 42, Loss: 0.8904, Train: 0.9214, Val: 0.7600, Test: 0.7470
Epoch: 43, Loss: 0.9066, Train: 0.9500, Val: 0.7740, Test: 0.7630
Epoch: 44, Loss: 0.8296, Train: 0.9643, Val: 0.7760, Test: 0.7750
Epoch: 45, Loss: 0.7653, Train: 0.9714, Val: 0.7800, Test: 0.7790
Epoch: 46, Loss: 0.8921, Train: 0.9786, Val: 0.7800, Test: 0.7880
Epoch: 47, Loss: 0.7885, Train: 0.9857, Val: 0.7780, Test: 0.7870
Epoch: 48, Loss: 0.6981, Train: 0.9857, Val: 0.7760, Test: 0.7910
Epoch: 49, Loss: 0.8192, Train: 0.9857, Val: 0.7760, Test: 0.7890
Epoch: 50, Loss: 0.6726, Train: 0.9786, Val: 0.7760, Test: 0.7850
MAD:  0.6853
Best Test Accuracy: 0.7910, Val Accuracy: 0.7760, Train Accuracy: 0.9857
Training completed.
Seed:  7
Epoch: 1, Loss: 1.9520, Train: 0.2143, Val: 0.1240, Test: 0.1580
Epoch: 2, Loss: 1.9398, Train: 0.3571, Val: 0.1940, Test: 0.2090
Epoch: 3, Loss: 1.9260, Train: 0.4143, Val: 0.2360, Test: 0.2470
Epoch: 4, Loss: 1.9151, Train: 0.4571, Val: 0.2700, Test: 0.2680
Epoch: 5, Loss: 1.9128, Train: 0.4571, Val: 0.2860, Test: 0.2850
Epoch: 6, Loss: 1.8757, Train: 0.4643, Val: 0.3080, Test: 0.3110
Epoch: 7, Loss: 1.8902, Train: 0.4786, Val: 0.3320, Test: 0.3380
Epoch: 8, Loss: 1.8549, Train: 0.5000, Val: 0.3660, Test: 0.3620
Epoch: 9, Loss: 1.8461, Train: 0.5357, Val: 0.4040, Test: 0.3910
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 10, Loss: 1.8317, Train: 0.6071, Val: 0.4300, Test: 0.4120
Epoch: 11, Loss: 1.7997, Train: 0.6214, Val: 0.4500, Test: 0.4290
Epoch: 12, Loss: 1.8029, Train: 0.6500, Val: 0.4640, Test: 0.4500
Epoch: 13, Loss: 1.7880, Train: 0.6500, Val: 0.4780, Test: 0.4580
Epoch: 14, Loss: 1.7530, Train: 0.6571, Val: 0.4800, Test: 0.4660
Epoch: 15, Loss: 1.6756, Train: 0.6571, Val: 0.4920, Test: 0.4680
Epoch: 16, Loss: 1.7207, Train: 0.6643, Val: 0.4940, Test: 0.4720
Epoch: 17, Loss: 1.6792, Train: 0.6714, Val: 0.5000, Test: 0.4770
Epoch: 18, Loss: 1.6471, Train: 0.6786, Val: 0.5040, Test: 0.4770
Epoch: 19, Loss: 1.6418, Train: 0.6786, Val: 0.5020, Test: 0.4790
Epoch: 20, Loss: 1.6229, Train: 0.6786, Val: 0.5020, Test: 0.4840
Epoch: 21, Loss: 1.6380, Train: 0.6786, Val: 0.5060, Test: 0.4850
Epoch: 22, Loss: 1.5262, Train: 0.6786, Val: 0.5060, Test: 0.4850
Epoch: 23, Loss: 1.4744, Train: 0.6857, Val: 0.5080, Test: 0.4880
Epoch: 24, Loss: 1.4509, Train: 0.6857, Val: 0.5080, Test: 0.4930
Epoch: 25, Loss: 1.4267, Train: 0.6857, Val: 0.5100, Test: 0.4940
Epoch: 26, Loss: 1.4584, Train: 0.6857, Val: 0.5160, Test: 0.4960
Epoch: 27, Loss: 1.3686, Train: 0.6857, Val: 0.5160, Test: 0.4950
Epoch: 28, Loss: 1.3723, Train: 0.6857, Val: 0.5160, Test: 0.4980
Epoch: 29, Loss: 1.4043, Train: 0.6857, Val: 0.5180, Test: 0.4990
Epoch: 30, Loss: 1.2469, Train: 0.6929, Val: 0.5140, Test: 0.4990
Epoch: 31, Loss: 1.2663, Train: 0.6929, Val: 0.5180, Test: 0.5010
Epoch: 32, Loss: 1.2206, Train: 0.6929, Val: 0.5200, Test: 0.5000
Epoch: 33, Loss: 1.1853, Train: 0.7000, Val: 0.5280, Test: 0.5010
Epoch: 34, Loss: 1.3090, Train: 0.7000, Val: 0.5220, Test: 0.4990
Epoch: 35, Loss: 1.1645, Train: 0.7000, Val: 0.5240, Test: 0.5020
Epoch: 36, Loss: 1.3076, Train: 0.7071, Val: 0.5240, Test: 0.5030
Epoch: 37, Loss: 1.1281, Train: 0.7071, Val: 0.5240, Test: 0.5050
Epoch: 38, Loss: 1.2153, Train: 0.7071, Val: 0.5260, Test: 0.5050
Epoch: 39, Loss: 1.0991, Train: 0.7071, Val: 0.5260, Test: 0.5050
Epoch: 40, Loss: 1.0558, Train: 0.7071, Val: 0.5260, Test: 0.5060
Epoch: 41, Loss: 1.1988, Train: 0.7071, Val: 0.5260, Test: 0.5040
Epoch: 42, Loss: 1.0467, Train: 0.7071, Val: 0.5300, Test: 0.5030
Epoch: 43, Loss: 1.0761, Train: 0.7071, Val: 0.5320, Test: 0.5060
Epoch: 44, Loss: 1.1347, Train: 0.7071, Val: 0.5320, Test: 0.5060
Epoch: 45, Loss: 1.0225, Train: 0.7071, Val: 0.5280, Test: 0.5060
Epoch: 46, Loss: 1.0303, Train: 0.7071, Val: 0.5300, Test: 0.5050
Epoch: 47, Loss: 1.0605, Train: 0.7071, Val: 0.5300, Test: 0.5060
Epoch: 48, Loss: 0.9235, Train: 0.7071, Val: 0.5300, Test: 0.5080
Epoch: 49, Loss: 0.9715, Train: 0.7214, Val: 0.5300, Test: 0.5090
Epoch: 50, Loss: 0.9491, Train: 0.7286, Val: 0.5320, Test: 0.5130
MAD:  0.7964
Best Test Accuracy: 0.5130, Val Accuracy: 0.5320, Train Accuracy: 0.7286
Training completed.
Seed:  8
Epoch: 1, Loss: 1.9408, Train: 0.2786, Val: 0.2160, Test: 0.1950
Epoch: 2, Loss: 1.9289, Train: 0.4143, Val: 0.3040, Test: 0.3070
Epoch: 3, Loss: 1.9141, Train: 0.4929, Val: 0.3620, Test: 0.3860
Epoch: 4, Loss: 1.8980, Train: 0.5357, Val: 0.4100, Test: 0.4470
Epoch: 5, Loss: 1.8940, Train: 0.5357, Val: 0.4360, Test: 0.4780
Epoch: 6, Loss: 1.8787, Train: 0.5429, Val: 0.4560, Test: 0.4930
Epoch: 7, Loss: 1.8642, Train: 0.5571, Val: 0.4640, Test: 0.5040
Epoch: 8, Loss: 1.8635, Train: 0.5643, Val: 0.4740, Test: 0.5130
Epoch: 9, Loss: 1.8330, Train: 0.5714, Val: 0.4860, Test: 0.5210
Epoch: 10, Loss: 1.8312, Train: 0.5857, Val: 0.4960, Test: 0.5330
Epoch: 11, Loss: 1.7944, Train: 0.6000, Val: 0.5080, Test: 0.5360
Epoch: 12, Loss: 1.7731, Train: 0.6143, Val: 0.5220, Test: 0.5380
Epoch: 13, Loss: 1.7495, Train: 0.6214, Val: 0.5200, Test: 0.5460
Epoch: 14, Loss: 1.7451, Train: 0.6286, Val: 0.5340, Test: 0.5480
Epoch: 15, Loss: 1.7438, Train: 0.6500, Val: 0.5420, Test: 0.5570
Epoch: 16, Loss: 1.6957, Train: 0.6571, Val: 0.5560, Test: 0.5730
Epoch: 17, Loss: 1.6474, Train: 0.7000, Val: 0.5820, Test: 0.5920
Epoch: 18, Loss: 1.6383, Train: 0.7571, Val: 0.5960, Test: 0.6340
Epoch: 19, Loss: 1.5695, Train: 0.8000, Val: 0.6280, Test: 0.6710
Epoch: 20, Loss: 1.5515, Train: 0.8214, Val: 0.6660, Test: 0.6970
Epoch: 21, Loss: 1.4705, Train: 0.8571, Val: 0.6880, Test: 0.7170
Epoch: 22, Loss: 1.4941, Train: 0.8857, Val: 0.7180, Test: 0.7240
Epoch: 23, Loss: 1.4461, Train: 0.8929, Val: 0.7340, Test: 0.7420
Epoch: 24, Loss: 1.4472, Train: 0.9071, Val: 0.7320, Test: 0.7480
Epoch: 25, Loss: 1.3866, Train: 0.9143, Val: 0.7300, Test: 0.7550
Epoch: 26, Loss: 1.3680, Train: 0.9214, Val: 0.7280, Test: 0.7610
Epoch: 27, Loss: 1.3896, Train: 0.9214, Val: 0.7340, Test: 0.7650
Epoch: 28, Loss: 1.2319, Train: 0.9286, Val: 0.7340, Test: 0.7650
Epoch: 29, Loss: 1.2317, Train: 0.9429, Val: 0.7180, Test: 0.7650
Epoch: 30, Loss: 1.1540, Train: 0.9500, Val: 0.7180, Test: 0.7660
Epoch: 31, Loss: 1.2052, Train: 0.9571, Val: 0.7260, Test: 0.7660
Epoch: 32, Loss: 1.0961, Train: 0.9857, Val: 0.7380, Test: 0.7690
Epoch: 33, Loss: 1.0857, Train: 0.9857, Val: 0.7360, Test: 0.7660
Epoch: 34, Loss: 1.0578, Train: 0.9929, Val: 0.7340, Test: 0.7700
Epoch: 35, Loss: 1.0315, Train: 0.9929, Val: 0.7340, Test: 0.7710
Epoch: 36, Loss: 1.0002, Train: 0.9929, Val: 0.7360, Test: 0.7710
Epoch: 37, Loss: 0.9566, Train: 0.9929, Val: 0.7380, Test: 0.7710
Epoch: 38, Loss: 1.0623, Train: 0.9929, Val: 0.7420, Test: 0.7730
Epoch: 39, Loss: 0.9130, Train: 0.9929, Val: 0.7440, Test: 0.7760
Epoch: 40, Loss: 0.7923, Train: 0.9929, Val: 0.7440, Test: 0.7770
Epoch: 41, Loss: 0.8867, Train: 0.9929, Val: 0.7440, Test: 0.7760
Epoch: 42, Loss: 0.8755, Train: 0.9929, Val: 0.7480, Test: 0.7740
Epoch: 43, Loss: 0.9165, Train: 0.9929, Val: 0.7500, Test: 0.7720
Epoch: 44, Loss: 0.8392, Train: 0.9929, Val: 0.7560, Test: 0.7690
Epoch: 45, Loss: 0.7142, Train: 0.9929, Val: 0.7560, Test: 0.7670
Epoch: 46, Loss: 0.9091, Train: 0.9929, Val: 0.7620, Test: 0.7650
Epoch: 47, Loss: 0.7991, Train: 0.9929, Val: 0.7580, Test: 0.7650
Epoch: 48, Loss: 0.8107, Train: 0.9929, Val: 0.7620, Test: 0.7650
Epoch: 49, Loss: 0.7475, Train: 0.9929, Val: 0.7580, Test: 0.7660
Epoch: 50, Loss: 0.7279, Train: 0.9929, Val: 0.7640, Test: 0.7650
MAD:  0.5842
Best Test Accuracy: 0.7770, Val Accuracy: 0.7440, Train Accuracy: 0.9929
Training completed.
Seed:  9
Epoch: 1, Loss: 1.9462, Train: 0.2429, Val: 0.2820, Test: 0.2380
Epoch: 2, Loss: 1.9409, Train: 0.3143, Val: 0.3020, Test: 0.2760
Epoch: 3, Loss: 1.9255, Train: 0.3571, Val: 0.3220, Test: 0.3010
Epoch: 4, Loss: 1.9250, Train: 0.3786, Val: 0.3360, Test: 0.3110
Epoch: 5, Loss: 1.9161, Train: 0.4071, Val: 0.3680, Test: 0.3400
Epoch: 6, Loss: 1.9000, Train: 0.4571, Val: 0.4040, Test: 0.3760
Epoch: 7, Loss: 1.8943, Train: 0.5429, Val: 0.4360, Test: 0.4250
Epoch: 8, Loss: 1.8789, Train: 0.6071, Val: 0.4640, Test: 0.4620
Epoch: 9, Loss: 1.8620, Train: 0.6429, Val: 0.4840, Test: 0.4900
Epoch: 10, Loss: 1.8455, Train: 0.6571, Val: 0.5020, Test: 0.5180
Epoch: 11, Loss: 1.8174, Train: 0.7143, Val: 0.5320, Test: 0.5390
Epoch: 12, Loss: 1.8175, Train: 0.7143, Val: 0.5340, Test: 0.5580
Epoch: 13, Loss: 1.7807, Train: 0.7214, Val: 0.5480, Test: 0.5550
Epoch: 14, Loss: 1.7727, Train: 0.7357, Val: 0.5520, Test: 0.5580
Epoch: 15, Loss: 1.7335, Train: 0.7500, Val: 0.5640, Test: 0.5620
Epoch: 16, Loss: 1.6758, Train: 0.7571, Val: 0.5700, Test: 0.5640
Epoch: 17, Loss: 1.6872, Train: 0.7714, Val: 0.5760, Test: 0.5770
Epoch: 18, Loss: 1.6768, Train: 0.7714, Val: 0.5900, Test: 0.5870
Epoch: 19, Loss: 1.6185, Train: 0.7714, Val: 0.6000, Test: 0.6010
Epoch: 20, Loss: 1.6250, Train: 0.7786, Val: 0.6100, Test: 0.6100
Epoch: 21, Loss: 1.5705, Train: 0.7857, Val: 0.6220, Test: 0.6220
Epoch: 22, Loss: 1.5227, Train: 0.7929, Val: 0.6400, Test: 0.6320
Epoch: 23, Loss: 1.5204, Train: 0.8000, Val: 0.6540, Test: 0.6450
Epoch: 24, Loss: 1.3893, Train: 0.8143, Val: 0.6640, Test: 0.6570
Epoch: 25, Loss: 1.4742, Train: 0.8429, Val: 0.6740, Test: 0.6640
Epoch: 26, Loss: 1.3182, Train: 0.8429, Val: 0.6720, Test: 0.6740
Epoch: 27, Loss: 1.3757, Train: 0.8357, Val: 0.6800, Test: 0.6830
Epoch: 28, Loss: 1.2643, Train: 0.8429, Val: 0.6960, Test: 0.6890
Epoch: 29, Loss: 1.2841, Train: 0.8571, Val: 0.7000, Test: 0.6960
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 30, Loss: 1.3003, Train: 0.8571, Val: 0.7000, Test: 0.7020
Epoch: 31, Loss: 1.2935, Train: 0.8786, Val: 0.7220, Test: 0.7170
Epoch: 32, Loss: 1.1872, Train: 0.8929, Val: 0.7360, Test: 0.7230
Epoch: 33, Loss: 1.1097, Train: 0.9000, Val: 0.7420, Test: 0.7420
Epoch: 34, Loss: 1.1934, Train: 0.9143, Val: 0.7560, Test: 0.7480
Epoch: 35, Loss: 1.1350, Train: 0.9286, Val: 0.7600, Test: 0.7590
Epoch: 36, Loss: 1.0796, Train: 0.9500, Val: 0.7720, Test: 0.7730
Epoch: 37, Loss: 1.0706, Train: 0.9571, Val: 0.7820, Test: 0.7740
Epoch: 38, Loss: 1.0472, Train: 0.9571, Val: 0.7800, Test: 0.7830
Epoch: 39, Loss: 0.8864, Train: 0.9643, Val: 0.7920, Test: 0.7850
Epoch: 40, Loss: 0.9434, Train: 0.9714, Val: 0.7960, Test: 0.7810
Epoch: 41, Loss: 0.8481, Train: 0.9714, Val: 0.8020, Test: 0.7820
Epoch: 42, Loss: 0.9908, Train: 0.9786, Val: 0.8000, Test: 0.7790
Epoch: 43, Loss: 0.8942, Train: 0.9857, Val: 0.7980, Test: 0.7830
Epoch: 44, Loss: 0.7642, Train: 0.9857, Val: 0.7940, Test: 0.7890
Epoch: 45, Loss: 0.7971, Train: 0.9857, Val: 0.7920, Test: 0.7880
Epoch: 46, Loss: 0.8242, Train: 0.9857, Val: 0.7880, Test: 0.7880
Epoch: 47, Loss: 0.7609, Train: 0.9857, Val: 0.7860, Test: 0.7910
Epoch: 48, Loss: 0.5379, Train: 0.9857, Val: 0.7840, Test: 0.7930
Epoch: 49, Loss: 0.7582, Train: 0.9929, Val: 0.7840, Test: 0.7950
Epoch: 50, Loss: 0.5721, Train: 0.9929, Val: 0.7860, Test: 0.7930
MAD:  0.6579
Best Test Accuracy: 0.7950, Val Accuracy: 0.7840, Train Accuracy: 0.9929
Training completed.
Average Test Accuracy:  0.7369000000000001 ± 0.08387782782118289
Average MAD:  0.7026800000000001 ± 0.06069963426578448
