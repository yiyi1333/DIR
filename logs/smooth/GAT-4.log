Seed:  0
Epoch: 1, Loss: 1.9460, Train: 0.1786, Val: 0.1560, Test: 0.1710
Epoch: 2, Loss: 1.9394, Train: 0.3143, Val: 0.2800, Test: 0.2770
Epoch: 3, Loss: 1.9369, Train: 0.3857, Val: 0.3160, Test: 0.3400
Epoch: 4, Loss: 1.9260, Train: 0.4643, Val: 0.3840, Test: 0.3790
Epoch: 5, Loss: 1.9219, Train: 0.5071, Val: 0.3920, Test: 0.3980
Epoch: 6, Loss: 1.9160, Train: 0.4857, Val: 0.3820, Test: 0.3840
Epoch: 7, Loss: 1.9065, Train: 0.4929, Val: 0.3740, Test: 0.3810
Epoch: 8, Loss: 1.8949, Train: 0.4786, Val: 0.3720, Test: 0.3850
Epoch: 9, Loss: 1.8837, Train: 0.4857, Val: 0.3740, Test: 0.3880
Epoch: 10, Loss: 1.8843, Train: 0.4929, Val: 0.3820, Test: 0.3950
Epoch: 11, Loss: 1.8566, Train: 0.5000, Val: 0.4080, Test: 0.4090
Epoch: 12, Loss: 1.8578, Train: 0.5214, Val: 0.4400, Test: 0.4340
Epoch: 13, Loss: 1.8624, Train: 0.5429, Val: 0.4820, Test: 0.4740
Epoch: 14, Loss: 1.7792, Train: 0.5714, Val: 0.4880, Test: 0.4980
Epoch: 15, Loss: 1.7629, Train: 0.5857, Val: 0.5000, Test: 0.5200
Epoch: 16, Loss: 1.7657, Train: 0.5929, Val: 0.5220, Test: 0.5290
Epoch: 17, Loss: 1.7371, Train: 0.5929, Val: 0.5260, Test: 0.5310
Epoch: 18, Loss: 1.7490, Train: 0.6214, Val: 0.5260, Test: 0.5430
Epoch: 19, Loss: 1.6861, Train: 0.6214, Val: 0.5300, Test: 0.5420
Epoch: 20, Loss: 1.6842, Train: 0.6214, Val: 0.5360, Test: 0.5460
Epoch: 21, Loss: 1.7087, Train: 0.6714, Val: 0.5580, Test: 0.5620
Epoch: 22, Loss: 1.6222, Train: 0.6786, Val: 0.5600, Test: 0.5750
Epoch: 23, Loss: 1.5525, Train: 0.7071, Val: 0.5640, Test: 0.5650
Epoch: 24, Loss: 1.5271, Train: 0.7143, Val: 0.5760, Test: 0.5720
Epoch: 25, Loss: 1.5486, Train: 0.7286, Val: 0.5820, Test: 0.5840
Epoch: 26, Loss: 1.4992, Train: 0.7286, Val: 0.6060, Test: 0.5970
Epoch: 27, Loss: 1.4288, Train: 0.7429, Val: 0.6260, Test: 0.6140
Epoch: 28, Loss: 1.4388, Train: 0.7357, Val: 0.6380, Test: 0.6260
Epoch: 29, Loss: 1.4225, Train: 0.7500, Val: 0.6540, Test: 0.6400
Epoch: 30, Loss: 1.3458, Train: 0.7714, Val: 0.6680, Test: 0.6560
Epoch: 31, Loss: 1.1578, Train: 0.8000, Val: 0.6880, Test: 0.6800
Epoch: 32, Loss: 1.2794, Train: 0.8000, Val: 0.7040, Test: 0.6900
Epoch: 33, Loss: 1.2253, Train: 0.8000, Val: 0.7180, Test: 0.7010
Epoch: 34, Loss: 1.0991, Train: 0.8000, Val: 0.7160, Test: 0.7000
Epoch: 35, Loss: 1.3739, Train: 0.8000, Val: 0.7180, Test: 0.6990
Epoch: 36, Loss: 1.1011, Train: 0.8071, Val: 0.7140, Test: 0.7030
Epoch: 37, Loss: 1.0754, Train: 0.8071, Val: 0.7160, Test: 0.7130
Epoch: 38, Loss: 1.1637, Train: 0.8286, Val: 0.7260, Test: 0.7250
Epoch: 39, Loss: 1.0767, Train: 0.8357, Val: 0.7360, Test: 0.7300
Epoch: 40, Loss: 1.1471, Train: 0.8286, Val: 0.7400, Test: 0.7260
Epoch: 41, Loss: 0.9736, Train: 0.8357, Val: 0.7380, Test: 0.7290
Epoch: 42, Loss: 1.1349, Train: 0.8357, Val: 0.7380, Test: 0.7270
Epoch: 43, Loss: 1.0167, Train: 0.8357, Val: 0.7380, Test: 0.7310
Epoch: 44, Loss: 0.9682, Train: 0.8357, Val: 0.7380, Test: 0.7340
Epoch: 45, Loss: 1.0406, Train: 0.8429, Val: 0.7320, Test: 0.7290
Epoch: 46, Loss: 0.9312, Train: 0.8429, Val: 0.7280, Test: 0.7250
Epoch: 47, Loss: 0.9808, Train: 0.8429, Val: 0.7200, Test: 0.7230
Epoch: 48, Loss: 0.9476, Train: 0.8500, Val: 0.7320, Test: 0.7280
Epoch: 49, Loss: 0.9503, Train: 0.8500, Val: 0.7380, Test: 0.7300
Epoch: 50, Loss: 0.9017, Train: 0.8357, Val: 0.7500, Test: 0.7340
MAD:  0.6538
Best Test Accuracy: 0.7340, Val Accuracy: 0.7380, Train Accuracy: 0.8357
Training completed.
Seed:  1
Epoch: 1, Loss: 1.9444, Train: 0.2357, Val: 0.1260, Test: 0.1300
Epoch: 2, Loss: 1.9382, Train: 0.2929, Val: 0.1500, Test: 0.1650
Epoch: 3, Loss: 1.9363, Train: 0.3357, Val: 0.1880, Test: 0.1920
Epoch: 4, Loss: 1.9321, Train: 0.3500, Val: 0.2020, Test: 0.2020
Epoch: 5, Loss: 1.9234, Train: 0.3571, Val: 0.2060, Test: 0.2130
Epoch: 6, Loss: 1.9153, Train: 0.3571, Val: 0.2100, Test: 0.2340
Epoch: 7, Loss: 1.9189, Train: 0.3786, Val: 0.2600, Test: 0.2560
Epoch: 8, Loss: 1.9046, Train: 0.4000, Val: 0.2920, Test: 0.2910
Epoch: 9, Loss: 1.9119, Train: 0.4571, Val: 0.3460, Test: 0.3460
Epoch: 10, Loss: 1.8822, Train: 0.4786, Val: 0.3840, Test: 0.3890
Epoch: 11, Loss: 1.8758, Train: 0.4786, Val: 0.3960, Test: 0.4160
Epoch: 12, Loss: 1.8407, Train: 0.4857, Val: 0.4000, Test: 0.4320
Epoch: 13, Loss: 1.8432, Train: 0.5286, Val: 0.4160, Test: 0.4430
Epoch: 14, Loss: 1.8138, Train: 0.5357, Val: 0.4160, Test: 0.4420
Epoch: 15, Loss: 1.8275, Train: 0.5500, Val: 0.4600, Test: 0.4600
Epoch: 16, Loss: 1.8012, Train: 0.5500, Val: 0.4720, Test: 0.4870
Epoch: 17, Loss: 1.7744, Train: 0.5643, Val: 0.4900, Test: 0.5050
Epoch: 18, Loss: 1.7761, Train: 0.5786, Val: 0.5000, Test: 0.5180
Epoch: 19, Loss: 1.7544, Train: 0.5929, Val: 0.5100, Test: 0.5280
Epoch: 20, Loss: 1.6734, Train: 0.6071, Val: 0.5260, Test: 0.5380
Epoch: 21, Loss: 1.6481, Train: 0.6071, Val: 0.5320, Test: 0.5470
Epoch: 22, Loss: 1.6260, Train: 0.6071, Val: 0.5500, Test: 0.5640
Epoch: 23, Loss: 1.6113, Train: 0.6143, Val: 0.5620, Test: 0.5810
Epoch: 24, Loss: 1.6297, Train: 0.6357, Val: 0.5880, Test: 0.5960
Epoch: 25, Loss: 1.5491, Train: 0.6714, Val: 0.6000, Test: 0.6040
Epoch: 26, Loss: 1.5187, Train: 0.6929, Val: 0.6080, Test: 0.6210
Epoch: 27, Loss: 1.4627, Train: 0.7000, Val: 0.6200, Test: 0.6290
Epoch: 28, Loss: 1.4289, Train: 0.6929, Val: 0.6260, Test: 0.6300
Epoch: 29, Loss: 1.4531, Train: 0.6929, Val: 0.6260, Test: 0.6330
Epoch: 30, Loss: 1.3382, Train: 0.6857, Val: 0.6260, Test: 0.6350
Epoch: 31, Loss: 1.3555, Train: 0.6929, Val: 0.6420, Test: 0.6390
Epoch: 32, Loss: 1.3050, Train: 0.6929, Val: 0.6460, Test: 0.6390
Epoch: 33, Loss: 1.2452, Train: 0.6929, Val: 0.6500, Test: 0.6380
Epoch: 34, Loss: 1.2926, Train: 0.6929, Val: 0.6480, Test: 0.6380
Epoch: 35, Loss: 1.2629, Train: 0.6929, Val: 0.6540, Test: 0.6400
Epoch: 36, Loss: 1.2648, Train: 0.6857, Val: 0.6520, Test: 0.6370
Epoch: 37, Loss: 1.2505, Train: 0.6857, Val: 0.6600, Test: 0.6390
Epoch: 38, Loss: 1.1528, Train: 0.6857, Val: 0.6560, Test: 0.6390
Epoch: 39, Loss: 1.1684, Train: 0.6857, Val: 0.6540, Test: 0.6400
Epoch: 40, Loss: 1.1614, Train: 0.6929, Val: 0.6600, Test: 0.6420
Epoch: 41, Loss: 1.1905, Train: 0.7000, Val: 0.6560, Test: 0.6430
Epoch: 42, Loss: 1.1883, Train: 0.7143, Val: 0.6560, Test: 0.6500
Epoch: 43, Loss: 1.0703, Train: 0.7643, Val: 0.6760, Test: 0.6690
Epoch: 44, Loss: 1.1676, Train: 0.7786, Val: 0.6840, Test: 0.6830
Epoch: 45, Loss: 1.1313, Train: 0.8214, Val: 0.6700, Test: 0.6870
Epoch: 46, Loss: 1.0748, Train: 0.8286, Val: 0.6660, Test: 0.6900
Epoch: 47, Loss: 0.9797, Train: 0.8286, Val: 0.6640, Test: 0.6870
Epoch: 48, Loss: 1.0563, Train: 0.8286, Val: 0.6500, Test: 0.6890
Epoch: 49, Loss: 0.9486, Train: 0.8214, Val: 0.6400, Test: 0.6890
Epoch: 50, Loss: 0.9116, Train: 0.8286, Val: 0.6420, Test: 0.6860
MAD:  0.7009
Best Test Accuracy: 0.6900, Val Accuracy: 0.6660, Train Accuracy: 0.8286
Training completed.
Seed:  2
Epoch: 1, Loss: 1.9453, Train: 0.2000, Val: 0.1840, Test: 0.1790
Epoch: 2, Loss: 1.9408, Train: 0.3214, Val: 0.2480, Test: 0.2450
Epoch: 3, Loss: 1.9374, Train: 0.4071, Val: 0.3080, Test: 0.2920
Epoch: 4, Loss: 1.9371, Train: 0.4786, Val: 0.3440, Test: 0.3320
Epoch: 5, Loss: 1.9292, Train: 0.4643, Val: 0.3400, Test: 0.3460
Epoch: 6, Loss: 1.9225, Train: 0.4571, Val: 0.3560, Test: 0.3510
Epoch: 7, Loss: 1.9153, Train: 0.4786, Val: 0.3780, Test: 0.3670
Epoch: 8, Loss: 1.9104, Train: 0.5429, Val: 0.4040, Test: 0.3930
Epoch: 9, Loss: 1.9021, Train: 0.5929, Val: 0.4280, Test: 0.4170
Epoch: 10, Loss: 1.8809, Train: 0.6000, Val: 0.4500, Test: 0.4360
Epoch: 11, Loss: 1.8812, Train: 0.6071, Val: 0.4560, Test: 0.4450
Epoch: 12, Loss: 1.8557, Train: 0.6143, Val: 0.4520, Test: 0.4460
Epoch: 13, Loss: 1.8419, Train: 0.6000, Val: 0.4480, Test: 0.4450
Epoch: 14, Loss: 1.8489, Train: 0.5929, Val: 0.4460, Test: 0.4460
Epoch: 15, Loss: 1.8165, Train: 0.5786, Val: 0.4340, Test: 0.4390
Epoch: 16, Loss: 1.7912, Train: 0.5929, Val: 0.4320, Test: 0.4310
Epoch: 17, Loss: 1.7871, Train: 0.6000, Val: 0.4280, Test: 0.4290
Epoch: 18, Loss: 1.7361, Train: 0.6000, Val: 0.4320, Test: 0.4290
Epoch: 19, Loss: 1.6798, Train: 0.6000, Val: 0.4360, Test: 0.4290
Epoch: 20, Loss: 1.6632, Train: 0.6071, Val: 0.4360, Test: 0.4300
Epoch: 21, Loss: 1.6761, Train: 0.6071, Val: 0.4400, Test: 0.4320
Epoch: 22, Loss: 1.7212, Train: 0.6143, Val: 0.4400, Test: 0.4410
Epoch: 23, Loss: 1.5895, Train: 0.6286, Val: 0.4540, Test: 0.4550
Epoch: 24, Loss: 1.5144, Train: 0.6286, Val: 0.4800, Test: 0.4770
Epoch: 25, Loss: 1.5317, Train: 0.6643, Val: 0.5060, Test: 0.5000
Epoch: 26, Loss: 1.5385, Train: 0.6786, Val: 0.5320, Test: 0.5240
Epoch: 27, Loss: 1.4948, Train: 0.7071, Val: 0.5580, Test: 0.5480
Epoch: 28, Loss: 1.4433, Train: 0.7286, Val: 0.6000, Test: 0.5960
Epoch: 29, Loss: 1.3897, Train: 0.7429, Val: 0.6180, Test: 0.6180
Epoch: 30, Loss: 1.3989, Train: 0.7571, Val: 0.6520, Test: 0.6430
Epoch: 31, Loss: 1.3167, Train: 0.7714, Val: 0.6660, Test: 0.6670
Epoch: 32, Loss: 1.2936, Train: 0.7857, Val: 0.6760, Test: 0.6790
Epoch: 33, Loss: 1.2493, Train: 0.7929, Val: 0.6880, Test: 0.6790
Epoch: 34, Loss: 1.1546, Train: 0.8000, Val: 0.7000, Test: 0.6890
Epoch: 35, Loss: 1.2073, Train: 0.8071, Val: 0.7100, Test: 0.7000
Epoch: 36, Loss: 1.0981, Train: 0.8071, Val: 0.7120, Test: 0.7020
Epoch: 37, Loss: 1.2321, Train: 0.8071, Val: 0.6980, Test: 0.6970
Epoch: 38, Loss: 1.0458, Train: 0.8071, Val: 0.6900, Test: 0.6870
Epoch: 39, Loss: 1.1918, Train: 0.8143, Val: 0.6960, Test: 0.6910
Epoch: 40, Loss: 1.1759, Train: 0.8286, Val: 0.7020, Test: 0.6880
Epoch: 41, Loss: 0.9852, Train: 0.8286, Val: 0.6980, Test: 0.6910
Epoch: 42, Loss: 0.9471, Train: 0.8286, Val: 0.6960, Test: 0.6960
Epoch: 43, Loss: 1.1100, Train: 0.8286, Val: 0.6900, Test: 0.6990
Epoch: 44, Loss: 0.9969, Train: 0.8286, Val: 0.6920, Test: 0.6980
Epoch: 45, Loss: 1.0468, Train: 0.8286, Val: 0.6960, Test: 0.6970
Epoch: 46, Loss: 0.8804, Train: 0.8357, Val: 0.7060, Test: 0.7070
Epoch: 47, Loss: 0.9598, Train: 0.8357, Val: 0.7060, Test: 0.7130
Epoch: 48, Loss: 1.0293, Train: 0.8357, Val: 0.7140, Test: 0.7100
Epoch: 49, Loss: 0.9033, Train: 0.8714, Val: 0.7180, Test: 0.7200
Epoch: 50, Loss: 0.8683, Train: 0.8929, Val: 0.7300, Test: 0.7290
MAD:  0.7279
Best Test Accuracy: 0.7290, Val Accuracy: 0.7300, Train Accuracy: 0.8929
Training completed.
Seed:  3
Epoch: 1, Loss: 1.9464, Train: 0.1857, Val: 0.1860, Test: 0.1770
Epoch: 2, Loss: 1.9458, Train: 0.1857, Val: 0.1580, Test: 0.1540
Epoch: 3, Loss: 1.9414, Train: 0.1857, Val: 0.1340, Test: 0.1360
Epoch: 4, Loss: 1.9348, Train: 0.1929, Val: 0.1260, Test: 0.1400
Epoch: 5, Loss: 1.9331, Train: 0.2071, Val: 0.1400, Test: 0.1550
Epoch: 6, Loss: 1.9281, Train: 0.2714, Val: 0.1980, Test: 0.2240
Epoch: 7, Loss: 1.9217, Train: 0.3071, Val: 0.2520, Test: 0.2550
Epoch: 8, Loss: 1.9079, Train: 0.3143, Val: 0.2860, Test: 0.2940
Epoch: 9, Loss: 1.8998, Train: 0.3286, Val: 0.3260, Test: 0.3310
Epoch: 10, Loss: 1.8950, Train: 0.3214, Val: 0.3420, Test: 0.3450
Epoch: 11, Loss: 1.8842, Train: 0.3143, Val: 0.3500, Test: 0.3550
Epoch: 12, Loss: 1.8826, Train: 0.3071, Val: 0.3460, Test: 0.3510
Epoch: 13, Loss: 1.8715, Train: 0.3286, Val: 0.3480, Test: 0.3540
Epoch: 14, Loss: 1.8648, Train: 0.3929, Val: 0.3660, Test: 0.3740
Epoch: 15, Loss: 1.8403, Train: 0.4071, Val: 0.3720, Test: 0.3920
Epoch: 16, Loss: 1.8193, Train: 0.4286, Val: 0.3760, Test: 0.3990
Epoch: 17, Loss: 1.7971, Train: 0.4357, Val: 0.3860, Test: 0.4140
Epoch: 18, Loss: 1.7472, Train: 0.4357, Val: 0.3920, Test: 0.4250
Epoch: 19, Loss: 1.7829, Train: 0.4571, Val: 0.4100, Test: 0.4390
Epoch: 20, Loss: 1.7432, Train: 0.4786, Val: 0.4160, Test: 0.4480
Epoch: 21, Loss: 1.7217, Train: 0.4929, Val: 0.4300, Test: 0.4550
Epoch: 22, Loss: 1.6464, Train: 0.5071, Val: 0.4440, Test: 0.4690
Epoch: 23, Loss: 1.6931, Train: 0.5214, Val: 0.4680, Test: 0.4780
Epoch: 24, Loss: 1.6495, Train: 0.5214, Val: 0.4740, Test: 0.4850
Epoch: 25, Loss: 1.6146, Train: 0.5357, Val: 0.4800, Test: 0.4990
Epoch: 26, Loss: 1.6183, Train: 0.5571, Val: 0.4940, Test: 0.5230
Epoch: 27, Loss: 1.5755, Train: 0.5643, Val: 0.4960, Test: 0.5320
Epoch: 28, Loss: 1.5129, Train: 0.5714, Val: 0.4960, Test: 0.5330
Epoch: 29, Loss: 1.5412, Train: 0.6000, Val: 0.5140, Test: 0.5500
Epoch: 30, Loss: 1.4093, Train: 0.6071, Val: 0.5140, Test: 0.5590
Epoch: 31, Loss: 1.3855, Train: 0.6357, Val: 0.5260, Test: 0.5730
Epoch: 32, Loss: 1.4017, Train: 0.6571, Val: 0.5580, Test: 0.5800
Epoch: 33, Loss: 1.3547, Train: 0.6929, Val: 0.5760, Test: 0.5940
Epoch: 34, Loss: 1.3825, Train: 0.7214, Val: 0.5860, Test: 0.6150
Epoch: 35, Loss: 1.3692, Train: 0.7643, Val: 0.6060, Test: 0.6380
Epoch: 36, Loss: 1.3974, Train: 0.7714, Val: 0.6220, Test: 0.6480
Epoch: 37, Loss: 1.2924, Train: 0.7714, Val: 0.6320, Test: 0.6500
Epoch: 38, Loss: 1.2916, Train: 0.8071, Val: 0.6240, Test: 0.6400
Epoch: 39, Loss: 1.2869, Train: 0.8071, Val: 0.6300, Test: 0.6420
Epoch: 40, Loss: 1.2120, Train: 0.8143, Val: 0.6320, Test: 0.6510
Epoch: 41, Loss: 1.0604, Train: 0.8071, Val: 0.6440, Test: 0.6620
Epoch: 42, Loss: 1.1415, Train: 0.8143, Val: 0.6500, Test: 0.6700
Epoch: 43, Loss: 1.0274, Train: 0.8143, Val: 0.6480, Test: 0.6660
Epoch: 44, Loss: 1.0392, Train: 0.8214, Val: 0.6400, Test: 0.6680
Epoch: 45, Loss: 1.1288, Train: 0.8143, Val: 0.6420, Test: 0.6580
Epoch: 46, Loss: 0.9530, Train: 0.8214, Val: 0.6480, Test: 0.6530
Epoch: 47, Loss: 1.0444, Train: 0.8214, Val: 0.6260, Test: 0.6390
Epoch: 48, Loss: 0.9160, Train: 0.8214, Val: 0.6180, Test: 0.6270
Epoch: 49, Loss: 0.9595, Train: 0.8071, Val: 0.6160, Test: 0.6250
Epoch: 50, Loss: 0.9392, Train: 0.8143, Val: 0.6120, Test: 0.6340
MAD:  0.6078
Best Test Accuracy: 0.6700, Val Accuracy: 0.6500, Train Accuracy: 0.8143
Training completed.
Seed:  4
Epoch: 1, Loss: 1.9478, Train: 0.2071, Val: 0.1780, Test: 0.1800
Epoch: 2, Loss: 1.9455, Train: 0.2071, Val: 0.1080, Test: 0.1260
Epoch: 3, Loss: 1.9430, Train: 0.2071, Val: 0.1080, Test: 0.1320
Epoch: 4, Loss: 1.9383, Train: 0.2786, Val: 0.1280, Test: 0.1460
Epoch: 5, Loss: 1.9357, Train: 0.3500, Val: 0.1700, Test: 0.1950
Epoch: 6, Loss: 1.9336, Train: 0.4286, Val: 0.2060, Test: 0.2390
Epoch: 7, Loss: 1.9259, Train: 0.4857, Val: 0.2520, Test: 0.2820
Epoch: 8, Loss: 1.9191, Train: 0.4929, Val: 0.2880, Test: 0.3250
Epoch: 9, Loss: 1.9122, Train: 0.5500, Val: 0.3440, Test: 0.3800
Epoch: 10, Loss: 1.9066, Train: 0.6000, Val: 0.3780, Test: 0.4150
Epoch: 11, Loss: 1.8946, Train: 0.6214, Val: 0.4060, Test: 0.4290
Epoch: 12, Loss: 1.8811, Train: 0.6714, Val: 0.4300, Test: 0.4480
Epoch: 13, Loss: 1.8636, Train: 0.6929, Val: 0.4600, Test: 0.4860
Epoch: 14, Loss: 1.8569, Train: 0.7286, Val: 0.4920, Test: 0.5090
Epoch: 15, Loss: 1.8251, Train: 0.7571, Val: 0.5140, Test: 0.5350
Epoch: 16, Loss: 1.8317, Train: 0.7571, Val: 0.5340, Test: 0.5680
Epoch: 17, Loss: 1.8128, Train: 0.7929, Val: 0.5740, Test: 0.6060
Epoch: 18, Loss: 1.7755, Train: 0.8143, Val: 0.5940, Test: 0.6410
Epoch: 19, Loss: 1.7590, Train: 0.8286, Val: 0.6080, Test: 0.6590
Epoch: 20, Loss: 1.7197, Train: 0.8357, Val: 0.6300, Test: 0.6670
Epoch: 21, Loss: 1.6864, Train: 0.8357, Val: 0.6380, Test: 0.6730
Epoch: 22, Loss: 1.6914, Train: 0.8571, Val: 0.6480, Test: 0.6760
Epoch: 23, Loss: 1.5772, Train: 0.8643, Val: 0.6600, Test: 0.6870
Epoch: 24, Loss: 1.5690, Train: 0.8714, Val: 0.6780, Test: 0.6980
Epoch: 25, Loss: 1.5793, Train: 0.8714, Val: 0.7020, Test: 0.7190
Epoch: 26, Loss: 1.4984, Train: 0.8714, Val: 0.7160, Test: 0.7320
Epoch: 27, Loss: 1.4577, Train: 0.8786, Val: 0.7260, Test: 0.7400
Epoch: 28, Loss: 1.3903, Train: 0.8929, Val: 0.7300, Test: 0.7450
Epoch: 29, Loss: 1.2964, Train: 0.9071, Val: 0.7380, Test: 0.7530
Epoch: 30, Loss: 1.3241, Train: 0.9000, Val: 0.7380, Test: 0.7570
Epoch: 31, Loss: 1.3096, Train: 0.9071, Val: 0.7420, Test: 0.7700
Epoch: 32, Loss: 1.2130, Train: 0.9143, Val: 0.7540, Test: 0.7750
Epoch: 33, Loss: 1.2019, Train: 0.9286, Val: 0.7660, Test: 0.7890
Epoch: 34, Loss: 1.0764, Train: 0.9286, Val: 0.7600, Test: 0.7870
Epoch: 35, Loss: 1.0661, Train: 0.9286, Val: 0.7660, Test: 0.7830
Epoch: 36, Loss: 1.0501, Train: 0.9357, Val: 0.7760, Test: 0.7800
Epoch: 37, Loss: 1.0010, Train: 0.9500, Val: 0.7800, Test: 0.7790
Epoch: 38, Loss: 0.9290, Train: 0.9571, Val: 0.7860, Test: 0.7850
Epoch: 39, Loss: 0.8846, Train: 0.9714, Val: 0.7900, Test: 0.7910
Epoch: 40, Loss: 1.0315, Train: 0.9714, Val: 0.7880, Test: 0.7970
Epoch: 41, Loss: 0.8476, Train: 0.9786, Val: 0.7900, Test: 0.7930
Epoch: 42, Loss: 0.7869, Train: 0.9786, Val: 0.7860, Test: 0.7890
Epoch: 43, Loss: 0.9830, Train: 0.9571, Val: 0.7940, Test: 0.7870
Epoch: 44, Loss: 0.8461, Train: 0.9571, Val: 0.7860, Test: 0.7790
Epoch: 45, Loss: 0.8113, Train: 0.9643, Val: 0.7620, Test: 0.7630
Epoch: 46, Loss: 0.7357, Train: 0.9643, Val: 0.7400, Test: 0.7550
Epoch: 47, Loss: 0.8455, Train: 0.9643, Val: 0.7520, Test: 0.7670
Epoch: 48, Loss: 0.6093, Train: 0.9643, Val: 0.7680, Test: 0.7720
Epoch: 49, Loss: 0.6593, Train: 0.9643, Val: 0.7760, Test: 0.7780
Epoch: 50, Loss: 0.6983, Train: 0.9786, Val: 0.7780, Test: 0.7820
MAD:  0.6667
Best Test Accuracy: 0.7970, Val Accuracy: 0.7880, Train Accuracy: 0.9714
Training completed.
Seed:  5
Epoch: 1, Loss: 1.9480, Train: 0.1214, Val: 0.2540, Test: 0.2440
Epoch: 2, Loss: 1.9454, Train: 0.2786, Val: 0.3260, Test: 0.3160
Epoch: 3, Loss: 1.9430, Train: 0.3786, Val: 0.3400, Test: 0.3420
Epoch: 4, Loss: 1.9419, Train: 0.3786, Val: 0.3400, Test: 0.3300
Epoch: 5, Loss: 1.9398, Train: 0.3714, Val: 0.3400, Test: 0.3390
Epoch: 6, Loss: 1.9354, Train: 0.4143, Val: 0.3840, Test: 0.3740
Epoch: 7, Loss: 1.9306, Train: 0.4429, Val: 0.4240, Test: 0.4090
Epoch: 8, Loss: 1.9290, Train: 0.4714, Val: 0.4720, Test: 0.4660
Epoch: 9, Loss: 1.9254, Train: 0.5000, Val: 0.5100, Test: 0.5060
Epoch: 10, Loss: 1.9162, Train: 0.5000, Val: 0.5260, Test: 0.5260
Epoch: 11, Loss: 1.9128, Train: 0.5071, Val: 0.5300, Test: 0.5360
Epoch: 12, Loss: 1.9024, Train: 0.5214, Val: 0.5360, Test: 0.5470
Epoch: 13, Loss: 1.8918, Train: 0.5143, Val: 0.5380, Test: 0.5470
Epoch: 14, Loss: 1.8843, Train: 0.5143, Val: 0.5540, Test: 0.5450
Epoch: 15, Loss: 1.8738, Train: 0.5214, Val: 0.5520, Test: 0.5500
Epoch: 16, Loss: 1.8583, Train: 0.5357, Val: 0.5540, Test: 0.5530
Epoch: 17, Loss: 1.8368, Train: 0.5429, Val: 0.5580, Test: 0.5580
Epoch: 18, Loss: 1.8276, Train: 0.5429, Val: 0.5580, Test: 0.5600
Epoch: 19, Loss: 1.8208, Train: 0.5500, Val: 0.5640, Test: 0.5640
Epoch: 20, Loss: 1.7578, Train: 0.5500, Val: 0.5580, Test: 0.5670
Epoch: 21, Loss: 1.7692, Train: 0.5500, Val: 0.5520, Test: 0.5670
Epoch: 22, Loss: 1.7346, Train: 0.5500, Val: 0.5540, Test: 0.5660
Epoch: 23, Loss: 1.7065, Train: 0.5500, Val: 0.5400, Test: 0.5590
Epoch: 24, Loss: 1.6733, Train: 0.5500, Val: 0.5340, Test: 0.5540
Epoch: 25, Loss: 1.6322, Train: 0.5500, Val: 0.5340, Test: 0.5530
Epoch: 26, Loss: 1.6498, Train: 0.5500, Val: 0.5340, Test: 0.5550
Epoch: 27, Loss: 1.5523, Train: 0.5500, Val: 0.5340, Test: 0.5560
Epoch: 28, Loss: 1.5684, Train: 0.5500, Val: 0.5340, Test: 0.5540
Epoch: 29, Loss: 1.5518, Train: 0.5571, Val: 0.5320, Test: 0.5520
Epoch: 30, Loss: 1.4547, Train: 0.5571, Val: 0.5240, Test: 0.5470
Epoch: 31, Loss: 1.4030, Train: 0.5571, Val: 0.5260, Test: 0.5460
Epoch: 32, Loss: 1.3860, Train: 0.5643, Val: 0.5220, Test: 0.5440
Epoch: 33, Loss: 1.4080, Train: 0.5571, Val: 0.5200, Test: 0.5420
Epoch: 34, Loss: 1.3294, Train: 0.5571, Val: 0.5180, Test: 0.5420
Epoch: 35, Loss: 1.2918, Train: 0.5643, Val: 0.5220, Test: 0.5470
Epoch: 36, Loss: 1.3276, Train: 0.6286, Val: 0.5440, Test: 0.5740
Epoch: 37, Loss: 1.3424, Train: 0.6429, Val: 0.5720, Test: 0.5980
Epoch: 38, Loss: 1.3241, Train: 0.6571, Val: 0.5800, Test: 0.6180
Epoch: 39, Loss: 1.2114, Train: 0.6714, Val: 0.6040, Test: 0.6390
Epoch: 40, Loss: 1.2168, Train: 0.6786, Val: 0.6220, Test: 0.6460
Epoch: 41, Loss: 1.2055, Train: 0.6786, Val: 0.6300, Test: 0.6560
Epoch: 42, Loss: 1.1139, Train: 0.6786, Val: 0.6360, Test: 0.6580
Epoch: 43, Loss: 1.2395, Train: 0.6857, Val: 0.6360, Test: 0.6570
Epoch: 44, Loss: 1.1747, Train: 0.7000, Val: 0.6380, Test: 0.6590
Epoch: 45, Loss: 1.1994, Train: 0.7071, Val: 0.6300, Test: 0.6520
Epoch: 46, Loss: 1.1418, Train: 0.7071, Val: 0.6200, Test: 0.6500
Epoch: 47, Loss: 1.0476, Train: 0.7071, Val: 0.6200, Test: 0.6450
Epoch: 48, Loss: 1.2567, Train: 0.7071, Val: 0.6200, Test: 0.6450
Epoch: 49, Loss: 1.0959, Train: 0.7071, Val: 0.6220, Test: 0.6470
Epoch: 50, Loss: 1.0704, Train: 0.7071, Val: 0.6300, Test: 0.6470
MAD:  0.6939
Best Test Accuracy: 0.6590, Val Accuracy: 0.6380, Train Accuracy: 0.7000
Training completed.
Seed:  6
Epoch: 1, Loss: 1.9452, Train: 0.1929, Val: 0.3040, Test: 0.2690
Epoch: 2, Loss: 1.9426, Train: 0.3286, Val: 0.3740, Test: 0.3360
Epoch: 3, Loss: 1.9326, Train: 0.3500, Val: 0.4100, Test: 0.3680
Epoch: 4, Loss: 1.9330, Train: 0.3714, Val: 0.3880, Test: 0.3700
Epoch: 5, Loss: 1.9306, Train: 0.3714, Val: 0.3680, Test: 0.3610
Epoch: 6, Loss: 1.9191, Train: 0.3857, Val: 0.3640, Test: 0.3500
Epoch: 7, Loss: 1.9220, Train: 0.4500, Val: 0.3780, Test: 0.3710
Epoch: 8, Loss: 1.8998, Train: 0.4714, Val: 0.3940, Test: 0.4000
Epoch: 9, Loss: 1.8888, Train: 0.4857, Val: 0.4180, Test: 0.4250
Epoch: 10, Loss: 1.8792, Train: 0.4929, Val: 0.4460, Test: 0.4500
Epoch: 11, Loss: 1.8802, Train: 0.4929, Val: 0.4740, Test: 0.4750
Epoch: 12, Loss: 1.8469, Train: 0.5214, Val: 0.4800, Test: 0.4800
Epoch: 13, Loss: 1.8353, Train: 0.5286, Val: 0.4860, Test: 0.4860
Epoch: 14, Loss: 1.8194, Train: 0.5286, Val: 0.4880, Test: 0.4920
Epoch: 15, Loss: 1.8058, Train: 0.5214, Val: 0.4920, Test: 0.4920
Epoch: 16, Loss: 1.7823, Train: 0.5500, Val: 0.4980, Test: 0.4990
Epoch: 17, Loss: 1.7592, Train: 0.5571, Val: 0.4980, Test: 0.5110
Epoch: 18, Loss: 1.7551, Train: 0.6071, Val: 0.5060, Test: 0.5240
Epoch: 19, Loss: 1.6819, Train: 0.6214, Val: 0.5320, Test: 0.5420
Epoch: 20, Loss: 1.6943, Train: 0.6357, Val: 0.5580, Test: 0.5690
Epoch: 21, Loss: 1.6683, Train: 0.6714, Val: 0.5660, Test: 0.5850
Epoch: 22, Loss: 1.6767, Train: 0.6714, Val: 0.5820, Test: 0.6050
Epoch: 23, Loss: 1.5953, Train: 0.6714, Val: 0.5940, Test: 0.6160
Epoch: 24, Loss: 1.5157, Train: 0.6786, Val: 0.6120, Test: 0.6210
Epoch: 25, Loss: 1.5659, Train: 0.6786, Val: 0.6120, Test: 0.6220
Epoch: 26, Loss: 1.5586, Train: 0.6857, Val: 0.6200, Test: 0.6250
Epoch: 27, Loss: 1.4170, Train: 0.6929, Val: 0.6060, Test: 0.6250
Epoch: 28, Loss: 1.3786, Train: 0.7000, Val: 0.6100, Test: 0.6270
Epoch: 29, Loss: 1.3331, Train: 0.7000, Val: 0.6120, Test: 0.6290
Epoch: 30, Loss: 1.2756, Train: 0.7000, Val: 0.6220, Test: 0.6340
Epoch: 31, Loss: 1.2842, Train: 0.6929, Val: 0.6280, Test: 0.6400
Epoch: 32, Loss: 1.3094, Train: 0.7000, Val: 0.6240, Test: 0.6390
Epoch: 33, Loss: 1.3179, Train: 0.7000, Val: 0.6220, Test: 0.6400
Epoch: 34, Loss: 1.2726, Train: 0.7000, Val: 0.6220, Test: 0.6330
Epoch: 35, Loss: 1.2773, Train: 0.7000, Val: 0.6220, Test: 0.6320
Epoch: 36, Loss: 1.2458, Train: 0.7071, Val: 0.6200, Test: 0.6300
Epoch: 37, Loss: 1.2470, Train: 0.7071, Val: 0.6160, Test: 0.6270
Epoch: 38, Loss: 1.2023, Train: 0.7000, Val: 0.6180, Test: 0.6250
Epoch: 39, Loss: 1.0698, Train: 0.6857, Val: 0.6200, Test: 0.6250
Epoch: 40, Loss: 1.1798, Train: 0.6929, Val: 0.6160, Test: 0.6250
Epoch: 41, Loss: 1.0694, Train: 0.7000, Val: 0.6140, Test: 0.6200
Epoch: 42, Loss: 1.1063, Train: 0.7071, Val: 0.6100, Test: 0.6210
Epoch: 43, Loss: 1.1637, Train: 0.7071, Val: 0.6080, Test: 0.6210
Epoch: 44, Loss: 1.1135, Train: 0.7000, Val: 0.6040, Test: 0.6120
Epoch: 45, Loss: 1.0113, Train: 0.7000, Val: 0.6020, Test: 0.6080
Epoch: 46, Loss: 1.0833, Train: 0.7071, Val: 0.6000, Test: 0.6080
Epoch: 47, Loss: 1.1546, Train: 0.7071, Val: 0.6000, Test: 0.6080
Epoch: 48, Loss: 0.9939, Train: 0.7071, Val: 0.6000, Test: 0.6080
Epoch: 49, Loss: 0.9311, Train: 0.7071, Val: 0.6060, Test: 0.6140
Epoch: 50, Loss: 1.0247, Train: 0.7071, Val: 0.6180, Test: 0.6180
MAD:  0.5279
Best Test Accuracy: 0.6400, Val Accuracy: 0.6280, Train Accuracy: 0.6929
Training completed.
Seed:  7
Epoch: 1, Loss: 1.9436, Train: 0.2071, Val: 0.2500, Test: 0.2560
Epoch: 2, Loss: 1.9399, Train: 0.2786, Val: 0.2480, Test: 0.2720
Epoch: 3, Loss: 1.9390, Train: 0.4214, Val: 0.3060, Test: 0.3300
Epoch: 4, Loss: 1.9303, Train: 0.5214, Val: 0.3640, Test: 0.3820
Epoch: 5, Loss: 1.9213, Train: 0.5429, Val: 0.4060, Test: 0.4370
Epoch: 6, Loss: 1.9140, Train: 0.5714, Val: 0.4860, Test: 0.4900
Epoch: 7, Loss: 1.9063, Train: 0.5929, Val: 0.5020, Test: 0.5130
Epoch: 8, Loss: 1.8994, Train: 0.6143, Val: 0.5340, Test: 0.5320
Epoch: 9, Loss: 1.8824, Train: 0.6357, Val: 0.5560, Test: 0.5610
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 10, Loss: 1.8820, Train: 0.6500, Val: 0.5580, Test: 0.5620
Epoch: 11, Loss: 1.8751, Train: 0.6571, Val: 0.5800, Test: 0.5750
Epoch: 12, Loss: 1.8559, Train: 0.6714, Val: 0.5860, Test: 0.5800
Epoch: 13, Loss: 1.8428, Train: 0.6714, Val: 0.5800, Test: 0.5780
Epoch: 14, Loss: 1.8208, Train: 0.6714, Val: 0.5820, Test: 0.5770
Epoch: 15, Loss: 1.7906, Train: 0.6643, Val: 0.5780, Test: 0.5660
Epoch: 16, Loss: 1.7657, Train: 0.6571, Val: 0.5640, Test: 0.5500
Epoch: 17, Loss: 1.7511, Train: 0.6643, Val: 0.5440, Test: 0.5380
Epoch: 18, Loss: 1.6912, Train: 0.6500, Val: 0.5440, Test: 0.5320
Epoch: 19, Loss: 1.6795, Train: 0.6643, Val: 0.5480, Test: 0.5390
Epoch: 20, Loss: 1.6848, Train: 0.6643, Val: 0.5680, Test: 0.5450
Epoch: 21, Loss: 1.6120, Train: 0.6786, Val: 0.5760, Test: 0.5610
Epoch: 22, Loss: 1.5903, Train: 0.7571, Val: 0.6020, Test: 0.5820
Epoch: 23, Loss: 1.5560, Train: 0.7714, Val: 0.6120, Test: 0.5990
Epoch: 24, Loss: 1.5264, Train: 0.7643, Val: 0.6100, Test: 0.6030
Epoch: 25, Loss: 1.5141, Train: 0.7714, Val: 0.6200, Test: 0.6140
Epoch: 26, Loss: 1.4593, Train: 0.7643, Val: 0.6320, Test: 0.6250
Epoch: 27, Loss: 1.3545, Train: 0.7786, Val: 0.6540, Test: 0.6460
Epoch: 28, Loss: 1.2742, Train: 0.7786, Val: 0.6620, Test: 0.6660
Epoch: 29, Loss: 1.2407, Train: 0.7786, Val: 0.6720, Test: 0.6770
Epoch: 30, Loss: 1.2622, Train: 0.7786, Val: 0.6880, Test: 0.6920
Epoch: 31, Loss: 1.2903, Train: 0.7786, Val: 0.6940, Test: 0.7050
Epoch: 32, Loss: 1.1679, Train: 0.7786, Val: 0.7160, Test: 0.7180
Epoch: 33, Loss: 1.1545, Train: 0.7857, Val: 0.7260, Test: 0.7210
Epoch: 34, Loss: 1.1543, Train: 0.7929, Val: 0.7200, Test: 0.7200
Epoch: 35, Loss: 1.1830, Train: 0.7857, Val: 0.7160, Test: 0.7240
Epoch: 36, Loss: 1.1258, Train: 0.7857, Val: 0.7180, Test: 0.7310
Epoch: 37, Loss: 1.0419, Train: 0.8000, Val: 0.7200, Test: 0.7360
Epoch: 38, Loss: 1.0725, Train: 0.8214, Val: 0.7220, Test: 0.7360
Epoch: 39, Loss: 0.9496, Train: 0.8214, Val: 0.7220, Test: 0.7370
Epoch: 40, Loss: 1.0539, Train: 0.8357, Val: 0.7240, Test: 0.7350
Epoch: 41, Loss: 0.8922, Train: 0.8286, Val: 0.7220, Test: 0.7400
Epoch: 42, Loss: 0.9465, Train: 0.8357, Val: 0.7200, Test: 0.7370
Epoch: 43, Loss: 0.8971, Train: 0.8357, Val: 0.7160, Test: 0.7360
Epoch: 44, Loss: 0.8915, Train: 0.8500, Val: 0.7120, Test: 0.7330
Epoch: 45, Loss: 0.7827, Train: 0.8571, Val: 0.7200, Test: 0.7350
Epoch: 46, Loss: 0.9054, Train: 0.8571, Val: 0.7180, Test: 0.7360
Epoch: 47, Loss: 0.9464, Train: 0.8571, Val: 0.7120, Test: 0.7390
Epoch: 48, Loss: 0.7848, Train: 0.8571, Val: 0.7140, Test: 0.7390
Epoch: 49, Loss: 0.8778, Train: 0.8571, Val: 0.7120, Test: 0.7370
Epoch: 50, Loss: 0.8403, Train: 0.8571, Val: 0.7080, Test: 0.7340
MAD:  0.7222
Best Test Accuracy: 0.7400, Val Accuracy: 0.7220, Train Accuracy: 0.8286
Training completed.
Seed:  8
Epoch: 1, Loss: 1.9448, Train: 0.2571, Val: 0.1400, Test: 0.1380
Epoch: 2, Loss: 1.9417, Train: 0.3071, Val: 0.1460, Test: 0.1570
Epoch: 3, Loss: 1.9368, Train: 0.3429, Val: 0.1620, Test: 0.1890
Epoch: 4, Loss: 1.9322, Train: 0.3643, Val: 0.1800, Test: 0.2070
Epoch: 5, Loss: 1.9323, Train: 0.3929, Val: 0.2080, Test: 0.2240
Epoch: 6, Loss: 1.9277, Train: 0.4000, Val: 0.2100, Test: 0.2370
Epoch: 7, Loss: 1.9185, Train: 0.4214, Val: 0.2360, Test: 0.2600
Epoch: 8, Loss: 1.9130, Train: 0.4571, Val: 0.2700, Test: 0.3010
Epoch: 9, Loss: 1.9038, Train: 0.4643, Val: 0.2840, Test: 0.3120
Epoch: 10, Loss: 1.8963, Train: 0.5000, Val: 0.2920, Test: 0.3300
Epoch: 11, Loss: 1.9020, Train: 0.5071, Val: 0.3400, Test: 0.3680
Epoch: 12, Loss: 1.8718, Train: 0.5143, Val: 0.3840, Test: 0.4060
Epoch: 13, Loss: 1.8626, Train: 0.5214, Val: 0.3980, Test: 0.4220
Epoch: 14, Loss: 1.8544, Train: 0.5571, Val: 0.4200, Test: 0.4470
Epoch: 15, Loss: 1.8332, Train: 0.5643, Val: 0.4300, Test: 0.4540
Epoch: 16, Loss: 1.8159, Train: 0.5643, Val: 0.4340, Test: 0.4660
Epoch: 17, Loss: 1.7904, Train: 0.5571, Val: 0.4480, Test: 0.4710
Epoch: 18, Loss: 1.7466, Train: 0.5500, Val: 0.4420, Test: 0.4680
Epoch: 19, Loss: 1.7397, Train: 0.5500, Val: 0.4480, Test: 0.4710
Epoch: 20, Loss: 1.7221, Train: 0.5500, Val: 0.4540, Test: 0.4790
Epoch: 21, Loss: 1.6594, Train: 0.5500, Val: 0.4540, Test: 0.4880
Epoch: 22, Loss: 1.6663, Train: 0.5429, Val: 0.4500, Test: 0.4930
Epoch: 23, Loss: 1.6012, Train: 0.5571, Val: 0.4620, Test: 0.4980
Epoch: 24, Loss: 1.5452, Train: 0.5643, Val: 0.4800, Test: 0.5110
Epoch: 25, Loss: 1.5356, Train: 0.6000, Val: 0.4900, Test: 0.5200
Epoch: 26, Loss: 1.5126, Train: 0.6071, Val: 0.5040, Test: 0.5290
Epoch: 27, Loss: 1.4817, Train: 0.6571, Val: 0.5280, Test: 0.5700
Epoch: 28, Loss: 1.4485, Train: 0.6786, Val: 0.5500, Test: 0.5920
Epoch: 29, Loss: 1.3417, Train: 0.7143, Val: 0.5800, Test: 0.6030
Epoch: 30, Loss: 1.3738, Train: 0.7214, Val: 0.5880, Test: 0.6070
Epoch: 31, Loss: 1.4290, Train: 0.7429, Val: 0.6000, Test: 0.6120
Epoch: 32, Loss: 1.2719, Train: 0.7500, Val: 0.6000, Test: 0.6230
Epoch: 33, Loss: 1.3371, Train: 0.7500, Val: 0.6060, Test: 0.6310
Epoch: 34, Loss: 1.1932, Train: 0.7571, Val: 0.6120, Test: 0.6340
Epoch: 35, Loss: 1.1526, Train: 0.7643, Val: 0.6160, Test: 0.6320
Epoch: 36, Loss: 1.0874, Train: 0.7714, Val: 0.6060, Test: 0.6230
Epoch: 37, Loss: 0.9428, Train: 0.7786, Val: 0.6000, Test: 0.6280
Epoch: 38, Loss: 1.2343, Train: 0.8000, Val: 0.5980, Test: 0.6280
Epoch: 39, Loss: 1.1124, Train: 0.8000, Val: 0.6040, Test: 0.6380
Epoch: 40, Loss: 1.1176, Train: 0.8000, Val: 0.6180, Test: 0.6370
Epoch: 41, Loss: 0.9919, Train: 0.8143, Val: 0.6240, Test: 0.6390
Epoch: 42, Loss: 1.0495, Train: 0.8214, Val: 0.6300, Test: 0.6410
Epoch: 43, Loss: 0.9746, Train: 0.8429, Val: 0.6220, Test: 0.6370
Epoch: 44, Loss: 0.9452, Train: 0.8286, Val: 0.6040, Test: 0.6130
Epoch: 45, Loss: 1.0078, Train: 0.8214, Val: 0.5820, Test: 0.5960
Epoch: 46, Loss: 0.9753, Train: 0.8214, Val: 0.5720, Test: 0.5850
Epoch: 47, Loss: 0.9246, Train: 0.8143, Val: 0.5700, Test: 0.5850
Epoch: 48, Loss: 1.0326, Train: 0.8286, Val: 0.5840, Test: 0.5890
Epoch: 49, Loss: 1.0010, Train: 0.8357, Val: 0.6140, Test: 0.6060
Epoch: 50, Loss: 0.9833, Train: 0.8500, Val: 0.6220, Test: 0.6230
MAD:  0.613
Best Test Accuracy: 0.6410, Val Accuracy: 0.6300, Train Accuracy: 0.8214
Training completed.
Seed:  9
Epoch: 1, Loss: 1.9463, Train: 0.2214, Val: 0.3220, Test: 0.3020
Epoch: 2, Loss: 1.9364, Train: 0.2714, Val: 0.3640, Test: 0.3540
Epoch: 3, Loss: 1.9360, Train: 0.3643, Val: 0.4500, Test: 0.4510
Epoch: 4, Loss: 1.9258, Train: 0.4000, Val: 0.4820, Test: 0.4740
Epoch: 5, Loss: 1.9185, Train: 0.4429, Val: 0.5120, Test: 0.4970
Epoch: 6, Loss: 1.9111, Train: 0.4714, Val: 0.5280, Test: 0.5320
Epoch: 7, Loss: 1.9008, Train: 0.5000, Val: 0.5420, Test: 0.5390
Epoch: 8, Loss: 1.8833, Train: 0.5071, Val: 0.5480, Test: 0.5440
Epoch: 9, Loss: 1.8711, Train: 0.5000, Val: 0.5440, Test: 0.5480
Epoch: 10, Loss: 1.8563, Train: 0.5143, Val: 0.5560, Test: 0.5550
Epoch: 11, Loss: 1.8435, Train: 0.5071, Val: 0.5600, Test: 0.5580
Epoch: 12, Loss: 1.8201, Train: 0.4929, Val: 0.5480, Test: 0.5560
Epoch: 13, Loss: 1.8055, Train: 0.4857, Val: 0.5440, Test: 0.5570
Epoch: 14, Loss: 1.7785, Train: 0.5000, Val: 0.5440, Test: 0.5620
Epoch: 15, Loss: 1.7811, Train: 0.5214, Val: 0.5600, Test: 0.5740
Epoch: 16, Loss: 1.7357, Train: 0.5500, Val: 0.5860, Test: 0.5840
Epoch: 17, Loss: 1.7131, Train: 0.5786, Val: 0.5900, Test: 0.6070
Epoch: 18, Loss: 1.6536, Train: 0.6000, Val: 0.5880, Test: 0.6160
Epoch: 19, Loss: 1.6114, Train: 0.6500, Val: 0.6020, Test: 0.6280
Epoch: 20, Loss: 1.6454, Train: 0.6929, Val: 0.6120, Test: 0.6420
Epoch: 21, Loss: 1.5681, Train: 0.7500, Val: 0.6180, Test: 0.6500
Epoch: 22, Loss: 1.4947, Train: 0.7714, Val: 0.6300, Test: 0.6470
Epoch: 23, Loss: 1.5056, Train: 0.7786, Val: 0.6380, Test: 0.6550
Epoch: 24, Loss: 1.4450, Train: 0.7786, Val: 0.6460, Test: 0.6640
Epoch: 25, Loss: 1.3603, Train: 0.8000, Val: 0.6540, Test: 0.6740
Epoch: 26, Loss: 1.3938, Train: 0.8143, Val: 0.6560, Test: 0.6860
Epoch: 27, Loss: 1.3855, Train: 0.8214, Val: 0.6720, Test: 0.6950
Epoch: 28, Loss: 1.2447, Train: 0.8214, Val: 0.6700, Test: 0.6950
Epoch: 29, Loss: 1.1677, Train: 0.8286, Val: 0.6660, Test: 0.6950
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 30, Loss: 1.1472, Train: 0.8143, Val: 0.6580, Test: 0.6950
Epoch: 31, Loss: 1.2740, Train: 0.8071, Val: 0.6600, Test: 0.6840
Epoch: 32, Loss: 1.1248, Train: 0.8143, Val: 0.6560, Test: 0.6790
Epoch: 33, Loss: 1.2191, Train: 0.8214, Val: 0.6520, Test: 0.6790
Epoch: 34, Loss: 0.9931, Train: 0.8286, Val: 0.6520, Test: 0.6810
Epoch: 35, Loss: 1.2321, Train: 0.8429, Val: 0.6500, Test: 0.6850
Epoch: 36, Loss: 1.1063, Train: 0.8429, Val: 0.6660, Test: 0.6880
Epoch: 37, Loss: 0.9908, Train: 0.8429, Val: 0.6660, Test: 0.6850
Epoch: 38, Loss: 1.1441, Train: 0.8429, Val: 0.6640, Test: 0.6840
Epoch: 39, Loss: 0.9381, Train: 0.8429, Val: 0.6660, Test: 0.6890
Epoch: 40, Loss: 1.0397, Train: 0.8500, Val: 0.6740, Test: 0.6960
Epoch: 41, Loss: 0.8599, Train: 0.8714, Val: 0.6800, Test: 0.7010
Epoch: 42, Loss: 0.8348, Train: 0.8786, Val: 0.6800, Test: 0.7080
Epoch: 43, Loss: 0.7864, Train: 0.8786, Val: 0.7000, Test: 0.7140
Epoch: 44, Loss: 0.9148, Train: 0.9000, Val: 0.6960, Test: 0.7180
Epoch: 45, Loss: 0.8581, Train: 0.9143, Val: 0.7180, Test: 0.7250
Epoch: 46, Loss: 0.8163, Train: 0.9643, Val: 0.7120, Test: 0.7300
Epoch: 47, Loss: 0.8478, Train: 0.9643, Val: 0.7100, Test: 0.7280
Epoch: 48, Loss: 0.6357, Train: 0.9571, Val: 0.7100, Test: 0.7320
Epoch: 49, Loss: 0.8331, Train: 0.9857, Val: 0.7200, Test: 0.7400
Epoch: 50, Loss: 0.8678, Train: 0.9857, Val: 0.7240, Test: 0.7520
MAD:  0.6929
Best Test Accuracy: 0.7520, Val Accuracy: 0.7240, Train Accuracy: 0.9857
Training completed.
Average Test Accuracy:  0.7051999999999999 ± 0.050201195204895264
Average MAD:  0.6607 ± 0.059030805517119596
