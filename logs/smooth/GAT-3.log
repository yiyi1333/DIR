Seed:  0
Epoch: 1, Loss: 1.9439, Train: 0.2214, Val: 0.2040, Test: 0.1750
Epoch: 2, Loss: 1.9425, Train: 0.2500, Val: 0.2200, Test: 0.2020
Epoch: 3, Loss: 1.9354, Train: 0.3071, Val: 0.2300, Test: 0.2140
Epoch: 4, Loss: 1.9323, Train: 0.4000, Val: 0.2320, Test: 0.2360
Epoch: 5, Loss: 1.9226, Train: 0.4143, Val: 0.2400, Test: 0.2490
Epoch: 6, Loss: 1.9060, Train: 0.4429, Val: 0.2580, Test: 0.2770
Epoch: 7, Loss: 1.9067, Train: 0.5071, Val: 0.3120, Test: 0.3110
Epoch: 8, Loss: 1.9018, Train: 0.5143, Val: 0.3260, Test: 0.3350
Epoch: 9, Loss: 1.8878, Train: 0.5357, Val: 0.3400, Test: 0.3450
Epoch: 10, Loss: 1.8629, Train: 0.5500, Val: 0.3460, Test: 0.3570
Epoch: 11, Loss: 1.8642, Train: 0.5571, Val: 0.3560, Test: 0.3630
Epoch: 12, Loss: 1.8461, Train: 0.5643, Val: 0.3600, Test: 0.3680
Epoch: 13, Loss: 1.8441, Train: 0.5643, Val: 0.3640, Test: 0.3680
Epoch: 14, Loss: 1.8161, Train: 0.5714, Val: 0.3640, Test: 0.3710
Epoch: 15, Loss: 1.7884, Train: 0.5714, Val: 0.3640, Test: 0.3710
Epoch: 16, Loss: 1.7727, Train: 0.5714, Val: 0.3640, Test: 0.3720
Epoch: 17, Loss: 1.7303, Train: 0.5714, Val: 0.3640, Test: 0.3720
Epoch: 18, Loss: 1.7210, Train: 0.5714, Val: 0.3660, Test: 0.3740
Epoch: 19, Loss: 1.6776, Train: 0.5714, Val: 0.3680, Test: 0.3730
Epoch: 20, Loss: 1.6583, Train: 0.5714, Val: 0.3700, Test: 0.3730
Epoch: 21, Loss: 1.6765, Train: 0.5714, Val: 0.3700, Test: 0.3730
Epoch: 22, Loss: 1.5656, Train: 0.5714, Val: 0.3700, Test: 0.3740
Epoch: 23, Loss: 1.5806, Train: 0.5714, Val: 0.3700, Test: 0.3730
Epoch: 24, Loss: 1.5699, Train: 0.5714, Val: 0.3660, Test: 0.3760
Epoch: 25, Loss: 1.5221, Train: 0.5714, Val: 0.3640, Test: 0.3750
Epoch: 26, Loss: 1.4906, Train: 0.5714, Val: 0.3640, Test: 0.3740
Epoch: 27, Loss: 1.3982, Train: 0.5714, Val: 0.3660, Test: 0.3750
Epoch: 28, Loss: 1.4981, Train: 0.5714, Val: 0.3660, Test: 0.3740
Epoch: 29, Loss: 1.3821, Train: 0.5714, Val: 0.3660, Test: 0.3740
Epoch: 30, Loss: 1.4398, Train: 0.5929, Val: 0.3720, Test: 0.3840
Epoch: 31, Loss: 1.3120, Train: 0.6000, Val: 0.3780, Test: 0.3890
Epoch: 32, Loss: 1.3332, Train: 0.6143, Val: 0.3820, Test: 0.3930
Epoch: 33, Loss: 1.2408, Train: 0.6214, Val: 0.3840, Test: 0.3970
Epoch: 34, Loss: 1.2028, Train: 0.6214, Val: 0.3860, Test: 0.3980
Epoch: 35, Loss: 1.3153, Train: 0.6214, Val: 0.3920, Test: 0.4000
Epoch: 36, Loss: 1.3098, Train: 0.6214, Val: 0.3900, Test: 0.4030
Epoch: 37, Loss: 1.2652, Train: 0.6286, Val: 0.3920, Test: 0.4040
Epoch: 38, Loss: 1.2659, Train: 0.6286, Val: 0.3960, Test: 0.4080
Epoch: 39, Loss: 1.0951, Train: 0.6357, Val: 0.3960, Test: 0.4100
Epoch: 40, Loss: 1.2543, Train: 0.6500, Val: 0.3980, Test: 0.4120
Epoch: 41, Loss: 1.0851, Train: 0.6500, Val: 0.4040, Test: 0.4120
Epoch: 42, Loss: 1.2203, Train: 0.6500, Val: 0.4080, Test: 0.4160
Epoch: 43, Loss: 1.1888, Train: 0.6500, Val: 0.4140, Test: 0.4260
Epoch: 44, Loss: 1.1218, Train: 0.6857, Val: 0.4300, Test: 0.4580
Epoch: 45, Loss: 1.1398, Train: 0.6857, Val: 0.4760, Test: 0.5110
Epoch: 46, Loss: 1.1438, Train: 0.7000, Val: 0.5140, Test: 0.5460
Epoch: 47, Loss: 1.1282, Train: 0.7000, Val: 0.5380, Test: 0.5680
Epoch: 48, Loss: 1.1000, Train: 0.7143, Val: 0.5600, Test: 0.5790
Epoch: 49, Loss: 0.9955, Train: 0.7143, Val: 0.5720, Test: 0.5860
Epoch: 50, Loss: 1.1470, Train: 0.7214, Val: 0.5740, Test: 0.5910
MAD:  0.5586
Best Test Accuracy: 0.5910, Val Accuracy: 0.5740, Train Accuracy: 0.7214
Training completed.
Seed:  1
Epoch: 1, Loss: 1.9450, Train: 0.2500, Val: 0.2320, Test: 0.2590
Epoch: 2, Loss: 1.9375, Train: 0.4286, Val: 0.3840, Test: 0.4100
Epoch: 3, Loss: 1.9352, Train: 0.4929, Val: 0.4600, Test: 0.4870
Epoch: 4, Loss: 1.9246, Train: 0.5357, Val: 0.4960, Test: 0.5300
Epoch: 5, Loss: 1.9122, Train: 0.5571, Val: 0.5400, Test: 0.5730
Epoch: 6, Loss: 1.9018, Train: 0.6214, Val: 0.5880, Test: 0.6220
Epoch: 7, Loss: 1.8959, Train: 0.6929, Val: 0.6160, Test: 0.6650
Epoch: 8, Loss: 1.8878, Train: 0.7214, Val: 0.6260, Test: 0.6910
Epoch: 9, Loss: 1.8590, Train: 0.7643, Val: 0.6440, Test: 0.7090
Epoch: 10, Loss: 1.8519, Train: 0.7786, Val: 0.6540, Test: 0.7130
Epoch: 11, Loss: 1.8437, Train: 0.7929, Val: 0.6540, Test: 0.7120
Epoch: 12, Loss: 1.8399, Train: 0.7929, Val: 0.6660, Test: 0.7140
Epoch: 13, Loss: 1.7954, Train: 0.7929, Val: 0.6700, Test: 0.7160
Epoch: 14, Loss: 1.7715, Train: 0.7929, Val: 0.6760, Test: 0.7200
Epoch: 15, Loss: 1.7389, Train: 0.8000, Val: 0.6900, Test: 0.7240
Epoch: 16, Loss: 1.7210, Train: 0.8071, Val: 0.6860, Test: 0.7300
Epoch: 17, Loss: 1.6722, Train: 0.8071, Val: 0.6880, Test: 0.7350
Epoch: 18, Loss: 1.6589, Train: 0.8143, Val: 0.6920, Test: 0.7400
Epoch: 19, Loss: 1.6498, Train: 0.8143, Val: 0.6920, Test: 0.7380
Epoch: 20, Loss: 1.6221, Train: 0.8071, Val: 0.7000, Test: 0.7370
Epoch: 21, Loss: 1.5022, Train: 0.8071, Val: 0.6980, Test: 0.7320
Epoch: 22, Loss: 1.5255, Train: 0.8000, Val: 0.6980, Test: 0.7320
Epoch: 23, Loss: 1.4883, Train: 0.8071, Val: 0.6940, Test: 0.7290
Epoch: 24, Loss: 1.3982, Train: 0.8143, Val: 0.6960, Test: 0.7240
Epoch: 25, Loss: 1.3738, Train: 0.8143, Val: 0.7000, Test: 0.7230
Epoch: 26, Loss: 1.2977, Train: 0.8143, Val: 0.7060, Test: 0.7220
Epoch: 27, Loss: 1.3612, Train: 0.8286, Val: 0.7080, Test: 0.7210
Epoch: 28, Loss: 1.3048, Train: 0.8357, Val: 0.7100, Test: 0.7180
Epoch: 29, Loss: 1.2597, Train: 0.8357, Val: 0.7100, Test: 0.7150
Epoch: 30, Loss: 1.2406, Train: 0.8357, Val: 0.7120, Test: 0.7150
Epoch: 31, Loss: 1.0482, Train: 0.8357, Val: 0.7180, Test: 0.7220
Epoch: 32, Loss: 1.2215, Train: 0.8357, Val: 0.7160, Test: 0.7190
Epoch: 33, Loss: 1.1145, Train: 0.8357, Val: 0.7160, Test: 0.7180
Epoch: 34, Loss: 1.1980, Train: 0.8429, Val: 0.7140, Test: 0.7140
Epoch: 35, Loss: 1.0743, Train: 0.8429, Val: 0.7160, Test: 0.7120
Epoch: 36, Loss: 1.0634, Train: 0.8429, Val: 0.7120, Test: 0.7150
Epoch: 37, Loss: 0.9148, Train: 0.8500, Val: 0.7100, Test: 0.7110
Epoch: 38, Loss: 0.9742, Train: 0.8500, Val: 0.7100, Test: 0.7130
Epoch: 39, Loss: 1.0164, Train: 0.8500, Val: 0.7140, Test: 0.7180
Epoch: 40, Loss: 0.9363, Train: 0.8643, Val: 0.7160, Test: 0.7250
Epoch: 41, Loss: 0.9408, Train: 0.8786, Val: 0.7200, Test: 0.7290
Epoch: 42, Loss: 0.8412, Train: 0.8857, Val: 0.7200, Test: 0.7270
Epoch: 43, Loss: 0.8197, Train: 0.8857, Val: 0.7200, Test: 0.7270
Epoch: 44, Loss: 0.9464, Train: 0.8929, Val: 0.7160, Test: 0.7280
Epoch: 45, Loss: 0.8953, Train: 0.8929, Val: 0.7100, Test: 0.7320
Epoch: 46, Loss: 0.9998, Train: 0.8929, Val: 0.7100, Test: 0.7340
Epoch: 47, Loss: 0.9122, Train: 0.8929, Val: 0.7140, Test: 0.7230
Epoch: 48, Loss: 0.8365, Train: 0.8929, Val: 0.7200, Test: 0.7240
Epoch: 49, Loss: 0.8581, Train: 0.9000, Val: 0.7200, Test: 0.7260
Epoch: 50, Loss: 0.8155, Train: 0.9071, Val: 0.7240, Test: 0.7290
MAD:  0.4157
Best Test Accuracy: 0.7400, Val Accuracy: 0.6920, Train Accuracy: 0.8143
Training completed.
Seed:  2
Epoch: 1, Loss: 1.9439, Train: 0.2214, Val: 0.1280, Test: 0.1440
Epoch: 2, Loss: 1.9371, Train: 0.2286, Val: 0.1280, Test: 0.1480
Epoch: 3, Loss: 1.9325, Train: 0.2571, Val: 0.1340, Test: 0.1590
Epoch: 4, Loss: 1.9251, Train: 0.3500, Val: 0.1740, Test: 0.1940
Epoch: 5, Loss: 1.9203, Train: 0.3643, Val: 0.1860, Test: 0.2150
Epoch: 6, Loss: 1.9088, Train: 0.4000, Val: 0.1980, Test: 0.2280
Epoch: 7, Loss: 1.9025, Train: 0.4071, Val: 0.2060, Test: 0.2380
Epoch: 8, Loss: 1.8926, Train: 0.4143, Val: 0.2080, Test: 0.2420
Epoch: 9, Loss: 1.8887, Train: 0.4143, Val: 0.2060, Test: 0.2460
Epoch: 10, Loss: 1.8733, Train: 0.4214, Val: 0.2080, Test: 0.2530
Epoch: 11, Loss: 1.8697, Train: 0.4214, Val: 0.2140, Test: 0.2550
Epoch: 12, Loss: 1.8675, Train: 0.4214, Val: 0.2160, Test: 0.2560
Epoch: 13, Loss: 1.8227, Train: 0.4357, Val: 0.2220, Test: 0.2630
Epoch: 14, Loss: 1.8005, Train: 0.4357, Val: 0.2240, Test: 0.2640
Epoch: 15, Loss: 1.7847, Train: 0.4357, Val: 0.2300, Test: 0.2660
Epoch: 16, Loss: 1.7714, Train: 0.4500, Val: 0.2500, Test: 0.2750
Epoch: 17, Loss: 1.7668, Train: 0.4643, Val: 0.2620, Test: 0.2890
Epoch: 18, Loss: 1.7445, Train: 0.4714, Val: 0.2680, Test: 0.3040
Epoch: 19, Loss: 1.7224, Train: 0.5000, Val: 0.2920, Test: 0.3250
Epoch: 20, Loss: 1.6866, Train: 0.5143, Val: 0.3120, Test: 0.3530
Epoch: 21, Loss: 1.6382, Train: 0.5214, Val: 0.3340, Test: 0.3780
Epoch: 22, Loss: 1.5896, Train: 0.5286, Val: 0.3640, Test: 0.4060
Epoch: 23, Loss: 1.6242, Train: 0.5286, Val: 0.3740, Test: 0.4190
Epoch: 24, Loss: 1.6068, Train: 0.5286, Val: 0.3860, Test: 0.4330
Epoch: 25, Loss: 1.5389, Train: 0.5500, Val: 0.3980, Test: 0.4490
Epoch: 26, Loss: 1.5093, Train: 0.5571, Val: 0.4140, Test: 0.4610
Epoch: 27, Loss: 1.5132, Train: 0.5786, Val: 0.4260, Test: 0.4810
Epoch: 28, Loss: 1.4512, Train: 0.6000, Val: 0.4440, Test: 0.4960
Epoch: 29, Loss: 1.5065, Train: 0.6214, Val: 0.4660, Test: 0.5090
Epoch: 30, Loss: 1.3536, Train: 0.6429, Val: 0.4760, Test: 0.5170
Epoch: 31, Loss: 1.4051, Train: 0.6571, Val: 0.4860, Test: 0.5270
Epoch: 32, Loss: 1.3131, Train: 0.6571, Val: 0.4940, Test: 0.5330
Epoch: 33, Loss: 1.4816, Train: 0.6571, Val: 0.4960, Test: 0.5320
Epoch: 34, Loss: 1.3359, Train: 0.6571, Val: 0.5000, Test: 0.5340
Epoch: 35, Loss: 1.3125, Train: 0.6643, Val: 0.5040, Test: 0.5400
Epoch: 36, Loss: 1.3460, Train: 0.6643, Val: 0.5080, Test: 0.5390
Epoch: 37, Loss: 1.2744, Train: 0.6714, Val: 0.5120, Test: 0.5410
Epoch: 38, Loss: 1.3033, Train: 0.6786, Val: 0.5200, Test: 0.5570
Epoch: 39, Loss: 1.2368, Train: 0.6786, Val: 0.5260, Test: 0.5510
Epoch: 40, Loss: 1.2611, Train: 0.6786, Val: 0.5220, Test: 0.5480
Epoch: 41, Loss: 1.2071, Train: 0.6786, Val: 0.5220, Test: 0.5480
Epoch: 42, Loss: 1.1189, Train: 0.6786, Val: 0.5200, Test: 0.5500
Epoch: 43, Loss: 1.2146, Train: 0.6857, Val: 0.5240, Test: 0.5530
Epoch: 44, Loss: 1.2174, Train: 0.6929, Val: 0.5280, Test: 0.5580
Epoch: 45, Loss: 1.1046, Train: 0.7000, Val: 0.5360, Test: 0.5670
Epoch: 46, Loss: 1.0393, Train: 0.7000, Val: 0.5420, Test: 0.5660
Epoch: 47, Loss: 0.9928, Train: 0.7000, Val: 0.5460, Test: 0.5730
Epoch: 48, Loss: 1.1401, Train: 0.7000, Val: 0.5500, Test: 0.5730
Epoch: 49, Loss: 1.0734, Train: 0.7000, Val: 0.5460, Test: 0.5760
Epoch: 50, Loss: 1.1425, Train: 0.7000, Val: 0.5460, Test: 0.5760
MAD:  0.7088
Best Test Accuracy: 0.5760, Val Accuracy: 0.5460, Train Accuracy: 0.7000
Training completed.
Seed:  3
Epoch: 1, Loss: 1.9470, Train: 0.1714, Val: 0.0840, Test: 0.1180
Epoch: 2, Loss: 1.9440, Train: 0.1714, Val: 0.0820, Test: 0.1120
Epoch: 3, Loss: 1.9362, Train: 0.1714, Val: 0.0840, Test: 0.1190
Epoch: 4, Loss: 1.9376, Train: 0.1857, Val: 0.1000, Test: 0.1300
Epoch: 5, Loss: 1.9292, Train: 0.2000, Val: 0.1080, Test: 0.1400
Epoch: 6, Loss: 1.9210, Train: 0.2286, Val: 0.1140, Test: 0.1510
Epoch: 7, Loss: 1.9207, Train: 0.2429, Val: 0.1300, Test: 0.1620
Epoch: 8, Loss: 1.9155, Train: 0.2500, Val: 0.1500, Test: 0.1750
Epoch: 9, Loss: 1.8986, Train: 0.2571, Val: 0.1640, Test: 0.1930
Epoch: 10, Loss: 1.8943, Train: 0.2786, Val: 0.1840, Test: 0.2090
Epoch: 11, Loss: 1.8963, Train: 0.3071, Val: 0.2100, Test: 0.2330
Epoch: 12, Loss: 1.8821, Train: 0.3857, Val: 0.2640, Test: 0.2890
Epoch: 13, Loss: 1.8498, Train: 0.4357, Val: 0.2940, Test: 0.3150
Epoch: 14, Loss: 1.8608, Train: 0.4429, Val: 0.3220, Test: 0.3370
Epoch: 15, Loss: 1.8491, Train: 0.4571, Val: 0.3260, Test: 0.3520
Epoch: 16, Loss: 1.8103, Train: 0.4643, Val: 0.3360, Test: 0.3510
Epoch: 17, Loss: 1.8192, Train: 0.4643, Val: 0.3300, Test: 0.3510
Epoch: 18, Loss: 1.7847, Train: 0.4643, Val: 0.3320, Test: 0.3470
Epoch: 19, Loss: 1.7672, Train: 0.4714, Val: 0.3400, Test: 0.3530
Epoch: 20, Loss: 1.7582, Train: 0.4714, Val: 0.3420, Test: 0.3540
Epoch: 21, Loss: 1.7382, Train: 0.4786, Val: 0.3420, Test: 0.3540
Epoch: 22, Loss: 1.7292, Train: 0.5143, Val: 0.3480, Test: 0.3600
Epoch: 23, Loss: 1.7105, Train: 0.5286, Val: 0.3580, Test: 0.3690
Epoch: 24, Loss: 1.6913, Train: 0.5286, Val: 0.3700, Test: 0.3830
Epoch: 25, Loss: 1.6875, Train: 0.5357, Val: 0.3820, Test: 0.3960
Epoch: 26, Loss: 1.6446, Train: 0.5357, Val: 0.4020, Test: 0.4130
Epoch: 27, Loss: 1.6479, Train: 0.5571, Val: 0.4360, Test: 0.4390
Epoch: 28, Loss: 1.5300, Train: 0.5714, Val: 0.4480, Test: 0.4600
Epoch: 29, Loss: 1.6440, Train: 0.5714, Val: 0.4540, Test: 0.4790
Epoch: 30, Loss: 1.6512, Train: 0.5786, Val: 0.4620, Test: 0.4900
Epoch: 31, Loss: 1.5050, Train: 0.5857, Val: 0.4820, Test: 0.5060
Epoch: 32, Loss: 1.4948, Train: 0.6071, Val: 0.4900, Test: 0.5150
Epoch: 33, Loss: 1.4572, Train: 0.6214, Val: 0.4960, Test: 0.5250
Epoch: 34, Loss: 1.3759, Train: 0.6286, Val: 0.5120, Test: 0.5360
Epoch: 35, Loss: 1.4309, Train: 0.6500, Val: 0.5320, Test: 0.5520
Epoch: 36, Loss: 1.3672, Train: 0.6571, Val: 0.5580, Test: 0.5700
Epoch: 37, Loss: 1.3435, Train: 0.6714, Val: 0.5700, Test: 0.5790
Epoch: 38, Loss: 1.3427, Train: 0.6786, Val: 0.5720, Test: 0.5880
Epoch: 39, Loss: 1.3718, Train: 0.6857, Val: 0.5760, Test: 0.6050
Epoch: 40, Loss: 1.2791, Train: 0.6857, Val: 0.5940, Test: 0.6110
Epoch: 41, Loss: 1.2944, Train: 0.6929, Val: 0.6000, Test: 0.6250
Epoch: 42, Loss: 1.3879, Train: 0.6929, Val: 0.6000, Test: 0.6270
Epoch: 43, Loss: 1.1857, Train: 0.6929, Val: 0.6020, Test: 0.6270
Epoch: 44, Loss: 1.2384, Train: 0.6929, Val: 0.6020, Test: 0.6290
Epoch: 45, Loss: 1.1752, Train: 0.6929, Val: 0.5980, Test: 0.6320
Epoch: 46, Loss: 1.1627, Train: 0.6929, Val: 0.5940, Test: 0.6310
Epoch: 47, Loss: 1.1224, Train: 0.6929, Val: 0.5920, Test: 0.6270
Epoch: 48, Loss: 1.2199, Train: 0.7000, Val: 0.5940, Test: 0.6330
Epoch: 49, Loss: 1.2018, Train: 0.7000, Val: 0.5920, Test: 0.6330
Epoch: 50, Loss: 1.1174, Train: 0.7071, Val: 0.5920, Test: 0.6290
MAD:  0.6728
Best Test Accuracy: 0.6330, Val Accuracy: 0.5940, Train Accuracy: 0.7000
Training completed.
Seed:  4
Epoch: 1, Loss: 1.9445, Train: 0.2500, Val: 0.1620, Test: 0.1510
Epoch: 2, Loss: 1.9340, Train: 0.3357, Val: 0.2660, Test: 0.2290
Epoch: 3, Loss: 1.9335, Train: 0.3929, Val: 0.3360, Test: 0.3200
Epoch: 4, Loss: 1.9182, Train: 0.4643, Val: 0.4060, Test: 0.3920
Epoch: 5, Loss: 1.9084, Train: 0.4571, Val: 0.4380, Test: 0.4400
Epoch: 6, Loss: 1.8969, Train: 0.4786, Val: 0.4600, Test: 0.4680
Epoch: 7, Loss: 1.8969, Train: 0.4857, Val: 0.4860, Test: 0.4870
Epoch: 8, Loss: 1.8797, Train: 0.4929, Val: 0.4940, Test: 0.5010
Epoch: 9, Loss: 1.8712, Train: 0.4929, Val: 0.5120, Test: 0.5090
Epoch: 10, Loss: 1.8562, Train: 0.5071, Val: 0.5200, Test: 0.5170
Epoch: 11, Loss: 1.8418, Train: 0.5071, Val: 0.5240, Test: 0.5240
Epoch: 12, Loss: 1.8118, Train: 0.5071, Val: 0.5280, Test: 0.5330
Epoch: 13, Loss: 1.8007, Train: 0.5071, Val: 0.5400, Test: 0.5380
Epoch: 14, Loss: 1.7611, Train: 0.5214, Val: 0.5380, Test: 0.5390
Epoch: 15, Loss: 1.7306, Train: 0.5214, Val: 0.5440, Test: 0.5400
Epoch: 16, Loss: 1.7863, Train: 0.5286, Val: 0.5480, Test: 0.5420
Epoch: 17, Loss: 1.7303, Train: 0.5286, Val: 0.5500, Test: 0.5430
Epoch: 18, Loss: 1.6804, Train: 0.5214, Val: 0.5520, Test: 0.5470
Epoch: 19, Loss: 1.6451, Train: 0.5286, Val: 0.5540, Test: 0.5550
Epoch: 20, Loss: 1.6635, Train: 0.5429, Val: 0.5580, Test: 0.5600
Epoch: 21, Loss: 1.6402, Train: 0.5429, Val: 0.5620, Test: 0.5660
Epoch: 22, Loss: 1.5749, Train: 0.5643, Val: 0.5700, Test: 0.5790
Epoch: 23, Loss: 1.5489, Train: 0.5857, Val: 0.5780, Test: 0.5900
Epoch: 24, Loss: 1.4466, Train: 0.5929, Val: 0.5940, Test: 0.5990
Epoch: 25, Loss: 1.5194, Train: 0.6000, Val: 0.6000, Test: 0.6040
Epoch: 26, Loss: 1.4562, Train: 0.6071, Val: 0.6280, Test: 0.6240
Epoch: 27, Loss: 1.3454, Train: 0.6214, Val: 0.6440, Test: 0.6370
Epoch: 28, Loss: 1.3789, Train: 0.6286, Val: 0.6700, Test: 0.6580
Epoch: 29, Loss: 1.2979, Train: 0.6429, Val: 0.6880, Test: 0.6640
Epoch: 30, Loss: 1.3201, Train: 0.6571, Val: 0.6980, Test: 0.6720
Epoch: 31, Loss: 1.3286, Train: 0.6571, Val: 0.7080, Test: 0.6790
Epoch: 32, Loss: 1.2548, Train: 0.6643, Val: 0.7180, Test: 0.6820
Epoch: 33, Loss: 1.3078, Train: 0.6786, Val: 0.7160, Test: 0.6920
Epoch: 34, Loss: 1.2877, Train: 0.6857, Val: 0.7200, Test: 0.6940
Epoch: 35, Loss: 1.2527, Train: 0.6929, Val: 0.7140, Test: 0.6960
Epoch: 36, Loss: 1.3104, Train: 0.6929, Val: 0.7140, Test: 0.6930
Epoch: 37, Loss: 1.1744, Train: 0.7071, Val: 0.7120, Test: 0.6960
Epoch: 38, Loss: 1.1311, Train: 0.7286, Val: 0.7160, Test: 0.7020
Epoch: 39, Loss: 1.2498, Train: 0.7857, Val: 0.7260, Test: 0.7090
Epoch: 40, Loss: 1.0825, Train: 0.8000, Val: 0.7360, Test: 0.7250
Epoch: 41, Loss: 1.0813, Train: 0.8286, Val: 0.7320, Test: 0.7300
Epoch: 42, Loss: 1.0599, Train: 0.8286, Val: 0.7320, Test: 0.7290
Epoch: 43, Loss: 0.9960, Train: 0.8357, Val: 0.7240, Test: 0.7310
Epoch: 44, Loss: 1.0726, Train: 0.8357, Val: 0.7320, Test: 0.7310
Epoch: 45, Loss: 0.9441, Train: 0.8357, Val: 0.7280, Test: 0.7270
Epoch: 46, Loss: 0.9282, Train: 0.8643, Val: 0.7320, Test: 0.7380
Epoch: 47, Loss: 0.9215, Train: 0.9429, Val: 0.7700, Test: 0.7750
Epoch: 48, Loss: 0.9634, Train: 0.9643, Val: 0.7760, Test: 0.7860
Epoch: 49, Loss: 1.1114, Train: 0.9786, Val: 0.7740, Test: 0.7870
Epoch: 50, Loss: 1.0174, Train: 0.9714, Val: 0.7600, Test: 0.7830
MAD:  0.6504
Best Test Accuracy: 0.7870, Val Accuracy: 0.7740, Train Accuracy: 0.9786
Training completed.
Seed:  5
Epoch: 1, Loss: 1.9491, Train: 0.2214, Val: 0.2380, Test: 0.2200
Epoch: 2, Loss: 1.9391, Train: 0.3571, Val: 0.3580, Test: 0.3450
Epoch: 3, Loss: 1.9359, Train: 0.4429, Val: 0.4280, Test: 0.4360
Epoch: 4, Loss: 1.9297, Train: 0.4786, Val: 0.4620, Test: 0.4650
Epoch: 5, Loss: 1.9240, Train: 0.5071, Val: 0.4720, Test: 0.4800
Epoch: 6, Loss: 1.9188, Train: 0.5714, Val: 0.4920, Test: 0.4930
Epoch: 7, Loss: 1.9003, Train: 0.5714, Val: 0.5000, Test: 0.4940
Epoch: 8, Loss: 1.9039, Train: 0.5714, Val: 0.5020, Test: 0.5010
Epoch: 9, Loss: 1.8853, Train: 0.5714, Val: 0.5040, Test: 0.4940
Epoch: 10, Loss: 1.8848, Train: 0.5714, Val: 0.5080, Test: 0.5000
Epoch: 11, Loss: 1.8556, Train: 0.5714, Val: 0.5180, Test: 0.5060
Epoch: 12, Loss: 1.8756, Train: 0.5786, Val: 0.5260, Test: 0.5150
Epoch: 13, Loss: 1.8494, Train: 0.5786, Val: 0.5400, Test: 0.5240
Epoch: 14, Loss: 1.8313, Train: 0.5786, Val: 0.5500, Test: 0.5330
Epoch: 15, Loss: 1.8041, Train: 0.5786, Val: 0.5580, Test: 0.5360
Epoch: 16, Loss: 1.7751, Train: 0.5857, Val: 0.5540, Test: 0.5350
Epoch: 17, Loss: 1.7750, Train: 0.5857, Val: 0.5460, Test: 0.5350
Epoch: 18, Loss: 1.7761, Train: 0.5786, Val: 0.5440, Test: 0.5230
Epoch: 19, Loss: 1.7147, Train: 0.5786, Val: 0.5380, Test: 0.5170
Epoch: 20, Loss: 1.6949, Train: 0.5786, Val: 0.5260, Test: 0.5140
Epoch: 21, Loss: 1.6825, Train: 0.5786, Val: 0.5300, Test: 0.5160
Epoch: 22, Loss: 1.5829, Train: 0.5786, Val: 0.5320, Test: 0.5200
Epoch: 23, Loss: 1.6091, Train: 0.5857, Val: 0.5340, Test: 0.5230
Epoch: 24, Loss: 1.5670, Train: 0.5857, Val: 0.5460, Test: 0.5310
Epoch: 25, Loss: 1.4595, Train: 0.5929, Val: 0.5600, Test: 0.5390
Epoch: 26, Loss: 1.5002, Train: 0.5929, Val: 0.5700, Test: 0.5430
Epoch: 27, Loss: 1.4780, Train: 0.5857, Val: 0.5680, Test: 0.5470
Epoch: 28, Loss: 1.3653, Train: 0.5857, Val: 0.5760, Test: 0.5560
Epoch: 29, Loss: 1.4680, Train: 0.5929, Val: 0.5800, Test: 0.5560
Epoch: 30, Loss: 1.3789, Train: 0.6071, Val: 0.5860, Test: 0.5580
Epoch: 31, Loss: 1.4492, Train: 0.6214, Val: 0.5940, Test: 0.5720
Epoch: 32, Loss: 1.3973, Train: 0.6714, Val: 0.6060, Test: 0.5870
Epoch: 33, Loss: 1.3461, Train: 0.6929, Val: 0.6180, Test: 0.6000
Epoch: 34, Loss: 1.2903, Train: 0.7000, Val: 0.6240, Test: 0.6080
Epoch: 35, Loss: 1.2940, Train: 0.7071, Val: 0.6180, Test: 0.6110
Epoch: 36, Loss: 1.2033, Train: 0.7143, Val: 0.6120, Test: 0.6140
Epoch: 37, Loss: 1.1778, Train: 0.7143, Val: 0.6140, Test: 0.6220
Epoch: 38, Loss: 1.1529, Train: 0.7143, Val: 0.6180, Test: 0.6230
Epoch: 39, Loss: 1.2492, Train: 0.7143, Val: 0.6240, Test: 0.6270
Epoch: 40, Loss: 1.1485, Train: 0.7143, Val: 0.6240, Test: 0.6300
Epoch: 41, Loss: 1.1685, Train: 0.7143, Val: 0.6260, Test: 0.6330
Epoch: 42, Loss: 1.1278, Train: 0.7143, Val: 0.6280, Test: 0.6360
Epoch: 43, Loss: 1.1541, Train: 0.7143, Val: 0.6220, Test: 0.6370
Epoch: 44, Loss: 1.1044, Train: 0.7214, Val: 0.6200, Test: 0.6280
Epoch: 45, Loss: 1.1303, Train: 0.7286, Val: 0.6200, Test: 0.6260
Epoch: 46, Loss: 1.0417, Train: 0.7357, Val: 0.6180, Test: 0.6250
Epoch: 47, Loss: 1.0884, Train: 0.7357, Val: 0.6180, Test: 0.6230
Epoch: 48, Loss: 1.0743, Train: 0.7500, Val: 0.6360, Test: 0.6300
Epoch: 49, Loss: 0.9306, Train: 0.7929, Val: 0.6560, Test: 0.6560
Epoch: 50, Loss: 1.0813, Train: 0.7929, Val: 0.6760, Test: 0.6860
MAD:  0.7496
Best Test Accuracy: 0.6860, Val Accuracy: 0.6760, Train Accuracy: 0.7929
Training completed.
Seed:  6
Epoch: 1, Loss: 1.9481, Train: 0.1929, Val: 0.3460, Test: 0.3320
Epoch: 2, Loss: 1.9426, Train: 0.2071, Val: 0.3540, Test: 0.3460
Epoch: 3, Loss: 1.9357, Train: 0.2714, Val: 0.3520, Test: 0.3450
Epoch: 4, Loss: 1.9328, Train: 0.3500, Val: 0.3640, Test: 0.3460
Epoch: 5, Loss: 1.9179, Train: 0.4786, Val: 0.4260, Test: 0.4160
Epoch: 6, Loss: 1.9172, Train: 0.5643, Val: 0.4780, Test: 0.4910
Epoch: 7, Loss: 1.8992, Train: 0.6071, Val: 0.5240, Test: 0.5250
Epoch: 8, Loss: 1.8934, Train: 0.6214, Val: 0.5260, Test: 0.5470
Epoch: 9, Loss: 1.8832, Train: 0.6429, Val: 0.5380, Test: 0.5520
Epoch: 10, Loss: 1.8653, Train: 0.6429, Val: 0.5460, Test: 0.5550
Epoch: 11, Loss: 1.8573, Train: 0.6429, Val: 0.5620, Test: 0.5670
Epoch: 12, Loss: 1.8490, Train: 0.6357, Val: 0.5740, Test: 0.5740
Epoch: 13, Loss: 1.8329, Train: 0.6500, Val: 0.5720, Test: 0.5850
Epoch: 14, Loss: 1.8095, Train: 0.6429, Val: 0.5760, Test: 0.5950
Epoch: 15, Loss: 1.7665, Train: 0.6500, Val: 0.5820, Test: 0.6070
Epoch: 16, Loss: 1.7663, Train: 0.6643, Val: 0.5860, Test: 0.6140
Epoch: 17, Loss: 1.7160, Train: 0.6714, Val: 0.5940, Test: 0.6290
Epoch: 18, Loss: 1.7066, Train: 0.6929, Val: 0.5960, Test: 0.6390
Epoch: 19, Loss: 1.6991, Train: 0.7071, Val: 0.6000, Test: 0.6430
Epoch: 20, Loss: 1.6713, Train: 0.7071, Val: 0.6140, Test: 0.6550
Epoch: 21, Loss: 1.6174, Train: 0.7286, Val: 0.6220, Test: 0.6600
Epoch: 22, Loss: 1.5876, Train: 0.7429, Val: 0.6280, Test: 0.6640
Epoch: 23, Loss: 1.5704, Train: 0.7429, Val: 0.6320, Test: 0.6680
Epoch: 24, Loss: 1.5546, Train: 0.7500, Val: 0.6360, Test: 0.6670
Epoch: 25, Loss: 1.5892, Train: 0.7571, Val: 0.6340, Test: 0.6710
Epoch: 26, Loss: 1.4685, Train: 0.7643, Val: 0.6420, Test: 0.6780
Epoch: 27, Loss: 1.4630, Train: 0.7643, Val: 0.6480, Test: 0.6820
Epoch: 28, Loss: 1.4496, Train: 0.7714, Val: 0.6620, Test: 0.6860
Epoch: 29, Loss: 1.3449, Train: 0.7857, Val: 0.6700, Test: 0.7010
Epoch: 30, Loss: 1.2900, Train: 0.7714, Val: 0.6800, Test: 0.7120
Epoch: 31, Loss: 1.3351, Train: 0.7714, Val: 0.6820, Test: 0.7160
Epoch: 32, Loss: 1.2458, Train: 0.7643, Val: 0.6820, Test: 0.7220
Epoch: 33, Loss: 1.2017, Train: 0.7714, Val: 0.6860, Test: 0.7200
Epoch: 34, Loss: 1.2979, Train: 0.7857, Val: 0.6860, Test: 0.7230
Epoch: 35, Loss: 1.1555, Train: 0.8000, Val: 0.6940, Test: 0.7270
Epoch: 36, Loss: 1.0571, Train: 0.8000, Val: 0.6940, Test: 0.7260
Epoch: 37, Loss: 1.1075, Train: 0.8000, Val: 0.6960, Test: 0.7230
Epoch: 38, Loss: 1.1424, Train: 0.8000, Val: 0.7000, Test: 0.7240
Epoch: 39, Loss: 1.0408, Train: 0.8071, Val: 0.7000, Test: 0.7190
Epoch: 40, Loss: 1.0576, Train: 0.8071, Val: 0.7060, Test: 0.7150
Epoch: 41, Loss: 0.9719, Train: 0.8143, Val: 0.7060, Test: 0.7140
Epoch: 42, Loss: 1.0610, Train: 0.8214, Val: 0.7040, Test: 0.7210
Epoch: 43, Loss: 1.0649, Train: 0.8286, Val: 0.7060, Test: 0.7250
Epoch: 44, Loss: 0.9347, Train: 0.8286, Val: 0.7060, Test: 0.7220
Epoch: 45, Loss: 1.0652, Train: 0.8286, Val: 0.7060, Test: 0.7230
Epoch: 46, Loss: 0.9880, Train: 0.8357, Val: 0.7100, Test: 0.7260
Epoch: 47, Loss: 0.9918, Train: 0.8357, Val: 0.7100, Test: 0.7250
Epoch: 48, Loss: 0.8468, Train: 0.8357, Val: 0.7100, Test: 0.7140
Epoch: 49, Loss: 0.9739, Train: 0.8357, Val: 0.7080, Test: 0.7090
Epoch: 50, Loss: 1.0039, Train: 0.8357, Val: 0.7060, Test: 0.7070
MAD:  0.5942
Best Test Accuracy: 0.7270, Val Accuracy: 0.6940, Train Accuracy: 0.8000
Training completed.
Seed:  7
Epoch: 1, Loss: 1.9472, Train: 0.3071, Val: 0.1840, Test: 0.2050
Epoch: 2, Loss: 1.9380, Train: 0.4929, Val: 0.2720, Test: 0.3180
Epoch: 3, Loss: 1.9350, Train: 0.5357, Val: 0.3420, Test: 0.3660
Epoch: 4, Loss: 1.9234, Train: 0.5786, Val: 0.3840, Test: 0.3990
Epoch: 5, Loss: 1.9092, Train: 0.6071, Val: 0.4260, Test: 0.4330
Epoch: 6, Loss: 1.9054, Train: 0.6500, Val: 0.4560, Test: 0.4590
Epoch: 7, Loss: 1.8889, Train: 0.6857, Val: 0.4760, Test: 0.4750
Epoch: 8, Loss: 1.8858, Train: 0.6929, Val: 0.4820, Test: 0.4860
Epoch: 9, Loss: 1.8651, Train: 0.7143, Val: 0.4840, Test: 0.4900
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 10, Loss: 1.8559, Train: 0.7143, Val: 0.4880, Test: 0.4910
Epoch: 11, Loss: 1.8297, Train: 0.7143, Val: 0.4820, Test: 0.4900
Epoch: 12, Loss: 1.8137, Train: 0.7143, Val: 0.4900, Test: 0.4950
Epoch: 13, Loss: 1.8027, Train: 0.7214, Val: 0.4940, Test: 0.4990
Epoch: 14, Loss: 1.7748, Train: 0.7286, Val: 0.4940, Test: 0.5030
Epoch: 15, Loss: 1.7506, Train: 0.7357, Val: 0.4920, Test: 0.5110
Epoch: 16, Loss: 1.7451, Train: 0.7500, Val: 0.5040, Test: 0.5220
Epoch: 17, Loss: 1.6729, Train: 0.7500, Val: 0.5080, Test: 0.5250
Epoch: 18, Loss: 1.6461, Train: 0.7500, Val: 0.5120, Test: 0.5250
Epoch: 19, Loss: 1.6400, Train: 0.7571, Val: 0.5140, Test: 0.5260
Epoch: 20, Loss: 1.6249, Train: 0.7571, Val: 0.5280, Test: 0.5290
Epoch: 21, Loss: 1.5961, Train: 0.7571, Val: 0.5380, Test: 0.5350
Epoch: 22, Loss: 1.5009, Train: 0.7786, Val: 0.5540, Test: 0.5400
Epoch: 23, Loss: 1.4572, Train: 0.7857, Val: 0.5580, Test: 0.5420
Epoch: 24, Loss: 1.4132, Train: 0.7857, Val: 0.5600, Test: 0.5420
Epoch: 25, Loss: 1.4869, Train: 0.7857, Val: 0.5600, Test: 0.5470
Epoch: 26, Loss: 1.3828, Train: 0.7929, Val: 0.5680, Test: 0.5500
Epoch: 27, Loss: 1.4435, Train: 0.8000, Val: 0.5740, Test: 0.5590
Epoch: 28, Loss: 1.2919, Train: 0.8143, Val: 0.5800, Test: 0.5650
Epoch: 29, Loss: 1.2488, Train: 0.8143, Val: 0.5800, Test: 0.5690
Epoch: 30, Loss: 1.2572, Train: 0.8214, Val: 0.5840, Test: 0.5720
Epoch: 31, Loss: 1.2848, Train: 0.8214, Val: 0.5860, Test: 0.5740
Epoch: 32, Loss: 1.1842, Train: 0.8286, Val: 0.5880, Test: 0.5750
Epoch: 33, Loss: 1.2067, Train: 0.8286, Val: 0.5920, Test: 0.5750
Epoch: 34, Loss: 1.0808, Train: 0.8286, Val: 0.5940, Test: 0.5740
Epoch: 35, Loss: 1.0183, Train: 0.8286, Val: 0.5920, Test: 0.5740
Epoch: 36, Loss: 0.9628, Train: 0.8357, Val: 0.5920, Test: 0.5760
Epoch: 37, Loss: 1.0218, Train: 0.8357, Val: 0.5920, Test: 0.5770
Epoch: 38, Loss: 1.0302, Train: 0.8357, Val: 0.5900, Test: 0.5760
Epoch: 39, Loss: 0.9745, Train: 0.8357, Val: 0.5900, Test: 0.5750
Epoch: 40, Loss: 0.9299, Train: 0.8357, Val: 0.5920, Test: 0.5720
Epoch: 41, Loss: 0.9291, Train: 0.8429, Val: 0.5900, Test: 0.5710
Epoch: 42, Loss: 0.9916, Train: 0.8429, Val: 0.5880, Test: 0.5740
Epoch: 43, Loss: 0.8896, Train: 0.8429, Val: 0.5900, Test: 0.5730
Epoch: 44, Loss: 0.8316, Train: 0.8429, Val: 0.5860, Test: 0.5730
Epoch: 45, Loss: 1.0051, Train: 0.8429, Val: 0.5860, Test: 0.5750
Epoch: 46, Loss: 0.9833, Train: 0.8429, Val: 0.5860, Test: 0.5730
Epoch: 47, Loss: 0.8291, Train: 0.8429, Val: 0.5880, Test: 0.5740
Epoch: 48, Loss: 0.8269, Train: 0.8429, Val: 0.5880, Test: 0.5770
Epoch: 49, Loss: 0.7509, Train: 0.8429, Val: 0.5840, Test: 0.5780
Epoch: 50, Loss: 0.9043, Train: 0.8429, Val: 0.5900, Test: 0.5770
MAD:  0.7743
Best Test Accuracy: 0.5780, Val Accuracy: 0.5840, Train Accuracy: 0.8429
Training completed.
Seed:  8
Epoch: 1, Loss: 1.9461, Train: 0.2429, Val: 0.1840, Test: 0.1860
Epoch: 2, Loss: 1.9410, Train: 0.2714, Val: 0.1680, Test: 0.1890
Epoch: 3, Loss: 1.9360, Train: 0.3000, Val: 0.1780, Test: 0.2060
Epoch: 4, Loss: 1.9302, Train: 0.3571, Val: 0.2160, Test: 0.2370
Epoch: 5, Loss: 1.9224, Train: 0.4357, Val: 0.2600, Test: 0.2770
Epoch: 6, Loss: 1.9252, Train: 0.4500, Val: 0.3000, Test: 0.3070
Epoch: 7, Loss: 1.9091, Train: 0.4714, Val: 0.3200, Test: 0.3220
Epoch: 8, Loss: 1.9101, Train: 0.5429, Val: 0.3340, Test: 0.3320
Epoch: 9, Loss: 1.8949, Train: 0.5857, Val: 0.3500, Test: 0.3480
Epoch: 10, Loss: 1.8857, Train: 0.6071, Val: 0.3600, Test: 0.3660
Epoch: 11, Loss: 1.8736, Train: 0.6214, Val: 0.3580, Test: 0.3880
Epoch: 12, Loss: 1.8674, Train: 0.6429, Val: 0.3660, Test: 0.4020
Epoch: 13, Loss: 1.8504, Train: 0.6786, Val: 0.3900, Test: 0.4200
Epoch: 14, Loss: 1.8173, Train: 0.6929, Val: 0.4220, Test: 0.4470
Epoch: 15, Loss: 1.8024, Train: 0.7071, Val: 0.4420, Test: 0.4620
Epoch: 16, Loss: 1.7939, Train: 0.7143, Val: 0.4500, Test: 0.4690
Epoch: 17, Loss: 1.7545, Train: 0.7143, Val: 0.4500, Test: 0.4770
Epoch: 18, Loss: 1.7571, Train: 0.7143, Val: 0.4540, Test: 0.4770
Epoch: 19, Loss: 1.7652, Train: 0.7286, Val: 0.4700, Test: 0.4860
Epoch: 20, Loss: 1.7053, Train: 0.7286, Val: 0.4840, Test: 0.5000
Epoch: 21, Loss: 1.6472, Train: 0.7286, Val: 0.4820, Test: 0.5040
Epoch: 22, Loss: 1.5955, Train: 0.7286, Val: 0.4820, Test: 0.5050
Epoch: 23, Loss: 1.6051, Train: 0.7429, Val: 0.4920, Test: 0.5050
Epoch: 24, Loss: 1.5827, Train: 0.7714, Val: 0.5080, Test: 0.5220
Epoch: 25, Loss: 1.5508, Train: 0.7857, Val: 0.5480, Test: 0.5540
Epoch: 26, Loss: 1.5300, Train: 0.8000, Val: 0.5720, Test: 0.5850
Epoch: 27, Loss: 1.4814, Train: 0.8143, Val: 0.5780, Test: 0.6030
Epoch: 28, Loss: 1.3587, Train: 0.8071, Val: 0.5920, Test: 0.6250
Epoch: 29, Loss: 1.3924, Train: 0.8143, Val: 0.5980, Test: 0.6310
Epoch: 30, Loss: 1.3056, Train: 0.8214, Val: 0.6020, Test: 0.6340
Epoch: 31, Loss: 1.3091, Train: 0.8286, Val: 0.6020, Test: 0.6350
Epoch: 32, Loss: 1.3525, Train: 0.8357, Val: 0.6020, Test: 0.6370
Epoch: 33, Loss: 1.2781, Train: 0.8429, Val: 0.6080, Test: 0.6340
Epoch: 34, Loss: 1.1502, Train: 0.8929, Val: 0.6340, Test: 0.6620
Epoch: 35, Loss: 1.1762, Train: 0.9214, Val: 0.6400, Test: 0.6860
Epoch: 36, Loss: 1.2310, Train: 0.9429, Val: 0.6780, Test: 0.7070
Epoch: 37, Loss: 1.0790, Train: 0.9643, Val: 0.6960, Test: 0.7350
Epoch: 38, Loss: 0.9985, Train: 0.9714, Val: 0.7180, Test: 0.7510
Epoch: 39, Loss: 1.0541, Train: 0.9786, Val: 0.7340, Test: 0.7630
Epoch: 40, Loss: 0.9391, Train: 0.9786, Val: 0.7520, Test: 0.7610
Epoch: 41, Loss: 0.9502, Train: 0.9786, Val: 0.7460, Test: 0.7670
Epoch: 42, Loss: 0.8335, Train: 0.9857, Val: 0.7540, Test: 0.7670
Epoch: 43, Loss: 0.7875, Train: 0.9857, Val: 0.7640, Test: 0.7710
Epoch: 44, Loss: 0.8570, Train: 0.9857, Val: 0.7640, Test: 0.7760
Epoch: 45, Loss: 0.7730, Train: 0.9857, Val: 0.7660, Test: 0.7710
Epoch: 46, Loss: 0.7971, Train: 0.9786, Val: 0.7620, Test: 0.7750
Epoch: 47, Loss: 0.7633, Train: 0.9786, Val: 0.7560, Test: 0.7710
Epoch: 48, Loss: 0.7439, Train: 0.9786, Val: 0.7560, Test: 0.7720
Epoch: 49, Loss: 0.6276, Train: 0.9786, Val: 0.7580, Test: 0.7730
Epoch: 50, Loss: 0.7712, Train: 0.9786, Val: 0.7580, Test: 0.7760
MAD:  0.6024
Best Test Accuracy: 0.7760, Val Accuracy: 0.7640, Train Accuracy: 0.9857
Training completed.
Seed:  9
Epoch: 1, Loss: 1.9438, Train: 0.2071, Val: 0.1040, Test: 0.1310
Epoch: 2, Loss: 1.9400, Train: 0.2643, Val: 0.1200, Test: 0.1410
Epoch: 3, Loss: 1.9371, Train: 0.3286, Val: 0.1520, Test: 0.1880
Epoch: 4, Loss: 1.9310, Train: 0.3714, Val: 0.1700, Test: 0.2080
Epoch: 5, Loss: 1.9202, Train: 0.3857, Val: 0.1920, Test: 0.2290
Epoch: 6, Loss: 1.9096, Train: 0.4143, Val: 0.2060, Test: 0.2370
Epoch: 7, Loss: 1.9103, Train: 0.4214, Val: 0.2120, Test: 0.2390
Epoch: 8, Loss: 1.9049, Train: 0.4214, Val: 0.2140, Test: 0.2400
Epoch: 9, Loss: 1.8855, Train: 0.4143, Val: 0.2140, Test: 0.2410
Epoch: 10, Loss: 1.8615, Train: 0.4143, Val: 0.2160, Test: 0.2450
Epoch: 11, Loss: 1.8785, Train: 0.4143, Val: 0.2160, Test: 0.2450
Epoch: 12, Loss: 1.8451, Train: 0.4143, Val: 0.2160, Test: 0.2480
Epoch: 13, Loss: 1.8301, Train: 0.4143, Val: 0.2160, Test: 0.2510
Epoch: 14, Loss: 1.8142, Train: 0.4214, Val: 0.2180, Test: 0.2510
Epoch: 15, Loss: 1.7946, Train: 0.4214, Val: 0.2180, Test: 0.2490
Epoch: 16, Loss: 1.7988, Train: 0.4214, Val: 0.2180, Test: 0.2530
Epoch: 17, Loss: 1.7493, Train: 0.4214, Val: 0.2180, Test: 0.2540
Epoch: 18, Loss: 1.7327, Train: 0.4214, Val: 0.2180, Test: 0.2540
Epoch: 19, Loss: 1.7025, Train: 0.4214, Val: 0.2180, Test: 0.2550
Epoch: 20, Loss: 1.7124, Train: 0.4214, Val: 0.2180, Test: 0.2540
Epoch: 21, Loss: 1.6266, Train: 0.4214, Val: 0.2200, Test: 0.2550
Epoch: 22, Loss: 1.6554, Train: 0.4214, Val: 0.2200, Test: 0.2550
Epoch: 23, Loss: 1.6060, Train: 0.4214, Val: 0.2200, Test: 0.2530
Epoch: 24, Loss: 1.5421, Train: 0.4286, Val: 0.2200, Test: 0.2550
Epoch: 25, Loss: 1.5801, Train: 0.4286, Val: 0.2200, Test: 0.2540
Epoch: 26, Loss: 1.5244, Train: 0.4286, Val: 0.2220, Test: 0.2570
Epoch: 27, Loss: 1.5668, Train: 0.4286, Val: 0.2200, Test: 0.2580
Epoch: 28, Loss: 1.4498, Train: 0.4286, Val: 0.2200, Test: 0.2580
Epoch: 29, Loss: 1.4058, Train: 0.4286, Val: 0.2200, Test: 0.2580
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
/home/yiyi/code/code/DIR-GNN/train/cora.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(f'./pkl/{save_name}.pkl'))
Epoch: 30, Loss: 1.5216, Train: 0.4357, Val: 0.2220, Test: 0.2570
Epoch: 31, Loss: 1.5091, Train: 0.4357, Val: 0.2220, Test: 0.2580
Epoch: 32, Loss: 1.4871, Train: 0.4357, Val: 0.2220, Test: 0.2580
Epoch: 33, Loss: 1.4367, Train: 0.4357, Val: 0.2240, Test: 0.2580
Epoch: 34, Loss: 1.4464, Train: 0.4357, Val: 0.2240, Test: 0.2570
Epoch: 35, Loss: 1.4007, Train: 0.4357, Val: 0.2260, Test: 0.2570
Epoch: 36, Loss: 1.3025, Train: 0.4357, Val: 0.2220, Test: 0.2590
Epoch: 37, Loss: 1.4055, Train: 0.4357, Val: 0.2220, Test: 0.2580
Epoch: 38, Loss: 1.3381, Train: 0.4357, Val: 0.2220, Test: 0.2590
Epoch: 39, Loss: 1.3722, Train: 0.4357, Val: 0.2240, Test: 0.2590
Epoch: 40, Loss: 1.3112, Train: 0.4357, Val: 0.2260, Test: 0.2600
Epoch: 41, Loss: 1.3117, Train: 0.4357, Val: 0.2220, Test: 0.2600
Epoch: 42, Loss: 1.3673, Train: 0.4357, Val: 0.2220, Test: 0.2600
Epoch: 43, Loss: 1.3673, Train: 0.4357, Val: 0.2240, Test: 0.2570
Epoch: 44, Loss: 1.3644, Train: 0.4429, Val: 0.2260, Test: 0.2560
Epoch: 45, Loss: 1.4075, Train: 0.4714, Val: 0.2340, Test: 0.2640
Epoch: 46, Loss: 1.3807, Train: 0.5143, Val: 0.2600, Test: 0.2880
Epoch: 47, Loss: 1.3657, Train: 0.5500, Val: 0.3000, Test: 0.3240
Epoch: 48, Loss: 1.3149, Train: 0.5643, Val: 0.3120, Test: 0.3420
Epoch: 49, Loss: 1.3203, Train: 0.5643, Val: 0.3280, Test: 0.3530
Epoch: 50, Loss: 1.4389, Train: 0.5643, Val: 0.3340, Test: 0.3610
MAD:  0.8482
Best Test Accuracy: 0.3610, Val Accuracy: 0.3340, Train Accuracy: 0.5643
Training completed.
Average Test Accuracy:  0.6455 ± 0.12153949975213821
Average MAD:  0.6575 ± 0.116918210728697
